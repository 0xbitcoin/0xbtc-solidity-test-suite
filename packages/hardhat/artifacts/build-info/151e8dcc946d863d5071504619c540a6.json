{
  "id": "151e8dcc946d863d5071504619c540a6",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.4.18",
  "solcLongVersion": "0.4.18+commit.9cf6e910",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/0xBitcoinExtended.sol": {
        "content": "/**\n *Submitted for verification at Etherscan.io on 2018-02-06\n*/\n\npragma solidity ^0.4.18;\n\n\n// ----------------------------------------------------------------------------\n\n// '0xBitcoin Token' contract\n\n// Mineable ERC20 Token using Proof Of Work\n\n//\n\n// Symbol      : 0xBTC\n\n// Name        : 0xBitcoin Token\n\n// Total supply: 21,000,000.00\n\n// Decimals    : 8\n\n//\n\n\n// ----------------------------------------------------------------------------\n\n\n\n// ----------------------------------------------------------------------------\n\n// Safe maths\n\n// ----------------------------------------------------------------------------\n\nlibrary SafeMath {\n\n    function add(uint a, uint b) internal pure returns (uint c) {\n\n        c = a + b;\n\n        require(c >= a);\n\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint c) {\n\n        require(b <= a);\n\n        c = a - b;\n\n    }\n\n    function mul(uint a, uint b) internal pure returns (uint c) {\n\n        c = a * b;\n\n        require(a == 0 || c / a == b);\n\n    }\n\n    function div(uint a, uint b) internal pure returns (uint c) {\n\n        require(b > 0);\n\n        c = a / b;\n\n    }\n\n}\n\n\n\nlibrary ExtendedMath {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\n\n// ----------------------------------------------------------------------------\n\n// ERC Token Standard #20 Interface\n\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n// ----------------------------------------------------------------------------\n\ncontract ERC20Interface {\n\n    function totalSupply() public constant returns (uint);\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n\n    function transfer(address to, uint tokens) public returns (bool success);\n\n    function approve(address spender, uint tokens) public returns (bool success);\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Contract function to receive approval and execute function in one call\n\n//\n\n// Borrowed from MiniMeToken\n\n// ----------------------------------------------------------------------------\n\ncontract ApproveAndCallFallBack {\n\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Owned contract\n\n// ----------------------------------------------------------------------------\n\ncontract Owned {\n\n    address public owner;\n\n    address public newOwner;\n\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n\n    function Owned() public {\n\n        owner = msg.sender;\n\n    }\n\n\n    modifier onlyOwner {\n\n        require(msg.sender == owner);\n\n        _;\n\n    }\n\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n\n        newOwner = _newOwner;\n\n    }\n\n    function acceptOwnership() public {\n\n        require(msg.sender == newOwner);\n\n        OwnershipTransferred(owner, newOwner);\n\n        owner = newOwner;\n\n        newOwner = address(0);\n\n    }\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// ERC20 Token, with the addition of symbol, name and decimals and an\n\n// initial fixed supply\n\n// ----------------------------------------------------------------------------\n\ncontract _0xBitcoinToken is ERC20Interface, Owned {\n\n    using SafeMath for uint;\n    using ExtendedMath for uint;\n\n\n    string public symbol;\n\n    string public  name;\n\n    uint8 public decimals;\n\n    uint public _totalSupply;\n\n\n\n     uint public latestDifficultyPeriodStarted;\n\n\n\n    uint public epochCount;//number of 'blocks' mined\n\n\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\n\n\n    //a little number\n    uint public  _MINIMUM_TARGET = 2**16;\n\n\n      //a big number is easier ; just find a solution that is smaller\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\n    uint public  _MAXIMUM_TARGET = 2**234;\n\n\n    uint public miningTarget;\n\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\n\n\n\n    uint public rewardEra;\n    uint public maxSupplyForEra;\n\n\n    address public lastRewardTo;\n    uint public lastRewardAmount;\n    uint public lastRewardEthBlockNumber;\n\n    bool locked = false;\n\n    mapping(bytes32 => bytes32) solutionForChallenge;\n\n    uint public tokensMinted;\n\n    mapping(address => uint) balances;\n\n\n    mapping(address => mapping(address => uint)) allowed;\n\n\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n\n    // ------------------------------------------------------------------------\n\n    // Constructor\n\n    // ------------------------------------------------------------------------\n\n    function _0xBitcoinToken() public onlyOwner{\n\n\n\n        symbol = \"0xBTC\";\n\n        name = \"0xBitcoin Token\";\n\n        decimals = 8;\n\n        _totalSupply = 21000000 * 10**uint(decimals);\n\n        if(locked) revert();\n        locked = true;\n\n        tokensMinted = 0;\n\n        rewardEra = 0;\n        maxSupplyForEra = _totalSupply.div(2);\n\n        miningTarget = _MAXIMUM_TARGET;\n\n        latestDifficultyPeriodStarted = block.number;\n\n        _startNewMiningEpoch();\n\n\n        //The owner gets nothing! You must mine this ERC20 token\n        //balances[owner] = _totalSupply;\n        //Transfer(address(0), owner, _totalSupply);\n\n    }\n\n\n\n\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\n\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\n\n            //the challenge digest must match the expected\n            if (digest != challenge_digest) revert();\n\n            //the digest must be smaller than the target\n            if(uint256(digest) > miningTarget) revert();\n\n\n            //only allow one reward for each challenge\n             bytes32 solution = solutionForChallenge[challengeNumber];\n             solutionForChallenge[challengeNumber] = digest;\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\n\n\n            uint reward_amount = getMiningReward();\n\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\n\n            tokensMinted = tokensMinted.add(reward_amount);\n\n\n            //Cannot mint more tokens than there are\n            assert(tokensMinted <= maxSupplyForEra);\n\n            //set readonly diagnostics data\n            lastRewardTo = msg.sender;\n            lastRewardAmount = reward_amount;\n            lastRewardEthBlockNumber = block.number;\n\n\n             _startNewMiningEpoch();\n\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n\n           return true;\n\n        }\n\n\n    //a new 'block' to be mined\n    function _startNewMiningEpoch() internal {\n\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\n\n      //40 is the final reward era, almost all tokens minted\n      //once the final era is reached, more tokens will not be given out because the assert function\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\n      {\n        rewardEra = rewardEra + 1;\n      }\n\n      //set the next minted supply at which the era will change\n      // total supply is 2100000000000000  because of 8 decimal places\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n      epochCount = epochCount.add(1);\n\n      //every so often, readjust difficulty. Dont readjust when deploying\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\n      {\n        _reAdjustDifficulty();\n      }\n\n\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\n      //do this last since this is a protection mechanism in the mint() function\n      challengeNumber = block.blockhash(block.number - 1);\n\n\n\n\n\n\n    }\n\n\n\n\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\n\n    //readjust the target by 5 percent\n    function _reAdjustDifficulty() internal {\n\n\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\n        //assume 360 ethereum blocks per hour\n\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\n\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\n\n        //if there were less eth blocks passed in time than expected\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\n        {\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\n\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\n\n          //make it harder\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\n        }else{\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\n\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\n\n          //make it easier\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\n        }\n\n\n\n        latestDifficultyPeriodStarted = block.number;\n\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\n        {\n          miningTarget = _MINIMUM_TARGET;\n        }\n\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\n        {\n          miningTarget = _MAXIMUM_TARGET;\n        }\n    }\n\n\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\n    function getChallengeNumber() public constant returns (bytes32) {\n        return challengeNumber;\n    }\n\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n     function getMiningDifficulty() public constant returns (uint) {\n        return _MAXIMUM_TARGET.div(miningTarget);\n    }\n\n    function getMiningTarget() public constant returns (uint) {\n       return miningTarget;\n   }\n\n\n\n    //21m coins total\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\n    function getMiningReward() public constant returns (uint) {\n        //once we get half way thru the coins, only get 25 per block\n\n         //every reward era, the reward amount halves.\n\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n    }\n\n    //help debug mining software\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n        return digest;\n\n      }\n\n        //help debug mining software\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\n\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n          if(uint256(digest) > testTarget) revert();\n\n          return (digest == challenge_digest);\n\n        }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Total supply\n\n    // ------------------------------------------------------------------------\n\n    function totalSupply() public constant returns (uint) {\n\n        return _totalSupply  - balances[address(0)];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Get the token balance for account `tokenOwner`\n\n    // ------------------------------------------------------------------------\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n\n        return balances[tokenOwner];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer the balance from token owner's account to `to` account\n\n    // - Owner's account must have sufficient balance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transfer(address to, uint tokens) public returns (bool success) {\n\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(msg.sender, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account\n\n    //\n\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n    // recommends that there are no checks for the approval double-spend attack\n\n    // as this should be implemented in user interfaces\n\n    // ------------------------------------------------------------------------\n\n    function approve(address spender, uint tokens) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer `tokens` from the `from` account to the `to` account\n\n    //\n\n    // The calling account must already have sufficient tokens approve(...)-d\n\n    // for spending from the `from` account and\n\n    // - From account must have sufficient balance to transfer\n\n    // - Spender must have sufficient allowance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n\n        balances[from] = balances[from].sub(tokens);\n\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(from, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Returns the amount of tokens approved by the owner that can be\n\n    // transferred to the spender's account\n\n    // ------------------------------------------------------------------------\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n\n        return allowed[tokenOwner][spender];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account. The `spender` contract function\n\n    // `receiveApproval(...)` is then executed\n\n    // ------------------------------------------------------------------------\n\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Don't accept ETH\n\n    // ------------------------------------------------------------------------\n\n    function () public payable {\n\n        revert();\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Owner can transfer out any accidentally sent ERC20 tokens\n\n    // ------------------------------------------------------------------------\n\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n\n    }\n\n\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Extension methods just for testing purposes\n\n   \n    // ------------------------------------------------------------------------\n\n    function setTokensMinted(uint amt) public   {\n        tokensMinted = amt;\n    }\n\n\n    function mintWithoutPoW( ) public returns (bool success) {\n\n\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\n\n        //the challenge digest must match the expected\n        //if (digest != challenge_digest) revert();\n\n        //the digest must be smaller than the target\n        //if(uint256(digest) > miningTarget) revert();\n\n\n        //only allow one reward for each challenge\n            //bytes32 solution = solutionForChallenge[challengeNumber];\n            //solutionForChallenge[challengeNumber] = digest;\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\n\n\n        uint reward_amount = getMiningReward();\n\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\n\n        tokensMinted = tokensMinted.add(reward_amount);\n\n\n        //Cannot mint more tokens than there are\n        assert(tokensMinted <= maxSupplyForEra);\n\n        //set readonly diagnostics data\n        lastRewardTo = msg.sender;\n        lastRewardAmount = reward_amount;\n        lastRewardEthBlockNumber = block.number;\n\n\n            _startNewMiningEpoch();\n\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n\n        return true;\n\n    }\n\n\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/0xBitcoinExtended.sol": {
        "ApproveAndCallFallBack": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                },
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "ERC20Interface": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "ExtendedMath": {
          "abi": [],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":1148:1357  library ExtendedMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":1148:1357  library ExtendedMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820257b459754ddf894b569ad6c47a105069b19fc8627d31d2bd5e7e5f4eff551df0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820257b459754ddf894b569ad6c47a105069b19fc8627d31d2bd5e7e5f4eff551df0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x25 PUSH28 0x459754DDF894B569AD6C47A105069B19FC8627D31D2BD5E7E5F4EFF5 MLOAD 0xdf STOP 0x29 ",
              "sourceMap": "1148:209:0:-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600080fd00a165627a7a72305820257b459754ddf894b569ad6c47a105069b19fc8627d31d2bd5e7e5f4eff551df0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x25 PUSH28 0x459754DDF894B569AD6C47A105069B19FC8627D31D2BD5E7E5F4EFF5 MLOAD 0xdf STOP 0x29 ",
              "sourceMap": "1148:209:0:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "10600",
                "executionCost": "61",
                "totalCost": "10661"
              },
              "internal": {
                "limitLessThan(uint256,uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "MSTORE"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "ISZERO"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "JUMPI"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "DUP1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "REVERT"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "DUP1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "CODECOPY"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820257b459754ddf894b569ad6c47a105069b19fc8627d31d2bd5e7e5f4eff551df0029",
                  ".code": [
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "REVERT"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"ExtendedMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "Owned": {
          "abi": [
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "newOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "_to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":2926:3539  contract Owned {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/0xBitcoinExtended.sol\":3084:3145  function Owned() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3124  owner */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3137  owner = msg.sender */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/0xBitcoinExtended.sol\":3127:3137  msg.sender */\n  caller\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3137  owner = msg.sender */\n  and\n  not(sub(exp(0x2, 0xa0), 0x1))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":2926:3539  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":2926:3539  contract Owned {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x79ba5097\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_2:\n      jumpi(tag_6, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_6:\n      tag_7\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_3:\n      jumpi(tag_9, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_9:\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_4:\n      jumpi(tag_12, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_12:\n      tag_10\n      jump(tag_14)\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_5:\n      jumpi(tag_15, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_15:\n      tag_7\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_17)\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_8:\n        /* \"contracts/0xBitcoinExtended.sol\":3412:3420  newOwner */\n      sload(0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3408  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      swap1\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3412:3420  newOwner */\n      swap2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3390:3421  require(msg.sender == newOwner) */\n      tag_19\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/0xBitcoinExtended.sol\":3460:3468  newOwner */\n      sload(0x1)\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3453:3458  owner */\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3460:3468  newOwner */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":3453:3458  owner */\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3432:3469  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":3488:3496  newOwner */\n      0x1\n      dup1\n      sload\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3496  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3488:3496  newOwner */\n      dup5\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3496  owner = newOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":3507:3528  newOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_11:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_14:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x1))\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_17:\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      sload(0x0)\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      swap2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n      tag_21\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_21:\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3319  newOwner */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3331  newOwner = _newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582008fda00bf41520244ff460295ad4e5ded852ee9e2dcd7c0a3d4abaf2b18915680029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a03199091161790556101fe8061003b6000396000f3006060604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166379ba509781146100665780638da5cb5b1461007b578063d4ee1d90146100aa578063f2fde38b146100bd575b600080fd5b341561007157600080fd5b6100796100dc565b005b341561008657600080fd5b61008e61016a565b604051600160a060020a03909116815260200160405180910390f35b34156100b557600080fd5b61008e610179565b34156100c857600080fd5b610079600160a060020a0360043516610188565b60015433600160a060020a039081169116146100f757600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600154600160a060020a031681565b60005433600160a060020a039081169116146101a357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582008fda00bf41520244ff460295ad4e5ded852ee9e2dcd7c0a3d4abaf2b18915680029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1FE DUP1 PUSH2 0x3B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E PUSH2 0x179 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ADDMOD REVERT LOG0 SIGNEXTEND DELEGATECALL ISZERO KECCAK256 0x24 0x4f DELEGATECALL PUSH1 0x29 GAS 0xd4 0xe5 0xde 0xd8 MSTORE 0xee SWAP15 0x2d 0xcd PUSH29 0xA3D4ABAF2B18915680029000000000000000000000000000000000000 ",
              "sourceMap": "2926:613:0:-;;;3084:61;;;;;;;;3119:5;:18;;-1:-1:-1;;;;;3127:10:0;3119:18;-1:-1:-1;;;;;;3119:18:0;;;;;;2926:613;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166379ba509781146100665780638da5cb5b1461007b578063d4ee1d90146100aa578063f2fde38b146100bd575b600080fd5b341561007157600080fd5b6100796100dc565b005b341561008657600080fd5b61008e61016a565b604051600160a060020a03909116815260200160405180910390f35b34156100b557600080fd5b61008e610179565b34156100c857600080fd5b610079600160a060020a0360043516610188565b60015433600160a060020a039081169116146100f757600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600154600160a060020a031681565b60005433600160a060020a039081169116146101a357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582008fda00bf41520244ff460295ad4e5ded852ee9e2dcd7c0a3d4abaf2b18915680029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E PUSH2 0x179 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x188 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ADDMOD REVERT LOG0 SIGNEXTEND DELEGATECALL ISZERO KECCAK256 0x24 0x4f DELEGATECALL PUSH1 0x29 GAS 0xd4 0xe5 0xde 0xd8 MSTORE 0xee SWAP15 0x2d 0xcd PUSH29 0xA3D4ABAF2B18915680029000000000000000000000000000000000000 ",
              "sourceMap": "2926:613:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3345:191;;;;;;;;;;;;;;2948:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;2948:20:0;;;;;;;;;;;;;;2975:23;;;;;;;;;;;;3237:102;;;;;;;;;;-1:-1:-1;;;;;3237:102:0;;;;;3345:191;3412:8;;3398:10;-1:-1:-1;;;;;3398:22:0;;;3412:8;;3398:22;3390:31;;;;;;3460:8;;;3453:5;-1:-1:-1;;;;;3460:8:0;;;;3453:5;3432:37;;;;;;;;;;3488:8;;;;3480:16;;-1:-1:-1;;3480:16:0;;;-1:-1:-1;;;;;3488:8:0;;3480:16;;;;3507:21;;;3345:191::o;2948:20::-;;;-1:-1:-1;;;;;2948:20:0;;:::o;2975:23::-;;;-1:-1:-1;;;;;2975:23:0;;:::o;3237:102::-;3204:5;;3190:10;-1:-1:-1;;;;;3190:19:0;;;3204:5;;3190:19;3182:28;;;;;;3311:8;:20;;-1:-1:-1;;3311:20:0;-1:-1:-1;;;;;3311:20:0;;;;;;;;;;3237:102::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "102000",
                "executionCost": "20515",
                "totalCost": "122515"
              },
              "external": {
                "acceptOwnership()": "42974",
                "newOwner()": "570",
                "owner()": "548",
                "transferOwnership(address)": "20895"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "MSTORE"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "ISZERO"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "JUMPI"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "DUP1"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "REVERT"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3119,
                  "end": 3124,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SLOAD"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "A0"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "EXP"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "SUB"
                },
                {
                  "begin": 3127,
                  "end": 3137,
                  "name": "CALLER"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "A0"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "EXP"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "SUB"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "NOT"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP2"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "OR"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SSTORE"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "DUP1"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "CODECOPY"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a7230582008fda00bf41520244ff460295ad4e5ded852ee9e2dcd7c0a3d4abaf2b18915680029",
                  ".code": [
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "LT"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DIV"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "AND"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "79BA5097"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "D4EE1D90"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "tag",
                      "value": "1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "STOP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ADD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SUB"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "14"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "AND"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3398,
                      "end": 3408,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "EQ"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "AND"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SUB"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "LOG3"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "DUP5"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "OR"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "14"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3190,
                      "end": 3200,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "EQ"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3311,
                      "end": 3319,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "OR"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "newOwner()": "d4ee1d90",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"Owned\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":630:1144  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":630:1144  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820b4020761576684795b88b817bb66872b2c8e478d604101adec14c2bd963274ae0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820b4020761576684795b88b817bb66872b2c8e478d604101adec14c2bd963274ae0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb4 MUL SMOD PUSH2 0x5766 DUP5 PUSH26 0x5B88B817BB66872B2C8E478D604101ADEC14C2BD963274AE0029 ",
              "sourceMap": "630:514:0:-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600080fd00a165627a7a72305820b4020761576684795b88b817bb66872b2c8e478d604101adec14c2bd963274ae0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb4 MUL SMOD PUSH2 0x5766 DUP5 PUSH26 0x5B88B817BB66872B2C8E478D604101ADEC14C2BD963274AE0029 ",
              "sourceMap": "630:514:0:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "10600",
                "executionCost": "61",
                "totalCost": "10661"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "MSTORE"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "ISZERO"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "JUMPI"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "DUP1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "REVERT"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "DUP1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "CODECOPY"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820b4020761576684795b88b817bb66872b2c8e478d604101adec14c2bd963274ae0029",
                  ".code": [
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "DUP1"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "REVERT"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "_0xBitcoinToken": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "lastRewardEthBlockNumber",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getMiningDifficulty",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "challenge_digest",
                  "type": "bytes32"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "rewardEra",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "name": "",
                  "type": "uint8"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getMiningTarget",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getMiningReward",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getChallengeNumber",
              "outputs": [
                {
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maxSupplyForEra",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "mintWithoutPoW",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "amt",
                  "type": "uint256"
                }
              ],
              "name": "setTokensMinted",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "tokensMinted",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "lastRewardTo",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "challenge_digest",
                  "type": "bytes32"
                },
                {
                  "name": "challenge_number",
                  "type": "bytes32"
                },
                {
                  "name": "testTarget",
                  "type": "uint256"
                }
              ],
              "name": "checkMintSolution",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "epochCount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_MAXIMUM_TARGET",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "miningTarget",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "challengeNumber",
              "outputs": [
                {
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "challenge_digest",
                  "type": "bytes32"
                },
                {
                  "name": "challenge_number",
                  "type": "bytes32"
                }
              ],
              "name": "getMintDigest",
              "outputs": [
                {
                  "name": "digesttest",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_BLOCKS_PER_READJUSTMENT",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "lastRewardAmount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                },
                {
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "latestDifficultyPeriodStarted",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "newOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transferAnyERC20Token",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_MINIMUM_TARGET",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "payable": true,
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "reward_amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "epochCount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "newChallengeNumber",
                  "type": "bytes32"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "_to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/0xBitcoinExtended.sol\":4182:4186  1024 */\n  0x400\n    /* \"contracts/0xBitcoinExtended.sol\":4143:4186  uint public _BLOCKS_PER_READJUSTMENT = 1024 */\n  0x8\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":4247:4252  2**16 */\n  0x10000\n    /* \"contracts/0xBitcoinExtended.sol\":4216:4252  uint public  _MINIMUM_TARGET = 2**16 */\n  0x9\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":4424:4430  2**234 */\n  0x40000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/0xBitcoinExtended.sol\":4393:4430  uint public  _MAXIMUM_TARGET = 2**234 */\n  0xa\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":4731:4750  bool locked = false */\n  0x12\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5230:5865  function _0xBitcoinToken() public onlyOwner{... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3124  owner */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3137  owner = msg.sender */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/0xBitcoinExtended.sol\":3127:3137  msg.sender */\n  caller\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3137  owner = msg.sender */\n  dup2\n  and\n  not(sub(exp(0x2, 0xa0), 0x1))\n  swap1\n  swap3\n  and\n  dup3\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n  eq\n    /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n  tag_6\n  jumpi\n  0x0\n  dup1\n  revert\ntag_6:\n    /* \"contracts/0xBitcoinExtended.sol\":5286:5302  symbol = \"0xBTC\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  0x5\n  dup2\n  mstore\n  0x3078425443000000000000000000000000000000000000000000000000000000\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/0xBitcoinExtended.sol\":5286:5292  symbol */\n  0x2\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":5286:5302  symbol = \"0xBTC\" */\n  dup1\n  mload\n  tag_8\n  swap3\n  swap2\n  0x20\n  add\n  swap1\n  jump\t// in(tag_9)\ntag_8:\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5313:5337  name = \"0xBitcoin Token\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  0xf\n  dup2\n  mstore\n  0x3078426974636f696e20546f6b656e0000000000000000000000000000000000\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/0xBitcoinExtended.sol\":5313:5317  name */\n  0x3\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":5313:5337  name = \"0xBitcoin Token\" */\n  dup1\n  mload\n  tag_10\n  swap3\n  swap2\n  0x20\n  add\n  swap1\n  jump\t// in(tag_9)\ntag_10:\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5348:5356  decimals */\n  0x4\n    /* \"contracts/0xBitcoinExtended.sol\":5348:5360  decimals = 8 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5359:5360  8 */\n  0x8\n    /* \"contracts/0xBitcoinExtended.sol\":5348:5360  decimals = 8 */\n  or\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5386:5394  21000000 */\n  0x1406f40\n    /* \"contracts/0xBitcoinExtended.sol\":5348:5360  decimals = 8 */\n  0xff\n    /* \"contracts/0xBitcoinExtended.sol\":5406:5414  decimals */\n  swap2\n  dup3\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5397:5399  10 */\n  0xa\n    /* \"contracts/0xBitcoinExtended.sol\":5397:5415  10**uint(decimals) */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":5386:5415  21000000 * 10**uint(decimals) */\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":5371:5383  _totalSupply */\n  0x5\n    /* \"contracts/0xBitcoinExtended.sol\":5371:5415  _totalSupply = 21000000 * 10**uint(decimals) */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5429:5435  locked */\n  sload(0x12)\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5426:5445  if(locked) revert() */\n  iszero\n  tag_11\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":5437:5445  revert() */\n  0x0\n  dup1\n  revert\n    /* \"contracts/0xBitcoinExtended.sol\":5426:5445  if(locked) revert() */\ntag_11:\n    /* \"contracts/0xBitcoinExtended.sol\":5455:5461  locked */\n  0x12\n    /* \"contracts/0xBitcoinExtended.sol\":5455:5468  locked = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5464:5468  true */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":5455:5468  locked = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5455:5461  locked */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":5479:5491  tokensMinted */\n  0x14\n    /* \"contracts/0xBitcoinExtended.sol\":5479:5495  tokensMinted = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5506:5515  rewardEra */\n  0xd\n    /* \"contracts/0xBitcoinExtended.sol\":5506:5519  rewardEra = 0 */\n  sstore\n  0x5\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5559  _totalSupply */\n  sload\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5566  _totalSupply.div(2) */\n  tag_12\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":5564:5565  2 */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5563  _totalSupply.div */\n  0x100000000\n  tag_0_170\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5566  _totalSupply.div(2) */\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/0xBitcoinExtended.sol\":5529:5544  maxSupplyForEra */\n  0xe\n    /* \"contracts/0xBitcoinExtended.sol\":5529:5566  maxSupplyForEra = _totalSupply.div(2) */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5592:5607  _MAXIMUM_TARGET */\n  sload(0xa)\n    /* \"contracts/0xBitcoinExtended.sol\":5577:5589  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":5577:5607  miningTarget = _MAXIMUM_TARGET */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5650:5662  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":5618:5647  latestDifficultyPeriodStarted */\n  0x6\n    /* \"contracts/0xBitcoinExtended.sol\":5618:5662  latestDifficultyPeriodStarted = block.number */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":5673:5695  _startNewMiningEpoch() */\n  tag_14\n    /* \"contracts/0xBitcoinExtended.sol\":5673:5693  _startNewMiningEpoch */\n  0x100000000\n  tag_0_181\n  tag_15\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":5673:5695  _startNewMiningEpoch() */\n  div\n  jump\t// in\ntag_14:\n    /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\n  jump(tag_16)\n    /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\ntag_13:\n    /* \"contracts/0xBitcoinExtended.sol\":1080:1086  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":1107:1112  b > 0 */\n  dup1\n  dup3\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":1099:1113  require(b > 0) */\n  tag_18\n  jumpi\n  0x0\n  dup1\n  revert\ntag_18:\n    /* \"contracts/0xBitcoinExtended.sol\":1132:1133  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1128:1129  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":1128:1133  a / b */\n  dup2\n  iszero\n  iszero\n  tag_19\n  jumpi\n  invalid\ntag_19:\n  div\n  swap4\n    /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\ntag_15:\n    /* \"contracts/0xBitcoinExtended.sol\":7749:7764  maxSupplyForEra */\n  sload(0xe)\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n  tag_21\n    /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n  tag_22\n    /* \"contracts/0xBitcoinExtended.sol\":7728:7743  getMiningReward */\n  0x100000000\n  tag_0_81\n  tag_23\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n  div\n  jump\t// in\ntag_22:\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7723  tokensMinted */\n  sload(0x14)\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7727  tokensMinted.add */\n  0x100000000\n  tag_0_177\n  tag_24\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n  div\n  jump\t// in\ntag_21:\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7764  tokensMinted.add(getMiningReward()) > maxSupplyForEra */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\n  dup1\n  iszero\n  tag_25\n  jumpi\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":7780:7782  39 */\n  0x27\n    /* \"contracts/0xBitcoinExtended.sol\":7768:7777  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":7768:7782  rewardEra < 39 */\n  lt\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\ntag_25:\n    /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\n  iszero\n  tag_26\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":7812:7821  rewardEra */\n  0xd\n  dup1\n  sload\n    /* \"contracts/0xBitcoinExtended.sol\":7824:7825  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":7812:7825  rewardEra + 1 */\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":7800:7825  rewardEra = rewardEra + 1 */\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\ntag_26:\n    /* \"contracts/0xBitcoinExtended.sol\":8032:8041  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8022  _totalSupply */\n  sload(0x5)\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n  tag_27\n  swap2\n    /* \"contracts/0xBitcoinExtended.sol\":8044:8045  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":8032:8045  rewardEra + 1 */\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":8028:8029  2 */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":8028:8046  2**(rewardEra + 1) */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8026  _totalSupply.div */\n  0x100000000\n  tag_0_170\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n  div\n  jump\t// in\ntag_27:\n    /* \"contracts/0xBitcoinExtended.sol\":7995:8007  _totalSupply */\n  sload(0x5)\n    /* \"contracts/0xBitcoinExtended.sol\":7995:8047  _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n  sub\n    /* \"contracts/0xBitcoinExtended.sol\":7977:7992  maxSupplyForEra */\n  0xe\n    /* \"contracts/0xBitcoinExtended.sol\":7977:8047  maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8079  epochCount */\n  sload(0x7)\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n  tag_28\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":8084:8085  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8083  epochCount.add */\n  0x100000000\n  tag_0_177\n  tag_24\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n  div\n  jump\t// in\ntag_28:\n    /* \"contracts/0xBitcoinExtended.sol\":8056:8066  epochCount */\n  0x7\n    /* \"contracts/0xBitcoinExtended.sol\":8056:8086  epochCount = epochCount.add(1) */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":8185:8209  _BLOCKS_PER_READJUSTMENT */\n  sload(0x8)\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":8172:8209  epochCount % _BLOCKS_PER_READJUSTMENT */\n  dup2\n  iszero\n  iszero\n  tag_29\n  jumpi\n  invalid\ntag_29:\n  mod\n    /* \"contracts/0xBitcoinExtended.sol\":8172:8214  epochCount % _BLOCKS_PER_READJUSTMENT == 0 */\n  iszero\n    /* \"contracts/0xBitcoinExtended.sol\":8169:8262  if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)... */\n  iszero\n  tag_31\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n  tag_31\n    /* \"contracts/0xBitcoinExtended.sol\":8232:8251  _reAdjustDifficulty */\n  0x100000000\n  tag_0_242\n  tag_32\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n  div\n  jump\t// in\ntag_31:\n  not(0x0)\n    /* \"contracts/0xBitcoinExtended.sol\":8503:8515  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":8503:8519  block.number - 1 */\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":8487:8520  block.blockhash(block.number - 1) */\n  blockhash\n    /* \"contracts/0xBitcoinExtended.sol\":8469:8484  challengeNumber */\n  0xc\n    /* \"contracts/0xBitcoinExtended.sol\":8469:8520  challengeNumber = block.blockhash(block.number - 1) */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\ntag_23:\n    /* \"contracts/0xBitcoinExtended.sol\":11438:11447  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":11418:11426  decimals */\n  sload(0x4)\n    /* \"contracts/0xBitcoinExtended.sol\":11253:11257  uint */\n  0x0\n  swap2\n    /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n  tag_34\n  swap2\n    /* \"contracts/0xBitcoinExtended.sol\":11418:11426  decimals */\n  0xff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":11409:11411  10 */\n  0xa\n    /* \"contracts/0xBitcoinExtended.sol\":11409:11427  10**uint(decimals) */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":11404:11406  50 */\n  0x32\n    /* \"contracts/0xBitcoinExtended.sol\":11404:11427  50 * 10**uint(decimals) */\n  mul\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":11435:11436  2 */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":11435:11447  2**rewardEra */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":11403:11433  (50 * 10**uint(decimals) ).div */\n  0x100000000\n  tag_13\n  dup2\n  mul\n  tag_0_170\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n  div\n  jump\t// in\ntag_34:\n    /* \"contracts/0xBitcoinExtended.sol\":11396:11449  return (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\ntag_33:\n  swap1\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\ntag_24:\n    /* \"contracts/0xBitcoinExtended.sol\":729:734  a + b */\n  dup2\n  dup2\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":753:759  c >= a */\n  dup3\n  dup2\n  lt\n  iszero\n    /* \"contracts/0xBitcoinExtended.sol\":745:760  require(c >= a) */\n  tag_36\n  jumpi\n  0x0\n  dup1\n  revert\ntag_36:\n    /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\ntag_32:\n    /* \"contracts/0xBitcoinExtended.sol\":8866:8895  latestDifficultyPeriodStarted */\n  sload(0x6)\n    /* \"contracts/0xBitcoinExtended.sol\":9085:9109  _BLOCKS_PER_READJUSTMENT */\n  sload(0x8)\n    /* \"contracts/0xBitcoinExtended.sol\":8851:8863  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":8851:8895  block.number - latestDifficultyPeriodStarted */\n  swap2\n  swap1\n  swap2\n  sub\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9176:9178  60 */\n  0x3c\n    /* \"contracts/0xBitcoinExtended.sol\":9162:9178  epochsMined * 60 */\n  dup2\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":8809:8848  uint ethBlocksSinceLastDifficultyPeriod */\n  0x0\n  dup1\n  dup1\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":9304:9369  ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod */\n  dup5\n  dup8\n  lt\n    /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n  iszero\n  tag_38\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  tag_39\n    /* \"contracts/0xBitcoinExtended.sol\":9461:9495  ethBlocksSinceLastDifficultyPeriod */\n  dup8\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n  tag_40\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9445  targetEthBlocksPerDiffPeriod */\n  dup8\n    /* \"contracts/0xBitcoinExtended.sol\":9450:9453  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9449  targetEthBlocksPerDiffPeriod.mul */\n  0x100000000\n  tag_0_249\n  tag_41\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n  div\n  jump\t// in\ntag_40:\n    /* \"contracts/0xBitcoinExtended.sol\":9416:9459  (targetEthBlocksPerDiffPeriod.mul(100)).div */\n  swap1\n  0x100000000\n  tag_0_170\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  div\n  jump\t// in\ntag_39:\n    /* \"contracts/0xBitcoinExtended.sol\":9392:9497  uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  swap4\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n  tag_42\n    /* \"contracts/0xBitcoinExtended.sol\":9580:9584  1000 */\n  0x3e8\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n  tag_43\n    /* \"contracts/0xBitcoinExtended.sol\":9392:9497  uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  dup7\n    /* \"contracts/0xBitcoinExtended.sol\":9561:9564  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9560  excess_block_pct.sub */\n  0x100000000\n  tag_0_185\n  tag_44\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n  div\n  jump\t// in\ntag_43:\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9579  excess_block_pct.sub(100).limitLessThan */\n  swap1\n  0x100000000\n  tag_0_252\n  tag_45\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n  div\n  jump\t// in\ntag_42:\n    /* \"contracts/0xBitcoinExtended.sol\":9510:9585  uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000) */\n  swap3\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n  tag_46\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n  tag_47\n    /* \"contracts/0xBitcoinExtended.sol\":9832:9854  excess_block_pct_extra */\n  dup5\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n  tag_48\n    /* \"contracts/0xBitcoinExtended.sol\":9822:9826  2000 */\n  0x7d0\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9817  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9821  miningTarget.div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_48:\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9831  miningTarget.div(2000).mul */\n  swap1\n  0x100000000\n  tag_0_249\n  tag_41\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n  div\n  jump\t// in\ntag_47:\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9800  miningTarget */\n  sload(0xb)\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9804  miningTarget.sub */\n  0x100000000\n  tag_0_185\n  tag_44\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n  div\n  jump\t// in\ntag_46:\n    /* \"contracts/0xBitcoinExtended.sol\":9773:9785  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":9773:9856  miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n  jump(tag_49)\ntag_38:\n    /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n  tag_50\n    /* \"contracts/0xBitcoinExtended.sol\":9978:10006  targetEthBlocksPerDiffPeriod */\n  dup6\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n  tag_40\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9962  ethBlocksSinceLastDifficultyPeriod */\n  dup10\n    /* \"contracts/0xBitcoinExtended.sol\":9967:9970  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9966  ethBlocksSinceLastDifficultyPeriod.mul */\n  0x100000000\n  tag_0_249\n  tag_41\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n  div\n  jump\t// in\n    /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\ntag_50:\n    /* \"contracts/0xBitcoinExtended.sol\":9901:10008  uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n  swap2\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n  tag_52\n    /* \"contracts/0xBitcoinExtended.sol\":10095:10099  1000 */\n  0x3e8\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n  tag_43\n    /* \"contracts/0xBitcoinExtended.sol\":9901:10008  uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n  dup5\n    /* \"contracts/0xBitcoinExtended.sol\":10076:10079  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10075  shortage_block_pct.sub */\n  0x100000000\n  tag_0_185\n  tag_44\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n  div\n  jump\t// in\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\ntag_52:\n    /* \"contracts/0xBitcoinExtended.sol\":10021:10100  uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000) */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n  tag_54\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n  tag_55\n    /* \"contracts/0xBitcoinExtended.sol\":10227:10251  shortage_block_pct_extra */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n  tag_48\n    /* \"contracts/0xBitcoinExtended.sol\":10217:10221  2000 */\n  0x7d0\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10212  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10216  miningTarget.div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\ntag_55:\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10195  miningTarget */\n  sload(0xb)\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10199  miningTarget.add */\n  0x100000000\n  tag_0_177\n  tag_24\n  dup3\n  mul\n  or\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n  div\n  jump\t// in\ntag_54:\n    /* \"contracts/0xBitcoinExtended.sol\":10168:10180  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":10168:10253  miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\ntag_49:\n    /* \"contracts/0xBitcoinExtended.sol\":10326:10338  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":10294:10323  latestDifficultyPeriodStarted */\n  0x6\n    /* \"contracts/0xBitcoinExtended.sol\":10294:10338  latestDifficultyPeriodStarted = block.number */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":10367:10382  _MINIMUM_TARGET */\n  sload(0x9)\n    /* \"contracts/0xBitcoinExtended.sol\":10352:10364  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10352:10382  miningTarget < _MINIMUM_TARGET */\n  lt\n    /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\n  iszero\n  tag_57\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":10436:10451  _MINIMUM_TARGET */\n  sload(0x9)\n    /* \"contracts/0xBitcoinExtended.sol\":10421:10433  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":10421:10451  miningTarget = _MINIMUM_TARGET */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\ntag_57:\n    /* \"contracts/0xBitcoinExtended.sol\":10490:10505  _MAXIMUM_TARGET */\n  sload(0xa)\n    /* \"contracts/0xBitcoinExtended.sol\":10475:10487  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10475:10505  miningTarget > _MAXIMUM_TARGET */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\n  iszero\n  tag_58\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":10554:10569  _MAXIMUM_TARGET */\n  sload(0xa)\n    /* \"contracts/0xBitcoinExtended.sol\":10539:10551  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":10539:10569  miningTarget = _MAXIMUM_TARGET */\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\ntag_58:\n    /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":894:1022  function mul(uint a, uint b) internal pure returns (uint c) {... */\ntag_41:\n    /* \"contracts/0xBitcoinExtended.sol\":969:974  a * b */\n  dup2\n  dup2\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":993:999  a == 0 */\n  dup3\n  iszero\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\n  tag_60\n  jumpi\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":1012:1013  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1007:1008  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":1003:1004  c */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":1003:1008  c / a */\n  dup2\n  iszero\n  iszero\n  tag_61\n  jumpi\n  invalid\ntag_61:\n  div\n    /* \"contracts/0xBitcoinExtended.sol\":1003:1013  c / a == b */\n  eq\n    /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\ntag_60:\n    /* \"contracts/0xBitcoinExtended.sol\":985:1014  require(a == 0 || c / a == b) */\n  iszero\n  iszero\n  tag_36\n  jumpi\n  0x0\n  dup1\n  revert\n    /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\ntag_44:\n    /* \"contracts/0xBitcoinExtended.sol\":826:832  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":853:859  b <= a */\n  dup3\n  dup3\n  gt\n  iszero\n    /* \"contracts/0xBitcoinExtended.sol\":845:860  require(b <= a) */\n  tag_64\n  jumpi\n  0x0\n  dup1\n  revert\ntag_64:\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":875:880  a - b */\n  swap1\n  sub\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\ntag_45:\n    /* \"contracts/0xBitcoinExtended.sol\":1291:1297  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":1317:1318  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1313:1314  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":1313:1318  a > b */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":1327:1328  b */\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":1320:1328  return b */\n  jump(tag_36)\n    /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\ntag_66:\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":1346:1347  a */\n  swap1\n  swap2\n    /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_68\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_70)\ntag_68:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_70\n  jumpi\n  swap2\n  dup3\n  add\ntag_69:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_70\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_69)\ntag_70:\n  pop\n  tag_71\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_72)\ntag_71:\n  pop\n  swap1\n  jump\t// out\ntag_72:\n  tag_33\n  swap2\n  swap1\ntag_74:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_71\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_74)\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), exp(0x2, 0xe0)), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x163aa00d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17da485f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1801fbe5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2d38bf7a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32e99708\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x490203a7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4ef37628\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4fa972e1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5515a1ea\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5ce7e030\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6de9f32b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6fd396d6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x81269a56\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x829965cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x87a2a9d6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8a769d35\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8ae0368b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x97566aa0\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb5ade81b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xbafedcaa\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xcb9ae707\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xdc39d06d\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xdc6e9cf9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_39\n      jumpi\n    tag_1:\n        /* \"contracts/0xBitcoinExtended.sol\":16324:16332  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":3949:3968  string public  name */\n    tag_2:\n      jumpi(tag_42, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_42:\n      tag_43\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      0x20\n      dup1\n      dup3\n      mstore\n      dup2\n      swap1\n      dup2\n      add\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_45:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":71:74   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_45)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":13894:14097  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_3:\n      jumpi(tag_49, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_49:\n      tag_50\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4688:4724  uint public lastRewardEthBlockNumber */\n    tag_4:\n      jumpi(tag_52, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_52:\n      tag_53\n      jump(tag_54)\n    tag_53:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":10870:10989  function getMiningDifficulty() public constant returns (uint) {... */\n    tag_5:\n      jumpi(tag_55, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_55:\n      tag_53\n      jump(tag_57)\n        /* \"contracts/0xBitcoinExtended.sol\":5878:7343  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {... */\n    tag_6:\n      jumpi(tag_58, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_58:\n      tag_50\n      calldataload(0x4)\n      calldataload(0x24)\n      jump(tag_60)\n        /* \"contracts/0xBitcoinExtended.sol\":12304:12420  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_61, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_61:\n      tag_53\n      jump(tag_63)\n        /* \"contracts/0xBitcoinExtended.sol\":14638:14976  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n    tag_8:\n      jumpi(tag_64, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_64:\n      tag_50\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_66)\n        /* \"contracts/0xBitcoinExtended.sol\":4559:4580  uint public rewardEra */\n    tag_9:\n      jumpi(tag_67, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_67:\n      tag_53\n      jump(tag_69)\n        /* \"contracts/0xBitcoinExtended.sol\":3975:3996  uint8 public decimals */\n    tag_10:\n      jumpi(tag_70, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_70:\n      tag_71\n      jump(tag_72)\n    tag_71:\n      mload(0x40)\n      0xff\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":10995:11087  function getMiningTarget() public constant returns (uint) {... */\n    tag_11:\n      jumpi(tag_73, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_73:\n      tag_53\n      jump(tag_75)\n        /* \"contracts/0xBitcoinExtended.sol\":4003:4027  uint public _totalSupply */\n    tag_12:\n      jumpi(tag_76, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_76:\n      tag_53\n      jump(tag_78)\n        /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\n    tag_13:\n      jumpi(tag_79, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_79:\n      tag_53\n      jump(tag_81)\n        /* \"contracts/0xBitcoinExtended.sol\":10678:10781  function getChallengeNumber() public constant returns (bytes32) {... */\n    tag_14:\n      jumpi(tag_82, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_82:\n      tag_53\n      jump(tag_84)\n        /* \"contracts/0xBitcoinExtended.sol\":4586:4613  uint public maxSupplyForEra */\n    tag_15:\n      jumpi(tag_85, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_85:\n      tag_53\n      jump(tag_87)\n        /* \"contracts/0xBitcoinExtended.sol\":17074:18449  function mintWithoutPoW( ) public returns (bool success) {... */\n    tag_16:\n      jumpi(tag_88, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_88:\n      tag_50\n      jump(tag_90)\n        /* \"contracts/0xBitcoinExtended.sol\":16988:17067  function setTokensMinted(uint amt) public   {... */\n    tag_17:\n      jumpi(tag_91, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_91:\n      tag_92\n      calldataload(0x4)\n      jump(tag_93)\n    tag_92:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":4812:4836  uint public tokensMinted */\n    tag_18:\n      jumpi(tag_94, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_94:\n      tag_53\n      jump(tag_96)\n        /* \"contracts/0xBitcoinExtended.sol\":4621:4648  address public lastRewardTo */\n    tag_19:\n      jumpi(tag_97, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_97:\n      tag_98\n      jump(tag_99)\n    tag_98:\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":12645:12769  function balanceOf(address tokenOwner) public constant returns (uint balance) {... */\n    tag_20:\n      jumpi(tag_100, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_100:\n      tag_53\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_102)\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_21:\n      jumpi(tag_103, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_103:\n      tag_92\n      jump(tag_105)\n        /* \"contracts/0xBitcoinExtended.sol\":11779:12113  function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {... */\n    tag_22:\n      jumpi(tag_106, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_106:\n      tag_50\n      calldataload(0x4)\n      calldataload(0x24)\n      calldataload(0x44)\n      calldataload(0x64)\n      jump(tag_108)\n        /* \"contracts/0xBitcoinExtended.sol\":4087:4109  uint public epochCount */\n    tag_23:\n      jumpi(tag_109, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_109:\n      tag_53\n      jump(tag_111)\n        /* \"contracts/0xBitcoinExtended.sol\":4393:4430  uint public  _MAXIMUM_TARGET = 2**234 */\n    tag_24:\n      jumpi(tag_112, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_112:\n      tag_53\n      jump(tag_114)\n        /* \"contracts/0xBitcoinExtended.sol\":4438:4462  uint public miningTarget */\n    tag_25:\n      jumpi(tag_115, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_115:\n      tag_53\n      jump(tag_117)\n        /* \"contracts/0xBitcoinExtended.sol\":4469:4499  bytes32 public challengeNumber */\n    tag_26:\n      jumpi(tag_118, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_118:\n      tag_53\n      jump(tag_120)\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_27:\n      jumpi(tag_121, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_121:\n      tag_98\n      jump(tag_123)\n        /* \"contracts/0xBitcoinExtended.sol\":3922:3942  string public symbol */\n    tag_28:\n      jumpi(tag_124, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_124:\n      tag_43\n      jump(tag_126)\n        /* \"contracts/0xBitcoinExtended.sol\":11497:11734  function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {... */\n    tag_29:\n      jumpi(tag_131, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_131:\n      tag_53\n      calldataload(0x4)\n      calldataload(0x24)\n      calldataload(0x44)\n      jump(tag_133)\n        /* \"contracts/0xBitcoinExtended.sol\":13118:13380  function transfer(address to, uint tokens) public returns (bool success) {... */\n    tag_30:\n      jumpi(tag_134, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_134:\n      tag_50\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_136)\n        /* \"contracts/0xBitcoinExtended.sol\":4143:4186  uint public _BLOCKS_PER_READJUSTMENT = 1024 */\n    tag_31:\n      jumpi(tag_137, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_137:\n      tag_53\n      jump(tag_139)\n        /* \"contracts/0xBitcoinExtended.sol\":4654:4682  uint public lastRewardAmount */\n    tag_32:\n      jumpi(tag_140, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_140:\n      tag_53\n      jump(tag_142)\n        /* \"contracts/0xBitcoinExtended.sol\":15779:16091  function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {... */\n    tag_33:\n      jumpi(tag_143, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_143:\n      tag_50\n      0x4\n      dup1\n      calldataload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      swap1\n      0x24\n      dup1\n      calldataload\n      swap2\n      swap1\n      0x64\n      swap1\n      calldataload(0x44)\n      swap1\n      dup2\n      add\n      swap1\n      dup4\n      add\n      calldataload\n      dup1\n      0x20\n      0x1f\n      dup3\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      swap1\n      0x20\n      dup5\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      swap5\n      swap7\n      pop\n      tag_145\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/0xBitcoinExtended.sol\":4037:4078  uint public latestDifficultyPeriodStarted */\n    tag_34:\n      jumpi(tag_146, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_146:\n      tag_53\n      jump(tag_148)\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_35:\n      jumpi(tag_149, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_149:\n      tag_98\n      jump(tag_151)\n        /* \"contracts/0xBitcoinExtended.sol\":16576:16760  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {... */\n    tag_36:\n      jumpi(tag_152, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_152:\n      tag_50\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_154)\n        /* \"contracts/0xBitcoinExtended.sol\":4216:4252  uint public  _MINIMUM_TARGET = 2**16 */\n    tag_37:\n      jumpi(tag_155, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_155:\n      tag_53\n      jump(tag_157)\n        /* \"contracts/0xBitcoinExtended.sol\":15262:15413  function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {... */\n    tag_38:\n      jumpi(tag_158, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_158:\n      tag_53\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_160)\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_39:\n      jumpi(tag_161, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_161:\n      tag_92\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_163)\n        /* \"contracts/0xBitcoinExtended.sol\":3949:3968  string public  name */\n    tag_44:\n      0x3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":13894:14097  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_51:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":13990:14000  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14001  allowed[msg.sender] */\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":13957:13969  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14001  allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":13982:13989  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14001  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14010  allowed[msg.sender][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14019  allowed[msg.sender][spender] = tokens */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":13957:13969  bool success */\n      swap1\n      swap3\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14010  allowed[msg.sender][spender] */\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14001  allowed[msg.sender] */\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14030:14067  Approval(msg.sender, spender, tokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14013:14019  tokens */\n      dup6\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14030:14067  Approval(msg.sender, spender, tokens) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14085:14089  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":13894:14097  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_167:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4688:4724  uint public lastRewardEthBlockNumber */\n    tag_54:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":10870:10989  function getMiningDifficulty() public constant returns (uint) {... */\n    tag_57:\n        /* \"contracts/0xBitcoinExtended.sol\":10926:10930  uint */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10982  _MAXIMUM_TARGET.div(miningTarget) */\n      tag_169\n        /* \"contracts/0xBitcoinExtended.sol\":10969:10981  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10964  _MAXIMUM_TARGET */\n      sload(0xa)\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10968  _MAXIMUM_TARGET.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10982  _MAXIMUM_TARGET.div(miningTarget) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/0xBitcoinExtended.sol\":10942:10982  return _MAXIMUM_TARGET.div(miningTarget) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10870:10989  function getMiningDifficulty() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":5878:7343  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {... */\n    tag_60:\n        /* \"contracts/0xBitcoinExtended.sol\":5949:5961  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6134:6148  bytes32 digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":6499:6515  bytes32 solution */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6722:6740  uint reward_amount */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":6162:6177  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":6179:6189  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":6191:6196  nonce */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":6152:6198  keccak256(challengeNumber, msg.sender, nonce ) */\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap2\n      swap1\n      swap2\n      and\n      0x1000000000000000000000000\n      mul\n      0x20\n      dup4\n      add\n      mstore\n      0x34\n      dup3\n      add\n      mstore\n      0x54\n      add\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      keccak256\n      swap3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6276:6302  digest != challenge_digest */\n      dup5\n      dup4\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":6272:6312  if (digest != challenge_digest) revert() */\n      tag_172\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":6304:6312  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":6272:6312  if (digest != challenge_digest) revert() */\n    tag_172:\n        /* \"contracts/0xBitcoinExtended.sol\":6405:6417  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":6387:6417  uint256(digest) > miningTarget */\n      dup4\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":6384:6427  if(uint256(digest) > miningTarget) revert() */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":6419:6427  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":6384:6427  if(uint256(digest) > miningTarget) revert() */\n    tag_173:\n        /* \"contracts/0xBitcoinExtended.sol\":6539:6554  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6555  solutionForChallenge[challengeNumber] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6538  solutionForChallenge */\n      0x13\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6555  solutionForChallenge[challengeNumber] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":6570:6616  solutionForChallenge[challengeNumber] = digest */\n      swap1\n      dup5\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6555  solutionForChallenge[challengeNumber] */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6634:6649  solution != 0x0 */\n      dup2\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":6631:6659  if(solution != 0x0) revert() */\n      tag_174\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":6651:6659  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":6631:6659  if(solution != 0x0) revert() */\n    tag_174:\n        /* \"contracts/0xBitcoinExtended.sol\":6743:6760  getMiningReward() */\n      tag_175\n        /* \"contracts/0xBitcoinExtended.sol\":6743:6758  getMiningReward */\n      tag_81\n        /* \"contracts/0xBitcoinExtended.sol\":6743:6760  getMiningReward() */\n      jump\t// in\n    tag_175:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":6807:6817  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6818  balances[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6806  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6818  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":6722:6760  uint reward_amount = getMiningReward() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6837  balances[msg.sender].add(reward_amount) */\n      tag_176\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":6722:6760  uint reward_amount = getMiningReward() */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6837  balances[msg.sender].add(reward_amount) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6822  balances[msg.sender].add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6837  balances[msg.sender].add(reward_amount) */\n      and\n      jump\t// in\n    tag_176:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":6784:6794  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6795  balances[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6783  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6795  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6837  balances[msg.sender] = balances[msg.sender].add(reward_amount) */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6879  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6898  tokensMinted.add(reward_amount) */\n      tag_178\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":6884:6897  reward_amount */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6898  tokensMinted.add(reward_amount) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6883  tokensMinted.add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6898  tokensMinted.add(reward_amount) */\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/0xBitcoinExtended.sol\":6852:6864  tokensMinted */\n      0x14\n        /* \"contracts/0xBitcoinExtended.sol\":6852:6898  tokensMinted = tokensMinted.add(reward_amount) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":6990:7005  maxSupplyForEra */\n      sload(0xe)\n        /* \"contracts/0xBitcoinExtended.sol\":6974:7005  tokensMinted <= maxSupplyForEra */\n      swap1\n      gt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":6967:7006  assert(tokensMinted <= maxSupplyForEra) */\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n        /* \"contracts/0xBitcoinExtended.sol\":7065:7077  lastRewardTo */\n      0xf\n        /* \"contracts/0xBitcoinExtended.sol\":7065:7090  lastRewardTo = msg.sender */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":7080:7090  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":7065:7090  lastRewardTo = msg.sender */\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":7104:7120  lastRewardAmount */\n      0x10\n        /* \"contracts/0xBitcoinExtended.sol\":7104:7136  lastRewardAmount = reward_amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":7177:7189  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":7150:7174  lastRewardEthBlockNumber */\n      0x11\n        /* \"contracts/0xBitcoinExtended.sol\":7150:7189  lastRewardEthBlockNumber = block.number */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":7206:7228  _startNewMiningEpoch() */\n      tag_180\n        /* \"contracts/0xBitcoinExtended.sol\":7206:7226  _startNewMiningEpoch */\n      tag_181\n        /* \"contracts/0xBitcoinExtended.sol\":7206:7228  _startNewMiningEpoch() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/0xBitcoinExtended.sol\":7250:7260  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":7245:7306  Mint(msg.sender, reward_amount, epochCount, challengeNumber ) */\n      and\n      0xcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d\n        /* \"contracts/0xBitcoinExtended.sol\":7262:7275  reward_amount */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":7277:7287  epochCount */\n      sload(0x7)\n        /* \"contracts/0xBitcoinExtended.sol\":7289:7304  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":7245:7306  Mint(msg.sender, reward_amount, epochCount, challengeNumber ) */\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n      swap1\n      swap2\n      add\n      swap1\n      mload\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7327:7331  true */\n      0x1\n      swap6\n        /* \"contracts/0xBitcoinExtended.sol\":5878:7343  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":12304:12420  function totalSupply() public constant returns (uint) {... */\n    tag_63:\n        /* \"contracts/0xBitcoinExtended.sol\":12352:12356  uint */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":12392:12412  balances[address(0)] */\n      dup1\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":12392:12400  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":12392:12412  balances[address(0)] */\n      0x20\n      mstore\n      sload(0xa31547ce6245cdb9ecea19cf8c7eb9f5974025bb4075011409251ae855b30aed)\n        /* \"contracts/0xBitcoinExtended.sol\":12376:12388  _totalSupply */\n      sload(0x5)\n        /* \"contracts/0xBitcoinExtended.sol\":12376:12412  _totalSupply  - balances[address(0)] */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":12304:12420  function totalSupply() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":14638:14976  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n    tag_66:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14771  balances[from] */\n      dup4\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":14715:14727  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14771  balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14765  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14771  balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14783  balances[from].sub(tokens) */\n      tag_184\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14776:14782  tokens */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14783  balances[from].sub(tokens) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14775  balances[from].sub */\n      tag_185\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14783  balances[from].sub(tokens) */\n      and\n      jump\t// in\n    tag_184:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14754  balances[from] */\n      dup1\n      dup7\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14748  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14754  balances[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14783  balances[from] = balances[from].sub(tokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14829  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14835  allowed[from] */\n      dup2\n      mstore\n      dup4\n      dup3\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14836:14846  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14847  allowed[from][msg.sender] */\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14859  allowed[from][msg.sender].sub(tokens) */\n      tag_186\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14852:14858  tokens */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14859  allowed[from][msg.sender].sub(tokens) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14851  allowed[from][msg.sender].sub */\n      tag_185\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14859  allowed[from][msg.sender].sub(tokens) */\n      and\n      jump\t// in\n    tag_186:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14807  allowed[from] */\n      dup1\n      dup7\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14801  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14807  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14808:14818  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14819  allowed[from][msg.sender] */\n      dup6\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14859  allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14897  balances[to] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14893  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14897  balances[to] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14909  balances[to].add(tokens) */\n      tag_187\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14902:14908  tokens */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14909  balances[to].add(tokens) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14901  balances[to].add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14909  balances[to].add(tokens) */\n      and\n      jump\t// in\n    tag_187:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14882  balances[to] */\n      dup1\n      dup6\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14878  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14882  balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14909  balances[to] = balances[to].add(tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14882  balances[to] */\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":14920:14946  Transfer(from, to, tokens) */\n      swap1\n      dup7\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14939:14945  tokens */\n      dup6\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14920:14946  Transfer(from, to, tokens) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14964:14968  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":14638:14976  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4559:4580  uint public rewardEra */\n    tag_69:\n      sload(0xd)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3975:3996  uint8 public decimals */\n    tag_72:\n      and(0xff, sload(0x4))\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":10995:11087  function getMiningTarget() public constant returns (uint) {... */\n    tag_75:\n        /* \"contracts/0xBitcoinExtended.sol\":11069:11081  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10995:11087  function getMiningTarget() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4003:4027  uint public _totalSupply */\n    tag_78:\n      sload(0x5)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\n    tag_81:\n        /* \"contracts/0xBitcoinExtended.sol\":11438:11447  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":11418:11426  decimals */\n      sload(0x4)\n        /* \"contracts/0xBitcoinExtended.sol\":11253:11257  uint */\n      0x0\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n      tag_169\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":11418:11426  decimals */\n      0xff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":11409:11411  10 */\n      0xa\n        /* \"contracts/0xBitcoinExtended.sol\":11409:11427  10**uint(decimals) */\n      exp\n        /* \"contracts/0xBitcoinExtended.sol\":11404:11406  50 */\n      0x32\n        /* \"contracts/0xBitcoinExtended.sol\":11404:11427  50 * 10**uint(decimals) */\n      mul\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":11435:11436  2 */\n      0x2\n        /* \"contracts/0xBitcoinExtended.sol\":11435:11447  2**rewardEra */\n      exp\n        /* \"contracts/0xBitcoinExtended.sol\":11403:11433  (50 * 10**uint(decimals) ).div */\n      tag_170\n        /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n      jump\t// in\n        /* \"contracts/0xBitcoinExtended.sol\":10678:10781  function getChallengeNumber() public constant returns (bytes32) {... */\n    tag_84:\n        /* \"contracts/0xBitcoinExtended.sol\":10759:10774  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":10678:10781  function getChallengeNumber() public constant returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4586:4613  uint public maxSupplyForEra */\n    tag_87:\n      sload(0xe)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":17074:18449  function mintWithoutPoW( ) public returns (bool success) {... */\n    tag_90:\n        /* \"contracts/0xBitcoinExtended.sol\":17117:17129  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":17867:17885  uint reward_amount */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":17888:17905  getMiningReward() */\n      tag_193\n        /* \"contracts/0xBitcoinExtended.sol\":17888:17903  getMiningReward */\n      tag_81\n        /* \"contracts/0xBitcoinExtended.sol\":17888:17905  getMiningReward() */\n      jump\t// in\n    tag_193:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":17948:17958  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17959  balances[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17947  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17959  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":17867:17905  uint reward_amount = getMiningReward() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17978  balances[msg.sender].add(reward_amount) */\n      tag_194\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":17867:17905  uint reward_amount = getMiningReward() */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17978  balances[msg.sender].add(reward_amount) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17963  balances[msg.sender].add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17978  balances[msg.sender].add(reward_amount) */\n      and\n      jump\t// in\n    tag_194:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":17925:17935  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17936  balances[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17924  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17936  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17978  balances[msg.sender] = balances[msg.sender].add(reward_amount) */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18016  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18035  tokensMinted.add(reward_amount) */\n      tag_195\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":18021:18034  reward_amount */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18035  tokensMinted.add(reward_amount) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18020  tokensMinted.add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18035  tokensMinted.add(reward_amount) */\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/0xBitcoinExtended.sol\":17989:18001  tokensMinted */\n      0x14\n        /* \"contracts/0xBitcoinExtended.sol\":17989:18035  tokensMinted = tokensMinted.add(reward_amount) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":18119:18134  maxSupplyForEra */\n      sload(0xe)\n        /* \"contracts/0xBitcoinExtended.sol\":18103:18134  tokensMinted <= maxSupplyForEra */\n      swap1\n      gt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":18096:18135  assert(tokensMinted <= maxSupplyForEra) */\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n        /* \"contracts/0xBitcoinExtended.sol\":18186:18198  lastRewardTo */\n      0xf\n        /* \"contracts/0xBitcoinExtended.sol\":18186:18211  lastRewardTo = msg.sender */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":18201:18211  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":18186:18211  lastRewardTo = msg.sender */\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":18221:18237  lastRewardAmount */\n      0x10\n        /* \"contracts/0xBitcoinExtended.sol\":18221:18253  lastRewardAmount = reward_amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":18290:18302  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":18263:18287  lastRewardEthBlockNumber */\n      0x11\n        /* \"contracts/0xBitcoinExtended.sol\":18263:18302  lastRewardEthBlockNumber = block.number */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":18318:18340  _startNewMiningEpoch() */\n      tag_197\n        /* \"contracts/0xBitcoinExtended.sol\":18318:18338  _startNewMiningEpoch */\n      tag_181\n        /* \"contracts/0xBitcoinExtended.sol\":18318:18340  _startNewMiningEpoch() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/0xBitcoinExtended.sol\":18437:18441  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":18430:18441  return true */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":17074:18449  function mintWithoutPoW( ) public returns (bool success) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":16988:17067  function setTokensMinted(uint amt) public   {... */\n    tag_93:\n        /* \"contracts/0xBitcoinExtended.sol\":17042:17054  tokensMinted */\n      0x14\n        /* \"contracts/0xBitcoinExtended.sol\":17042:17060  tokensMinted = amt */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":16988:17067  function setTokensMinted(uint amt) public   {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4812:4836  uint public tokensMinted */\n    tag_96:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4621:4648  address public lastRewardTo */\n    tag_99:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xf))\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":12645:12769  function balanceOf(address tokenOwner) public constant returns (uint balance) {... */\n    tag_102:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12761  balances[tokenOwner] */\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":12709:12721  uint balance */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12761  balances[tokenOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12749  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12761  balances[tokenOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":12645:12769  function balanceOf(address tokenOwner) public constant returns (uint balance) {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_105:\n        /* \"contracts/0xBitcoinExtended.sol\":3412:3420  newOwner */\n      sload(0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3408  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      swap1\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3412:3420  newOwner */\n      swap2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3390:3421  require(msg.sender == newOwner) */\n      tag_201\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_201:\n        /* \"contracts/0xBitcoinExtended.sol\":3460:3468  newOwner */\n      sload(0x1)\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3453:3458  owner */\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3460:3468  newOwner */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":3453:3458  owner */\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3432:3469  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":3488:3496  newOwner */\n      0x1\n      dup1\n      sload\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3496  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3488:3496  newOwner */\n      dup5\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3496  owner = newOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":3507:3528  newOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":11779:12113  function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {... */\n    tag_108:\n        /* \"contracts/0xBitcoinExtended.sol\":11911:11923  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":11938:11952  bytes32 digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":11965:11981  challenge_number */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":11982:11992  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":11993:11998  nonce */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":11955:11999  keccak256(challenge_number,msg.sender,nonce) */\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap2\n      swap1\n      swap2\n      and\n      0x1000000000000000000000000\n      mul\n      0x20\n      dup4\n      add\n      mstore\n      0x34\n      dup3\n      add\n      mstore\n      0x54\n      add\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      keccak256\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":12015:12043  uint256(digest) > testTarget */\n      dup3\n      dup2\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":12012:12053  if(uint256(digest) > testTarget) revert() */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":12045:12053  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":12012:12053  if(uint256(digest) > testTarget) revert() */\n    tag_203:\n        /* \"contracts/0xBitcoinExtended.sol\":12074:12100  digest == challenge_digest */\n      swap4\n      swap1\n      swap4\n      eq\n      swap5\n        /* \"contracts/0xBitcoinExtended.sol\":11779:12113  function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4087:4109  uint public epochCount */\n    tag_111:\n      sload(0x7)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4393:4430  uint public  _MAXIMUM_TARGET = 2**234 */\n    tag_114:\n      sload(0xa)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4438:4462  uint public miningTarget */\n    tag_117:\n      sload(0xb)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4469:4499  bytes32 public challengeNumber */\n    tag_120:\n      sload(0xc)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_123:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3922:3942  string public symbol */\n    tag_126:\n      0x2\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n        /* \"contracts/0xBitcoinExtended.sol\":11497:11734  function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {... */\n    tag_133:\n        /* \"contracts/0xBitcoinExtended.sol\":11608:11626  bytes32 digesttest */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":11639:11653  bytes32 digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":11666:11682  challenge_number */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":11683:11693  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":11694:11699  nonce */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":11656:11700  keccak256(challenge_number,msg.sender,nonce) */\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap2\n      swap1\n      swap2\n      and\n      0x1000000000000000000000000\n      mul\n      0x20\n      dup4\n      add\n      mstore\n      0x34\n      dup3\n      add\n      mstore\n      0x54\n      add\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      keccak256\n      swap6\n        /* \"contracts/0xBitcoinExtended.sol\":11497:11734  function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":13118:13380  function transfer(address to, uint tokens) public returns (bool success) {... */\n    tag_136:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":13234:13244  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13245  balances[msg.sender] */\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":13177:13189  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13245  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13233  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13245  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13257  balances[msg.sender].sub(tokens) */\n      tag_209\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":13250:13256  tokens */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13257  balances[msg.sender].sub(tokens) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13249  balances[msg.sender].sub */\n      tag_185\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13257  balances[msg.sender].sub(tokens) */\n      and\n      jump\t// in\n    tag_209:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":13211:13221  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13222  balances[msg.sender] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13210  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13222  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13257  balances[msg.sender] = balances[msg.sender].sub(tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13295  balances[to] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13307  balances[to].add(tokens) */\n      tag_210\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":13300:13306  tokens */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13307  balances[to].add(tokens) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13299  balances[to].add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13307  balances[to].add(tokens) */\n      and\n      jump\t// in\n    tag_210:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13280  balances[to] */\n      dup1\n      dup6\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13276  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13280  balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13307  balances[to] = balances[to].add(tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13280  balances[to] */\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":13327:13337  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13318:13350  Transfer(msg.sender, to, tokens) */\n      swap1\n      swap2\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":13343:13349  tokens */\n      dup6\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":13318:13350  Transfer(msg.sender, to, tokens) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":13368:13372  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":13118:13380  function transfer(address to, uint tokens) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4143:4186  uint public _BLOCKS_PER_READJUSTMENT = 1024 */\n    tag_139:\n      sload(0x8)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4654:4682  uint public lastRewardAmount */\n    tag_142:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":15779:16091  function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {... */\n    tag_145:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":15894:15904  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15905  allowed[msg.sender] */\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":15861:15873  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15905  allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15893  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15905  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15914  allowed[msg.sender][spender] */\n      swap5\n      dup9\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15923  allowed[msg.sender][spender] = tokens */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":15861:15873  bool success */\n      swap1\n      swap3\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15914  allowed[msg.sender][spender] */\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15905  allowed[msg.sender] */\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":15934:15971  Approval(msg.sender, spender, tokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":15917:15923  tokens */\n      dup7\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":15934:15971  Approval(msg.sender, spender, tokens) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":16005:16012  spender */\n      dup4\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":15982:16029  ApproveAndCallFallBack(spender).receiveApproval */\n      and\n      0x8f4ffcb1\n        /* \"contracts/0xBitcoinExtended.sol\":16030:16040  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":16042:16048  tokens */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":16050:16054  this */\n      address\n        /* \"contracts/0xBitcoinExtended.sol\":16056:16060  data */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":15982:16061  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      exp(0x2, 0xe0)\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_212:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":71:74   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_212)\n    tag_213:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_215:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_217\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_217:\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":16079:16083  true */\n      0x1\n      swap7\n        /* \"contracts/0xBitcoinExtended.sol\":15779:16091  function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4037:4078  uint public latestDifficultyPeriodStarted */\n    tag_148:\n      sload(0x6)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_151:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x1))\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":16576:16760  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {... */\n    tag_154:\n        /* \"contracts/0xBitcoinExtended.sol\":16668:16680  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      dup1\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      swap2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/0xBitcoinExtended.sol\":16738:16743  owner */\n      0x0\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":16700:16737  ERC20Interface(tokenAddress).transfer */\n      dup1\n      dup7\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"contracts/0xBitcoinExtended.sol\":16738:16743  owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":16745:16751  tokens */\n      dup6\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":16700:16752  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      add(0x20, mload(0x40))\n      mstore\n      mload(0x40)\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup6\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      0x4\n      dup4\n      add\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_221\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_221:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap5\n        /* \"contracts/0xBitcoinExtended.sol\":16576:16760  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4216:4252  uint public  _MINIMUM_TARGET = 2**16 */\n    tag_157:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":15262:15413  function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {... */\n    tag_160:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15396  allowed[tokenOwner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":15343:15357  uint remaining */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15396  allowed[tokenOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15384  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15396  allowed[tokenOwner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15405  allowed[tokenOwner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":15262:15413  function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_163:\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      sload(0x0)\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      swap2\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n      tag_225\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_225:\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3319  newOwner */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3331  newOwner = _newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\n    tag_170:\n        /* \"contracts/0xBitcoinExtended.sol\":1080:1086  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":1107:1112  b > 0 */\n      dup1\n      dup3\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":1099:1113  require(b > 0) */\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/0xBitcoinExtended.sol\":1132:1133  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1128:1129  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":1128:1133  a / b */\n      dup2\n      iszero\n      iszero\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      div\n      swap4\n        /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\n    tag_177:\n        /* \"contracts/0xBitcoinExtended.sol\":729:734  a + b */\n      dup2\n      dup2\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":753:759  c >= a */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":745:760  require(c >= a) */\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\n    tag_181:\n        /* \"contracts/0xBitcoinExtended.sol\":7749:7764  maxSupplyForEra */\n      sload(0xe)\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n      tag_233\n        /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n      tag_234\n        /* \"contracts/0xBitcoinExtended.sol\":7728:7743  getMiningReward */\n      tag_81\n        /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7723  tokensMinted */\n      sload(0x14)\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7727  tokensMinted.add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7764  tokensMinted.add(getMiningReward()) > maxSupplyForEra */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7780:7782  39 */\n      0x27\n        /* \"contracts/0xBitcoinExtended.sol\":7768:7777  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":7768:7782  rewardEra < 39 */\n      lt\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\n    tag_235:\n        /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":7812:7821  rewardEra */\n      0xd\n      dup1\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":7824:7825  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":7812:7825  rewardEra + 1 */\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":7800:7825  rewardEra = rewardEra + 1 */\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\n    tag_236:\n        /* \"contracts/0xBitcoinExtended.sol\":8032:8041  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8022  _totalSupply */\n      sload(0x5)\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n      tag_237\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":8044:8045  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":8032:8045  rewardEra + 1 */\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":8028:8029  2 */\n      0x2\n        /* \"contracts/0xBitcoinExtended.sol\":8028:8046  2**(rewardEra + 1) */\n      exp\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8026  _totalSupply.div */\n      tag_170\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/0xBitcoinExtended.sol\":7995:8007  _totalSupply */\n      sload(0x5)\n        /* \"contracts/0xBitcoinExtended.sol\":7995:8047  _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":7977:7992  maxSupplyForEra */\n      0xe\n        /* \"contracts/0xBitcoinExtended.sol\":7977:8047  maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8079  epochCount */\n      sload(0x7)\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n      tag_238\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":8084:8085  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8083  epochCount.add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/0xBitcoinExtended.sol\":8056:8066  epochCount */\n      0x7\n        /* \"contracts/0xBitcoinExtended.sol\":8056:8086  epochCount = epochCount.add(1) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":8185:8209  _BLOCKS_PER_READJUSTMENT */\n      sload(0x8)\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":8172:8209  epochCount % _BLOCKS_PER_READJUSTMENT */\n      dup2\n      iszero\n      iszero\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      mod\n        /* \"contracts/0xBitcoinExtended.sol\":8172:8214  epochCount % _BLOCKS_PER_READJUSTMENT == 0 */\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":8169:8262  if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n      tag_241\n        /* \"contracts/0xBitcoinExtended.sol\":8232:8251  _reAdjustDifficulty */\n      tag_242\n        /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n      jump\t// in\n    tag_241:\n      not(0x0)\n        /* \"contracts/0xBitcoinExtended.sol\":8503:8515  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":8503:8519  block.number - 1 */\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":8487:8520  block.blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/0xBitcoinExtended.sol\":8469:8484  challengeNumber */\n      0xc\n        /* \"contracts/0xBitcoinExtended.sol\":8469:8520  challengeNumber = block.blockhash(block.number - 1) */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\n    tag_185:\n        /* \"contracts/0xBitcoinExtended.sol\":826:832  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":853:859  b <= a */\n      dup3\n      dup3\n      gt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":845:860  require(b <= a) */\n      tag_244\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_244:\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":875:880  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\n    tag_242:\n        /* \"contracts/0xBitcoinExtended.sol\":8866:8895  latestDifficultyPeriodStarted */\n      sload(0x6)\n        /* \"contracts/0xBitcoinExtended.sol\":9085:9109  _BLOCKS_PER_READJUSTMENT */\n      sload(0x8)\n        /* \"contracts/0xBitcoinExtended.sol\":8851:8863  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":8851:8895  block.number - latestDifficultyPeriodStarted */\n      swap2\n      swap1\n      swap2\n      sub\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9176:9178  60 */\n      0x3c\n        /* \"contracts/0xBitcoinExtended.sol\":9162:9178  epochsMined * 60 */\n      dup2\n      mul\n        /* \"contracts/0xBitcoinExtended.sol\":8809:8848  uint ethBlocksSinceLastDifficultyPeriod */\n      0x0\n      dup1\n      dup1\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":9304:9369  ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod */\n      dup5\n      dup8\n      lt\n        /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      tag_247\n        /* \"contracts/0xBitcoinExtended.sol\":9461:9495  ethBlocksSinceLastDifficultyPeriod */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n      tag_248\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9445  targetEthBlocksPerDiffPeriod */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":9450:9453  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9449  targetEthBlocksPerDiffPeriod.mul */\n      tag_249\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9459  (targetEthBlocksPerDiffPeriod.mul(100)).div */\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9459  (targetEthBlocksPerDiffPeriod.mul(100)).div */\n      tag_170\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/0xBitcoinExtended.sol\":9392:9497  uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      swap4\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n      tag_250\n        /* \"contracts/0xBitcoinExtended.sol\":9580:9584  1000 */\n      0x3e8\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n      tag_251\n        /* \"contracts/0xBitcoinExtended.sol\":9392:9497  uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":9561:9564  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9560  excess_block_pct.sub */\n      tag_185\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n      and\n      jump\t// in\n    tag_251:\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9579  excess_block_pct.sub(100).limitLessThan */\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9579  excess_block_pct.sub(100).limitLessThan */\n      tag_252\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/0xBitcoinExtended.sol\":9510:9585  uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000) */\n      swap3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      tag_253\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n      tag_254\n        /* \"contracts/0xBitcoinExtended.sol\":9832:9854  excess_block_pct_extra */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n      tag_255\n        /* \"contracts/0xBitcoinExtended.sol\":9822:9826  2000 */\n      0x7d0\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9817  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9821  miningTarget.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9831  miningTarget.div(2000).mul */\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9831  miningTarget.div(2000).mul */\n      tag_249\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9800  miningTarget */\n      sload(0xb)\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9804  miningTarget.sub */\n      tag_185\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/0xBitcoinExtended.sol\":9773:9785  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":9773:9856  miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n      jump(tag_256)\n    tag_246:\n        /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n      tag_257\n        /* \"contracts/0xBitcoinExtended.sol\":9978:10006  targetEthBlocksPerDiffPeriod */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n      tag_248\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9962  ethBlocksSinceLastDifficultyPeriod */\n      dup10\n        /* \"contracts/0xBitcoinExtended.sol\":9967:9970  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9966  ethBlocksSinceLastDifficultyPeriod.mul */\n      tag_249\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n      and\n      jump\t// in\n        /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n    tag_257:\n        /* \"contracts/0xBitcoinExtended.sol\":9901:10008  uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n      tag_259\n        /* \"contracts/0xBitcoinExtended.sol\":10095:10099  1000 */\n      0x3e8\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n      tag_251\n        /* \"contracts/0xBitcoinExtended.sol\":9901:10008  uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":10076:10079  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10075  shortage_block_pct.sub */\n      tag_185\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n      and\n      jump\t// in\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n    tag_259:\n        /* \"contracts/0xBitcoinExtended.sol\":10021:10100  uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      tag_261\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n      tag_262\n        /* \"contracts/0xBitcoinExtended.sol\":10227:10251  shortage_block_pct_extra */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n      tag_255\n        /* \"contracts/0xBitcoinExtended.sol\":10217:10221  2000 */\n      0x7d0\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10212  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10216  miningTarget.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n    tag_262:\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10195  miningTarget */\n      sload(0xb)\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      0xffffffff\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10199  miningTarget.add */\n      tag_177\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      and\n      jump\t// in\n    tag_261:\n        /* \"contracts/0xBitcoinExtended.sol\":10168:10180  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":10168:10253  miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n    tag_256:\n        /* \"contracts/0xBitcoinExtended.sol\":10326:10338  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":10294:10323  latestDifficultyPeriodStarted */\n      0x6\n        /* \"contracts/0xBitcoinExtended.sol\":10294:10338  latestDifficultyPeriodStarted = block.number */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":10367:10382  _MINIMUM_TARGET */\n      sload(0x9)\n        /* \"contracts/0xBitcoinExtended.sol\":10352:10364  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10352:10382  miningTarget < _MINIMUM_TARGET */\n      lt\n        /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":10436:10451  _MINIMUM_TARGET */\n      sload(0x9)\n        /* \"contracts/0xBitcoinExtended.sol\":10421:10433  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":10421:10451  miningTarget = _MINIMUM_TARGET */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\n    tag_264:\n        /* \"contracts/0xBitcoinExtended.sol\":10490:10505  _MAXIMUM_TARGET */\n      sload(0xa)\n        /* \"contracts/0xBitcoinExtended.sol\":10475:10487  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10475:10505  miningTarget > _MAXIMUM_TARGET */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":10554:10569  _MAXIMUM_TARGET */\n      sload(0xa)\n        /* \"contracts/0xBitcoinExtended.sol\":10539:10551  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":10539:10569  miningTarget = _MAXIMUM_TARGET */\n      sstore\n        /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\n    tag_265:\n        /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":894:1022  function mul(uint a, uint b) internal pure returns (uint c) {... */\n    tag_249:\n        /* \"contracts/0xBitcoinExtended.sol\":969:974  a * b */\n      dup2\n      dup2\n      mul\n        /* \"contracts/0xBitcoinExtended.sol\":993:999  a == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\n      tag_267\n      jumpi\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":1012:1013  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1007:1008  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":1003:1004  c */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":1003:1008  c / a */\n      dup2\n      iszero\n      iszero\n      tag_268\n      jumpi\n      invalid\n    tag_268:\n      div\n        /* \"contracts/0xBitcoinExtended.sol\":1003:1013  c / a == b */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\n    tag_267:\n        /* \"contracts/0xBitcoinExtended.sol\":985:1014  require(a == 0 || c / a == b) */\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\n    tag_252:\n        /* \"contracts/0xBitcoinExtended.sol\":1291:1297  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":1317:1318  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1313:1314  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":1313:1318  a > b */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\n      iszero\n      tag_271\n      jumpi\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":1327:1328  b */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":1320:1328  return b */\n      jump(tag_167)\n        /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\n    tag_271:\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":1346:1347  a */\n      swap1\n      swap2\n        /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058204247932f7ab7398807c2fc5704ae0d6e7750286377828b0773ef160b2e8f32180029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "6060604052610400600855620100006009557d040000000000000000000000000000000000000000000000000000000000600a556012805460ff1916905534156200004957600080fd5b60008054600160a060020a03338116600160a060020a031990921682179283905591909116146200007957600080fd5b60408051908101604052600581527f307842544300000000000000000000000000000000000000000000000000000060208201526002908051620000c2929160200190620004fd565b5060408051908101604052600f81527f3078426974636f696e20546f6b656e0000000000000000000000000000000000602082015260039080516200010c929160200190620004fd565b506004805460ff1916600817908190556301406f4060ff918216600a0a0260055560125416156200013c57600080fd5b6012805460ff1916600117905560006014819055600d5560055462000171906002640100000000620010976200019c82021704565b600e55600a54600b554360065562000196640100000000620010c8620001bf82021704565b6200059f565b6000808211620001ab57600080fd5b8183811515620001b757fe5b049392505050565b600e54620001f6620001de64010000000062000a5f6200029e82021704565b60145490640100000000620010b8620002d382021704565b1180156200020657506027600d54105b156200021657600d805460010190555b600d546005546200023b9160010160020a640100000000620010976200019c82021704565b60055403600e5560075462000260906001640100000000620010b8620002d382021704565b6007819055600854908115156200027357fe5b0615156200029357620002936401000000006200117a620002ea82021704565b600019430140600c55565b600d54600454600091620002cd9160ff16600a0a6032029060020a6401000000006200019c8102620010971704565b90505b90565b81810182811015620002e457600080fd5b92915050565b600654600854439190910390603c8102600080808084871015620003de576200033d8762000328876064640100000000620012b4620004a582021704565b90640100000000620010976200019c82021704565b9350620003766103e86200036186606464010000000062001165620004cd82021704565b90640100000000620012d9620004e382021704565b9250620003d5620003bd84620003a86107d0600b546200019c6401000000000262001097179091906401000000009004565b90640100000000620012b4620004a582021704565b600b549064010000000062001165620004cd82021704565b600b5562000470565b620003fe8562000328896064640100000000620012b4620004a582021704565b9150620004226103e86200036184606464010000000062001165620004cd82021704565b90506200046c6200045482620003a86107d0600b546200019c6401000000000262001097179091906401000000009004565b600b5490640100000000620010b8620002d382021704565b600b555b43600655600954600b5410156200048857600954600b555b600a54600b5411156200049c57600a54600b555b50505050505050565b818102821580620004c15750818382811515620004be57fe5b04145b1515620002e457600080fd5b600082821115620004dd57600080fd5b50900390565b600081831115620004f6575080620002e4565b5090919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200054057805160ff191683800117855562000570565b8280016001018555821562000570579182015b828111156200057057825182559160200191906001019062000553565b506200057e92915062000582565b5090565b620002d091905b808211156200057e576000815560010162000589565b61131d80620005af6000396000f3006060604052600436106101be5763ffffffff60e060020a60003504166306fdde0381146101c3578063095ea7b31461024d578063163aa00d1461028357806317da485f146102a85780631801fbe5146102bb57806318160ddd146102d457806323b872dd146102e75780632d38bf7a1461030f578063313ce5671461032257806332e997081461034b5780633eaaf86b1461035e578063490203a7146103715780634ef37628146103845780634fa972e1146103975780635515a1ea146103aa5780635ce7e030146103bd5780636de9f32b146103d55780636fd396d6146103e857806370a082311461041757806379ba50971461043657806381269a5614610449578063829965cc1461046857806387a2a9d61461047b5780638a769d351461048e5780638ae0368b146104a15780638da5cb5b146104b457806395d89b41146104c757806397566aa0146104da578063a9059cbb146104f6578063b5ade81b14610518578063bafedcaa1461052b578063cae9ca511461053e578063cb9ae707146105a3578063d4ee1d90146105b6578063dc39d06d146105c9578063dc6e9cf9146105eb578063dd62ed3e146105fe578063f2fde38b14610623575b600080fd5b34156101ce57600080fd5b6101d6610642565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156102125780820151838201526020016101fa565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561025857600080fd5b61026f600160a060020a03600435166024356106e0565b604051901515815260200160405180910390f35b341561028e57600080fd5b61029661074d565b60405190815260200160405180910390f35b34156102b357600080fd5b610296610753565b34156102c657600080fd5b61026f600435602435610771565b34156102df57600080fd5b6102966108ff565b34156102f257600080fd5b61026f600160a060020a0360043581169060243516604435610931565b341561031a57600080fd5b610296610a44565b341561032d57600080fd5b610335610a4a565b60405160ff909116815260200160405180910390f35b341561035657600080fd5b610296610a53565b341561036957600080fd5b610296610a59565b341561037c57600080fd5b610296610a5f565b341561038f57600080fd5b610296610a7e565b34156103a257600080fd5b610296610a84565b34156103b557600080fd5b61026f610a8a565b34156103c857600080fd5b6103d3600435610b3f565b005b34156103e057600080fd5b610296610b44565b34156103f357600080fd5b6103fb610b4a565b604051600160a060020a03909116815260200160405180910390f35b341561042257600080fd5b610296600160a060020a0360043516610b59565b341561044157600080fd5b6103d3610b74565b341561045457600080fd5b61026f600435602435604435606435610c02565b341561047357600080fd5b610296610c5a565b341561048657600080fd5b610296610c60565b341561049957600080fd5b610296610c66565b34156104ac57600080fd5b610296610c6c565b34156104bf57600080fd5b6103fb610c72565b34156104d257600080fd5b6101d6610c81565b34156104e557600080fd5b610296600435602435604435610cec565b341561050157600080fd5b61026f600160a060020a0360043516602435610d32565b341561052357600080fd5b610296610df1565b341561053657600080fd5b610296610df7565b341561054957600080fd5b61026f60048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610dfd95505050505050565b34156105ae57600080fd5b610296610f64565b34156105c157600080fd5b6103fb610f6a565b34156105d457600080fd5b61026f600160a060020a0360043516602435610f79565b34156105f657600080fd5b61029661101c565b341561060957600080fd5b610296600160a060020a0360043581169060243516611022565b341561062e57600080fd5b6103d3600160a060020a036004351661104d565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d85780601f106106ad576101008083540402835291602001916106d8565b820191906000526020600020905b8154815290600101906020018083116106bb57829003601f168201915b505050505081565b600160a060020a03338116600081815260166020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60115481565b600061076c600b54600a5461109790919063ffffffff16565b905090565b600080600080600c543387604051928352600160a060020a03919091166c01000000000000000000000000026020830152603482015260540160405190819003902092508483146107c157600080fd5b600b548311156107d057600080fd5b600c546000908152601360205260409020805490849055915081156107f457600080fd5b6107fc610a5f565b600160a060020a033316600090815260156020526040902054909150610828908263ffffffff6110b816565b600160a060020a033316600090815260156020526040902055601454610854908263ffffffff6110b816565b6014819055600e5490111561086557fe5b600f805473ffffffffffffffffffffffffffffffffffffffff191633600160a060020a031617905560108190554360115561089e6110c8565b33600160a060020a03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d82600754600c5460405192835260208301919091526040808301919091526060909101905180910390a250600195945050505050565b6000805260156020527fa31547ce6245cdb9ecea19cf8c7eb9f5974025bb4075011409251ae855b30aed546005540390565b600160a060020a03831660009081526015602052604081205461095a908363ffffffff61116516565b600160a060020a038086166000908152601560209081526040808320949094556016815283822033909316825291909152205461099d908363ffffffff61116516565b600160a060020a03808616600090815260166020908152604080832033851684528252808320949094559186168152601590915220546109e3908363ffffffff6110b816565b600160a060020a03808516600081815260156020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600d5481565b60045460ff1681565b600b5490565b60055481565b600d5460045460009161076c9160ff16600a0a6032029060020a611097565b600c5490565b600e5481565b600080610a95610a5f565b600160a060020a033316600090815260156020526040902054909150610ac1908263ffffffff6110b816565b600160a060020a033316600090815260156020526040902055601454610aed908263ffffffff6110b816565b6014819055600e54901115610afe57fe5b600f805473ffffffffffffffffffffffffffffffffffffffff191633600160a060020a0316179055601081905543601155610b376110c8565b600191505090565b601455565b60145481565b600f54600160a060020a031681565b600160a060020a031660009081526015602052604090205490565b60015433600160a060020a03908116911614610b8f57600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600080833387604051928352600160a060020a03919091166c010000000000000000000000000260208301526034820152605401604051908190039020905082811115610c4e57600080fd5b93909314949350505050565b60075481565b600a5481565b600b5481565b600c5481565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d85780601f106106ad576101008083540402835291602001916106d8565b600080823386604051928352600160a060020a03919091166c01000000000000000000000000026020830152603482015260540160405190819003902095945050505050565b600160a060020a033316600090815260156020526040812054610d5b908363ffffffff61116516565b600160a060020a033381166000908152601560205260408082209390935590851681522054610d90908363ffffffff6110b816565b600160a060020a0380851660008181526015602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b60085481565b60105481565b600160a060020a03338116600081815260166020908152604080832094881680845294909152808220869055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a383600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ef8578082015183820152602001610ee0565b50505050905090810190601f168015610f255780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610f4657600080fd5b6102c65a03f11515610f5757600080fd5b5060019695505050505050565b60065481565b600154600160a060020a031681565b6000805433600160a060020a03908116911614610f9557600080fd5b60008054600160a060020a038086169263a9059cbb929091169085906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610ffb57600080fd5b6102c65a03f1151561100c57600080fd5b5050506040518051949350505050565b60095481565b600160a060020a03918216600090815260166020908152604080832093909416825291909152205490565b60005433600160a060020a0390811691161461106857600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008082116110a557600080fd5b81838115156110b057fe5b049392505050565b8181018281101561074757600080fd5b600e546110e56110d6610a5f565b6014549063ffffffff6110b816565b1180156110f457506027600d54105b1561110357600d805460010190555b600d5460055461111e9160010160020a63ffffffff61109716565b60055403600e5560075461113990600163ffffffff6110b816565b60078190556008549081151561114b57fe5b06151561115a5761115a61117a565b600019430140600c55565b60008282111561117457600080fd5b50900390565b600654600854439190910390603c8102600080808084871015611220576111b8876111ac87606463ffffffff6112b416565b9063ffffffff61109716565b93506111dd6103e86111d186606463ffffffff61116516565b9063ffffffff6112d916565b9250611218611209846111fd6107d0600b5461109790919063ffffffff16565b9063ffffffff6112b416565b600b549063ffffffff61116516565b600b55611281565b611235856111ac89606463ffffffff6112b416565b915061124e6103e86111d184606463ffffffff61116516565b905061127d61126e826111fd6107d0600b5461109790919063ffffffff16565b600b549063ffffffff6110b816565b600b555b43600655600954600b54101561129857600954600b555b600a54600b5411156112ab57600a54600b555b50505050505050565b8181028215806112ce57508183828115156112cb57fe5b04145b151561074757600080fd5b6000818311156112ea575080610747565b50909190505600a165627a7a723058204247932f7ab7398807c2fc5704ae0d6e7750286377828b0773ef160b2e8f32180029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH2 0x400 PUSH1 0x8 SSTORE PUSH3 0x10000 PUSH1 0x9 SSTORE PUSH30 0x40000000000000000000000000000000000000000000000000000000000 PUSH1 0xA SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE ISZERO PUSH3 0x49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP3 AND DUP3 OR SWAP3 DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 AND EQ PUSH3 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0x3078425443000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 DUP1 MLOAD PUSH3 0xC2 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH3 0x4FD JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xF DUP2 MSTORE PUSH32 0x3078426974636F696E20546F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 DUP1 MLOAD PUSH3 0x10C SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH3 0x4FD JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x8 OR SWAP1 DUP2 SWAP1 SSTORE PUSH4 0x1406F40 PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0xA EXP MUL PUSH1 0x5 SSTORE PUSH1 0x12 SLOAD AND ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0xD SSTORE PUSH1 0x5 SLOAD PUSH3 0x171 SWAP1 PUSH1 0x2 PUSH5 0x100000000 PUSH3 0x1097 PUSH3 0x19C DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0xA SLOAD PUSH1 0xB SSTORE NUMBER PUSH1 0x6 SSTORE PUSH3 0x196 PUSH5 0x100000000 PUSH3 0x10C8 PUSH3 0x1BF DUP3 MUL OR DIV JUMP JUMPDEST PUSH3 0x59F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH3 0x1B7 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH3 0x1F6 PUSH3 0x1DE PUSH5 0x100000000 PUSH3 0xA5F PUSH3 0x29E DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 PUSH5 0x100000000 PUSH3 0x10B8 PUSH3 0x2D3 DUP3 MUL OR DIV JUMP JUMPDEST GT DUP1 ISZERO PUSH3 0x206 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH3 0x216 JUMPI PUSH1 0xD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0x5 SLOAD PUSH3 0x23B SWAP2 PUSH1 0x1 ADD PUSH1 0x2 EXP PUSH5 0x100000000 PUSH3 0x1097 PUSH3 0x19C DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x5 SLOAD SUB PUSH1 0xE SSTORE PUSH1 0x7 SLOAD PUSH3 0x260 SWAP1 PUSH1 0x1 PUSH5 0x100000000 PUSH3 0x10B8 PUSH3 0x2D3 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH3 0x273 JUMPI INVALID JUMPDEST MOD ISZERO ISZERO PUSH3 0x293 JUMPI PUSH3 0x293 PUSH5 0x100000000 PUSH3 0x117A PUSH3 0x2EA DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x0 NOT NUMBER ADD BLOCKHASH PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH3 0x2CD SWAP2 PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x32 MUL SWAP1 PUSH1 0x2 EXP PUSH5 0x100000000 PUSH3 0x19C DUP2 MUL PUSH3 0x1097 OR DIV JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD NUMBER SWAP2 SWAP1 SWAP2 SUB SWAP1 PUSH1 0x3C DUP2 MUL PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 DUP8 LT ISZERO PUSH3 0x3DE JUMPI PUSH3 0x33D DUP8 PUSH3 0x328 DUP8 PUSH1 0x64 PUSH5 0x100000000 PUSH3 0x12B4 PUSH3 0x4A5 DUP3 MUL OR DIV JUMP JUMPDEST SWAP1 PUSH5 0x100000000 PUSH3 0x1097 PUSH3 0x19C DUP3 MUL OR DIV JUMP JUMPDEST SWAP4 POP PUSH3 0x376 PUSH2 0x3E8 PUSH3 0x361 DUP7 PUSH1 0x64 PUSH5 0x100000000 PUSH3 0x1165 PUSH3 0x4CD DUP3 MUL OR DIV JUMP JUMPDEST SWAP1 PUSH5 0x100000000 PUSH3 0x12D9 PUSH3 0x4E3 DUP3 MUL OR DIV JUMP JUMPDEST SWAP3 POP PUSH3 0x3D5 PUSH3 0x3BD DUP5 PUSH3 0x3A8 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH3 0x19C PUSH5 0x100000000 MUL PUSH3 0x1097 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST SWAP1 PUSH5 0x100000000 PUSH3 0x12B4 PUSH3 0x4A5 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH5 0x100000000 PUSH3 0x1165 PUSH3 0x4CD DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0xB SSTORE PUSH3 0x470 JUMP JUMPDEST PUSH3 0x3FE DUP6 PUSH3 0x328 DUP10 PUSH1 0x64 PUSH5 0x100000000 PUSH3 0x12B4 PUSH3 0x4A5 DUP3 MUL OR DIV JUMP JUMPDEST SWAP2 POP PUSH3 0x422 PUSH2 0x3E8 PUSH3 0x361 DUP5 PUSH1 0x64 PUSH5 0x100000000 PUSH3 0x1165 PUSH3 0x4CD DUP3 MUL OR DIV JUMP JUMPDEST SWAP1 POP PUSH3 0x46C PUSH3 0x454 DUP3 PUSH3 0x3A8 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH3 0x19C PUSH5 0x100000000 MUL PUSH3 0x1097 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH5 0x100000000 PUSH3 0x10B8 PUSH3 0x2D3 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST NUMBER PUSH1 0x6 SSTORE PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH3 0x488 JUMPI PUSH1 0x9 SLOAD PUSH1 0xB SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH3 0x49C JUMPI PUSH1 0xA SLOAD PUSH1 0xB SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP1 PUSH3 0x4C1 JUMPI POP DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH3 0x4BE JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH3 0x4F6 JUMPI POP DUP1 PUSH3 0x2E4 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x540 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x570 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x570 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x570 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x553 JUMP JUMPDEST POP PUSH3 0x57E SWAP3 SWAP2 POP PUSH3 0x582 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2D0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x57E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x589 JUMP JUMPDEST PUSH2 0x131D DUP1 PUSH3 0x5AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BE JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x163AA00D EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x5515A1EA EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x5CE7E030 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x6FD396D6 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xBAFEDCAA EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x623 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D6 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x212 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x753 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x771 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x8FF JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x931 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA44 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x335 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA53 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA59 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA5F JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA7E JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA84 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH2 0xA8A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 PUSH1 0x4 CALLDATALOAD PUSH2 0xB3F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xB44 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FB PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xB59 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 PUSH2 0xB74 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0xC02 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC5A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC60 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC66 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC6C JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FB PUSH2 0xC72 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D6 PUSH2 0xC81 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xCEC JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xD32 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xDF1 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xDF7 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x64 SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ADD SWAP1 DUP4 ADD CALLDATALOAD DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 ADD DUP2 SWAP1 DIV DUP2 MUL ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP5 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP7 POP PUSH2 0xDFD SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xF64 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FB PUSH2 0xF6A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xF79 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x101C JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1022 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x104D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1097 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC SLOAD CALLER DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP3 POP DUP5 DUP4 EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE SWAP2 POP DUP2 ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FC PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x828 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0x854 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0xE SLOAD SWAP1 GT ISZERO PUSH2 0x865 JUMPI INVALID JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND OR SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE NUMBER PUSH1 0x11 SSTORE PUSH2 0x89E PUSH2 0x10C8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D DUP3 PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH32 0xA31547CE6245CDB9ECEA19CF8C7EB9F5974025BB4075011409251AE855B30AED SLOAD PUSH1 0x5 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x95A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x16 DUP2 MSTORE DUP4 DUP3 KECCAK256 CALLER SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x99D SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x9E3 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 SWAP1 DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x76C SWAP2 PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x32 MUL SWAP1 PUSH1 0x2 EXP PUSH2 0x1097 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA95 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xAC1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0xAED SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0xE SLOAD SWAP1 GT ISZERO PUSH2 0xAFE JUMPI INVALID JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND OR SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE NUMBER PUSH1 0x11 SSTORE PUSH2 0xB37 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xC4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLER DUP7 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD5B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xD90 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 CALLER SWAP1 SWAP2 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP7 SWAP1 SSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 DUP7 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x8F4FFCB1 CALLER DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF8 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEE0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF25 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP6 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x10A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x10B0 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH2 0x10E5 PUSH2 0x10D6 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x10F4 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH2 0x1103 JUMPI PUSH1 0xD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0x5 SLOAD PUSH2 0x111E SWAP2 PUSH1 0x1 ADD PUSH1 0x2 EXP PUSH4 0xFFFFFFFF PUSH2 0x1097 AND JUMP JUMPDEST PUSH1 0x5 SLOAD SUB PUSH1 0xE SSTORE PUSH1 0x7 SLOAD PUSH2 0x1139 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH2 0x114B JUMPI INVALID JUMPDEST MOD ISZERO ISZERO PUSH2 0x115A JUMPI PUSH2 0x115A PUSH2 0x117A JUMP JUMPDEST PUSH1 0x0 NOT NUMBER ADD BLOCKHASH PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD NUMBER SWAP2 SWAP1 SWAP2 SUB SWAP1 PUSH1 0x3C DUP2 MUL PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 DUP8 LT ISZERO PUSH2 0x1220 JUMPI PUSH2 0x11B8 DUP8 PUSH2 0x11AC DUP8 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1097 AND JUMP JUMPDEST SWAP4 POP PUSH2 0x11DD PUSH2 0x3E8 PUSH2 0x11D1 DUP7 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x12D9 AND JUMP JUMPDEST SWAP3 POP PUSH2 0x1218 PUSH2 0x1209 DUP5 PUSH2 0x11FD PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1097 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x1235 DUP6 PUSH2 0x11AC DUP10 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST SWAP2 POP PUSH2 0x124E PUSH2 0x3E8 PUSH2 0x11D1 DUP5 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x127D PUSH2 0x126E DUP3 PUSH2 0x11FD PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1097 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST NUMBER PUSH1 0x6 SSTORE PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x9 SLOAD PUSH1 0xB SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x12AB JUMPI PUSH1 0xA SLOAD PUSH1 0xB SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP1 PUSH2 0x12CE JUMPI POP DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH2 0x12CB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x12EA JUMPI POP DUP1 PUSH2 0x747 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP 0x47 SWAP4 0x2f PUSH27 0xB7398807C2FC5704AE0D6E7750286377828B0773EF160B2E8F3218 STOP 0x29 ",
              "sourceMap": "3801:14652:0:-;;;4182:4;4143:43;;4247:5;4216:36;;4424:6;4393:37;;4731:19;;;-1:-1:-1;;4731:19:0;;;5230:635;;;;;;;;3119:5;:18;;-1:-1:-1;;;;;3127:10:0;3119:18;;-1:-1:-1;;;;;;3119:18:0;;;;;;;;;3204:5;;;;3190:19;3182:28;;;;;;5286:16;;;;;;;;;;;;;;;;:6;;:16;;;;;;;;;:::i;:::-;;5313:24;;;;;;;;;;;;;;;;:4;;:24;;;;;;;;;:::i;:::-;-1:-1:-1;5348:8:0;:12;;-1:-1:-1;;5348:12:0;5359:1;5348:12;;;;;5386:8;5348:12;5406:8;;;5397:2;:18;5386:29;5371:12;:44;5429:6;;;5426:19;;;5437:8;;;5426:19;5455:6;:13;;-1:-1:-1;;5455:13:0;5464:4;5455:13;;;:6;5479:12;:16;;;5506:9;:13;-1:-1:-1;5547:12:0;:19;;5564:1;5547:16;;;;;;:19;:::i;:::-;5529:15;:37;5592:15;;5577:12;:30;5650:12;5618:29;:44;5673:22;:20;;;;;;:22;:::i;:::-;3801:14652;;1028:113;1080:6;1107:5;;;1099:14;;;;;;1132:1;1128;:5;;;;;;;;;1028:113;-1:-1:-1;;;1028:113:0:o;7382:1151::-;7749:15;;7711:35;7728:17;:15;;;;;;:17;:::i;:::-;7711:12;;;:16;;;;;;:35;:::i;:::-;:53;:71;;;;;7780:2;7768:9;;:14;7711:71;7707:127;;;7812:9;;;7824:1;7812:13;7800:25;;7707:127;8032:9;;8010:12;;:37;;8044:1;8032:13;8028:1;:18;8010:16;;;;;;:37;:::i;:::-;7995:12;;:52;7977:15;:70;8069:10;;:17;;8084:1;8069:14;;;;;;:17;:::i;:::-;8056:10;:30;;;8185:24;;;8172:37;;;;;;;;:42;8169:93;;;8232:21;:19;;;;;;:21;:::i;:::-;-1:-1:-1;;8503:12:0;:16;8487:33;8469:15;:51;7382:1151::o;11201:257::-;11438:9;;11418:8;;11253:4;;11403:46;;11418:8;;11409:2;:18;11404:2;:23;;11435:1;:12;11403:30;;;;;;:46;:::i;:::-;11396:53;;11201:257;;:::o;654:114::-;729:5;;;753:6;;;;745:15;;;;;;654:114;;;;:::o;8757:1829::-;8866:29;;9085:24;;8851:12;:44;;;;;9176:2;9162:16;;8809:39;;;;9304:65;;;9300:982;;;9416:81;9461:34;9417:37;:28;9450:3;9417:32;;;;;;:37;:::i;:::-;9416:43;;;;;;;:81;:::i;:::-;9392:105;-1:-1:-1;9540:45:0;9580:4;9540:25;9392:105;9561:3;9540:20;;;;;;:25;:::i;:::-;:39;;;;;;;:45;:::i;:::-;9510:75;;9788:68;9805:50;9832:22;9805;9822:4;9805:12;;:16;;;;;;:22;;;;;:::i;:::-;:26;;;;;;;:50;:::i;:::-;9788:12;;;:16;;;;;;:68;:::i;:::-;9773:12;:83;9300:982;;;9927:81;9978:28;9928:43;:34;9967:3;9928:38;;;;;;:43;:::i;9927:81::-;9901:107;-1:-1:-1;10053:47:0;10095:4;10053:27;9901:107;10076:3;10053:22;;;;;;:27;:::i;:47::-;10021:79;;10183:70;10200:52;10227:24;10200:22;10217:4;10200:12;;:16;;;;;;:22;;;;;:::i;:52::-;10183:12;;;:16;;;;;;:70;:::i;:::-;10168:12;:85;9300:982;10326:12;10294:29;:44;10367:15;;10352:12;;:30;10349:113;;;10436:15;;10421:12;:30;10349:113;10490:15;;10475:12;;:30;10472:108;;;10554:15;;10539:12;:30;10472:108;8757:1829;;;;;;;:::o;894:128::-;969:5;;;993:6;;;:20;;;1012:1;1007;1003;:5;;;;;;;;:10;993:20;985:29;;;;;;;774:114;826:6;853;;;;845:15;;;;;;-1:-1:-1;875:5:0;;;774:114::o;1229:126::-;1291:6;1317:1;1313;:5;1310:18;;;-1:-1:-1;1327:1:0;1320:8;;1310:18;-1:-1:-1;1346:1:0;;1229:126;-1:-1:-1;1229:126:0:o;3801:14652::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3801:14652:0;;;-1:-1:-1;3801:14652:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BE JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x163AA00D EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x5515A1EA EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x5CE7E030 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x6FD396D6 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xBAFEDCAA EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x623 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D6 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x212 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x753 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x771 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x8FF JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x931 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA44 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x335 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA53 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA59 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA5F JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA7E JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xA84 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH2 0xA8A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 PUSH1 0x4 CALLDATALOAD PUSH2 0xB3F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xB44 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FB PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xB59 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 PUSH2 0xB74 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0xC02 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC5A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC60 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC66 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xC6C JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FB PUSH2 0xC72 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D6 PUSH2 0xC81 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xCEC JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xD32 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xDF1 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xDF7 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x64 SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ADD SWAP1 DUP4 ADD CALLDATALOAD DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 ADD DUP2 SWAP1 DIV DUP2 MUL ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP5 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP7 POP PUSH2 0xDFD SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0xF64 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FB PUSH2 0xF6A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xF79 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH2 0x101C JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x1022 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x104D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1097 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC SLOAD CALLER DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP3 POP DUP5 DUP4 EQ PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE SWAP2 POP DUP2 ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FC PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x828 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0x854 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0xE SLOAD SWAP1 GT ISZERO PUSH2 0x865 JUMPI INVALID JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND OR SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE NUMBER PUSH1 0x11 SSTORE PUSH2 0x89E PUSH2 0x10C8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D DUP3 PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH32 0xA31547CE6245CDB9ECEA19CF8C7EB9F5974025BB4075011409251AE855B30AED SLOAD PUSH1 0x5 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x95A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x16 DUP2 MSTORE DUP4 DUP3 KECCAK256 CALLER SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x99D SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x9E3 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 SWAP1 DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x76C SWAP2 PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x32 MUL SWAP1 PUSH1 0x2 EXP PUSH2 0x1097 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA95 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xAC1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0xAED SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0xE SLOAD SWAP1 GT ISZERO PUSH2 0xAFE JUMPI INVALID JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND OR SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE NUMBER PUSH1 0x11 SSTORE PUSH2 0xB37 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xC4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLER DUP7 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH13 0x1000000000000000000000000 MUL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD5B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xD90 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 CALLER SWAP1 SWAP2 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP7 SWAP1 SSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 DUP7 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x8F4FFCB1 CALLER DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF8 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEE0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF25 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP6 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x10A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x10B0 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH2 0x10E5 PUSH2 0x10D6 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x10F4 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH2 0x1103 JUMPI PUSH1 0xD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0x5 SLOAD PUSH2 0x111E SWAP2 PUSH1 0x1 ADD PUSH1 0x2 EXP PUSH4 0xFFFFFFFF PUSH2 0x1097 AND JUMP JUMPDEST PUSH1 0x5 SLOAD SUB PUSH1 0xE SSTORE PUSH1 0x7 SLOAD PUSH2 0x1139 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH2 0x114B JUMPI INVALID JUMPDEST MOD ISZERO ISZERO PUSH2 0x115A JUMPI PUSH2 0x115A PUSH2 0x117A JUMP JUMPDEST PUSH1 0x0 NOT NUMBER ADD BLOCKHASH PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD NUMBER SWAP2 SWAP1 SWAP2 SUB SWAP1 PUSH1 0x3C DUP2 MUL PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 DUP8 LT ISZERO PUSH2 0x1220 JUMPI PUSH2 0x11B8 DUP8 PUSH2 0x11AC DUP8 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1097 AND JUMP JUMPDEST SWAP4 POP PUSH2 0x11DD PUSH2 0x3E8 PUSH2 0x11D1 DUP7 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x12D9 AND JUMP JUMPDEST SWAP3 POP PUSH2 0x1218 PUSH2 0x1209 DUP5 PUSH2 0x11FD PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1097 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x1235 DUP6 PUSH2 0x11AC DUP10 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST SWAP2 POP PUSH2 0x124E PUSH2 0x3E8 PUSH2 0x11D1 DUP5 PUSH1 0x64 PUSH4 0xFFFFFFFF PUSH2 0x1165 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x127D PUSH2 0x126E DUP3 PUSH2 0x11FD PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1097 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x10B8 AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST NUMBER PUSH1 0x6 SSTORE PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x9 SLOAD PUSH1 0xB SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x12AB JUMPI PUSH1 0xA SLOAD PUSH1 0xB SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP1 PUSH2 0x12CE JUMPI POP DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH2 0x12CB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x12EA JUMPI POP DUP1 PUSH2 0x747 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP 0x47 SWAP4 0x2f PUSH27 0xB7398807C2FC5704AE0D6E7750286377828B0773EF160B2E8F3218 STOP 0x29 ",
              "sourceMap": "3801:14652:0:-;;;;;;;;;-1:-1:-1;;;3801:14652:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16324:8;;;3949:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13894:203:0;;;;;;;;;;-1:-1:-1;;;;;13894:203:0;;;;;;;;;;;;;;;;;;;;;;;;4688:36;;;;;;;;;;;;;;;;;;;;;;;;;;;10870:119;;;;;;;;;;;;5878:1465;;;;;;;;;;;;;;;;12304:116;;;;;;;;;;;;14638:338;;;;;;;;;;-1:-1:-1;;;;;14638:338:0;;;;;;;;;;;;4559:21;;;;;;;;;;;;3975;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10995:92;;;;;;;;;;;;4003:24;;;;;;;;;;;;11201:257;;;;;;;;;;;;10678:103;;;;;;;;;;;;4586:27;;;;;;;;;;;;17074:1375;;;;;;;;;;;;16988:79;;;;;;;;;;;;;;;;4812:24;;;;;;;;;;;;4621:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;4621:27:0;;;;;;;;;;;;;;12645:124;;;;;;;;;;-1:-1:-1;;;;;12645:124:0;;;;;3345:191;;;;;;;;;;;;11779:334;;;;;;;;;;;;;;;;;;;;4087:22;;;;;;;;;;;;4393:37;;;;;;;;;;;;4438:24;;;;;;;;;;;;4469:30;;;;;;;;;;;;2948:20;;;;;;;;;;;;3922;;;;;;;;;;;;11497:237;;;;;;;;;;;;;;;;;;13118:262;;;;;;;;;;-1:-1:-1;;;;;13118:262:0;;;;;;;4143:43;;;;;;;;;;;;4654:28;;;;;;;;;;;;15779:312;;;;;;;;;;;;;-1:-1:-1;;;;;15779:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15779:312:0;;-1:-1:-1;15779:312:0;;-1:-1:-1;;;;;;15779:312:0;4037:41;;;;;;;;;;;;2975:23;;;;;;;;;;;;16576:184;;;;;;;;;;-1:-1:-1;;;;;16576:184:0;;;;;;;4216:36;;;;;;;;;;;;15262:151;;;;;;;;;;-1:-1:-1;;;;;15262:151:0;;;;;;;;;;3237:102;;;;;;;;;;-1:-1:-1;;;;;3237:102:0;;;;;3949:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13894:203::-;-1:-1:-1;;;;;13990:10:0;13982:19;;13957:12;13982:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;:37;;;13957:12;;13982:28;:19;14030:37;;14013:6;;14030:37;;;;;;;;;;;;;-1:-1:-1;14085:4:0;13894:203;;;;;:::o;4688:36::-;;;;:::o;10870:119::-;10926:4;10949:33;10969:12;;10949:15;;:19;;:33;;;;:::i;:::-;10942:40;;10870:119;:::o;5878:1465::-;5949:12;6134:14;6499:16;6722:18;6162:15;;6179:10;6191:5;6152:46;;;;;-1:-1:-1;;;;;6152:46:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6276:26:0;;;6272:40;;6304:8;;;6272:40;6405:12;;6387:30;;6384:43;;;6419:8;;;6384:43;6539:15;;6518:37;;;;:20;:37;;;;;;;6570:46;;;;6518:37;-1:-1:-1;6634:15:0;;6631:28;;6651:8;;;6631:28;6743:17;:15;:17::i;:::-;-1:-1:-1;;;;;6807:10:0;6798:20;;;;;:8;:20;;;;;;6722:38;;-1:-1:-1;6798:39:0;;6722:38;6798:39;:24;:39;:::i;:::-;-1:-1:-1;;;;;6784:10:0;6775:20;;;;;:8;:20;;;;;:62;6867:12;;:31;;6884:13;6867:31;:16;:31;:::i;:::-;6852:12;:46;;;6990:15;;6974:31;;;6967:39;;;;7065:12;:25;;-1:-1:-1;;7065:25:0;7080:10;-1:-1:-1;;;;;7065:25:0;;;;7104:16;:32;;;7177:12;7150:24;:39;7206:22;:20;:22::i;:::-;7250:10;-1:-1:-1;;;;;7245:61:0;;7262:13;7277:10;;7289:15;;7245:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7327:4:0;;5878:1465;-1:-1:-1;;;;;5878:1465:0:o;12304:116::-;12352:4;12392:20;;:8;:20;;;;12376:12;;:36;12304:116;:::o;14638:338::-;-1:-1:-1;;;;;14757:14:0;;14715:12;14757:14;;;:8;:14;;;;;;:26;;14776:6;14757:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;14740:14:0;;;;;;;:8;:14;;;;;;;;:43;;;;14822:7;:13;;;;;14836:10;14822:25;;;;;;;;;;;:37;;14852:6;14822:37;:29;:37;:::i;:::-;-1:-1:-1;;;;;14794:13:0;;;;;;;:7;:13;;;;;;;;14808:10;14794:25;;;;;;;;;:65;;;;14885:12;;;;;:8;:12;;;;;:24;;14902:6;14885:24;:16;:24;:::i;:::-;-1:-1:-1;;;;;14870:12:0;;;;;;;:8;:12;;;;;;;:39;;;;:12;14920:26;;;;;;14939:6;;14920:26;;;;;;;;;;;;;-1:-1:-1;14964:4:0;14638:338;;;;;:::o;4559:21::-;;;;:::o;3975:::-;;;;;;:::o;10995:92::-;11069:12;;10995:92;:::o;4003:24::-;;;;:::o;11201:257::-;11438:9;;11418:8;;11253:4;;11403:46;;11418:8;;11409:2;:18;11404:2;:23;;11435:1;:12;11403:30;:46::i;10678:103::-;10759:15;;10678:103;:::o;4586:27::-;;;;:::o;17074:1375::-;17117:12;17867:18;17888:17;:15;:17::i;:::-;-1:-1:-1;;;;;17948:10:0;17939:20;;;;;:8;:20;;;;;;17867:38;;-1:-1:-1;17939:39:0;;17867:38;17939:39;:24;:39;:::i;:::-;-1:-1:-1;;;;;17925:10:0;17916:20;;;;;:8;:20;;;;;:62;18004:12;;:31;;18021:13;18004:31;:16;:31;:::i;:::-;17989:12;:46;;;18119:15;;18103:31;;;18096:39;;;;18186:12;:25;;-1:-1:-1;;18186:25:0;18201:10;-1:-1:-1;;;;;18186:25:0;;;;18221:16;:32;;;18290:12;18263:24;:39;18318:22;:20;:22::i;:::-;18437:4;18430:11;;17074:1375;;:::o;16988:79::-;17042:12;:18;16988:79::o;4812:24::-;;;;:::o;4621:27::-;;;-1:-1:-1;;;;;4621:27:0;;:::o;12645:124::-;-1:-1:-1;;;;;12741:20:0;12709:12;12741:20;;;:8;:20;;;;;;;12645:124::o;3345:191::-;3412:8;;3398:10;-1:-1:-1;;;;;3398:22:0;;;3412:8;;3398:22;3390:31;;;;;;3460:8;;;3453:5;-1:-1:-1;;;;;3460:8:0;;;;3453:5;3432:37;;;;;;;;;;3488:8;;;;3480:16;;-1:-1:-1;;3480:16:0;;;-1:-1:-1;;;;;3488:8:0;;3480:16;;;;3507:21;;;3345:191::o;11779:334::-;11911:12;11938:14;11965:16;11982:10;11993:5;11955:44;;;;;-1:-1:-1;;;;;11955:44:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12015:28:0;;;12012:41;;;12045:8;;;12012:41;12074:26;;;;;11779:334;-1:-1:-1;;;;11779:334:0:o;4087:22::-;;;;:::o;4393:37::-;;;;:::o;4438:24::-;;;;:::o;4469:30::-;;;;:::o;2948:20::-;;;-1:-1:-1;;;;;2948:20:0;;:::o;3922:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11497:237;11608:18;11639:14;11666:16;11683:10;11694:5;11656:44;;;;;-1:-1:-1;;;;;11656:44:0;;;;;;;;;;;;;;;;;;;;;;;;;11497:237;-1:-1:-1;;;;;11497:237:0:o;13118:262::-;-1:-1:-1;;;;;13234:10:0;13225:20;13177:12;13225:20;;;:8;:20;;;;;;:32;;13250:6;13225:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;13211:10:0;13202:20;;;;;;:8;:20;;;;;;:55;;;;13283:12;;;;;;;:24;;13300:6;13283:24;:16;:24;:::i;:::-;-1:-1:-1;;;;;13268:12:0;;;;;;;:8;:12;;;;;;;:39;;;;:12;13327:10;13318:32;;;;;;13343:6;;13318:32;;;;;;;;;;;;;-1:-1:-1;13368:4:0;13118:262;;;;:::o;4143:43::-;;;;:::o;4654:28::-;;;;:::o;15779:312::-;-1:-1:-1;;;;;15894:10:0;15886:19;;15861:12;15886:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;:37;;;15861:12;;15886:28;:19;15934:37;;15917:6;;15934:37;;;;;;;;;;;;;16005:7;-1:-1:-1;;;;;15982:47:0;;16030:10;16042:6;16050:4;16056;15982:79;;;;;-1:-1:-1;;;15982:79:0;;;;;;;-1:-1:-1;;;;;15982:79:0;-1:-1:-1;;;;;15982:79:0;;;;;;;;;;;-1:-1:-1;;;;;15982:79:0;-1:-1:-1;;;;;15982:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;16079:4:0;;15779:312;-1:-1:-1;;;;;;15779:312:0:o;4037:41::-;;;;:::o;2975:23::-;;;-1:-1:-1;;;;;2975:23:0;;:::o;16576:184::-;16668:12;3204:5;;3190:10;-1:-1:-1;;;;;3190:19:0;;;3204:5;;3190:19;3182:28;;;;;;16738:5;;;-1:-1:-1;;;;;16700:37:0;;;;;;16738:5;;;;16745:6;;16700:52;;;;;;;-1:-1:-1;;;16700:52:0;;;;;;-1:-1:-1;;;;;16700:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16576:184;-1:-1:-1;;;;16576:184:0:o;4216:36::-;;;;:::o;15262:151::-;-1:-1:-1;;;;;15377:19:0;;;15343:14;15377:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;15262:151::o;3237:102::-;3204:5;;3190:10;-1:-1:-1;;;;;3190:19:0;;;3204:5;;3190:19;3182:28;;;;;;3311:8;:20;;-1:-1:-1;;3311:20:0;-1:-1:-1;;;;;3311:20:0;;;;;;;;;;3237:102::o;1028:113::-;1080:6;1107:5;;;1099:14;;;;;;1132:1;1128;:5;;;;;;;;;1028:113;-1:-1:-1;;;1028:113:0:o;654:114::-;729:5;;;753:6;;;;745:15;;;;;7382:1151;7749:15;;7711:35;7728:17;:15;:17::i;:::-;7711:12;;;:35;:16;:35;:::i;:::-;:53;:71;;;;;7780:2;7768:9;;:14;7711:71;7707:127;;;7812:9;;;7824:1;7812:13;7800:25;;7707:127;8032:9;;8010:12;;:37;;8044:1;8032:13;8028:1;:18;8010:37;:16;:37;:::i;:::-;7995:12;;:52;7977:15;:70;8069:10;;:17;;8084:1;8069:17;:14;:17;:::i;:::-;8056:10;:30;;;8185:24;;;8172:37;;;;;;;;:42;8169:93;;;8232:21;:19;:21::i;:::-;-1:-1:-1;;8503:12:0;:16;8487:33;8469:15;:51;7382:1151::o;774:114::-;826:6;853;;;;845:15;;;;;;-1:-1:-1;875:5:0;;;774:114::o;8757:1829::-;8866:29;;9085:24;;8851:12;:44;;;;;9176:2;9162:16;;8809:39;;;;9304:65;;;9300:982;;;9416:81;9461:34;9417:37;:28;9450:3;9417:37;:32;:37;:::i;:::-;9416:43;:81;:43;:81;:::i;:::-;9392:105;-1:-1:-1;9540:45:0;9580:4;9540:25;9392:105;9561:3;9540:25;:20;:25;:::i;:::-;:39;:45;:39;:45;:::i;:::-;9510:75;;9788:68;9805:50;9832:22;9805;9822:4;9805:12;;:16;;:22;;;;:::i;:::-;:26;:50;:26;:50;:::i;:::-;9788:12;;;:68;:16;:68;:::i;:::-;9773:12;:83;9300:982;;;9927:81;9978:28;9928:43;:34;9967:3;9928:43;:38;:43;:::i;9927:81::-;9901:107;-1:-1:-1;10053:47:0;10095:4;10053:27;9901:107;10076:3;10053:27;:22;:27;:::i;:47::-;10021:79;;10183:70;10200:52;10227:24;10200:22;10217:4;10200:12;;:16;;:22;;;;:::i;:52::-;10183:12;;;:70;:16;:70;:::i;:::-;10168:12;:85;9300:982;10326:12;10294:29;:44;10367:15;;10352:12;;:30;10349:113;;;10436:15;;10421:12;:30;10349:113;10490:15;;10475:12;;:30;10472:108;;;10554:15;;10539:12;:30;10472:108;8757:1829;;;;;;;:::o;894:128::-;969:5;;;993:6;;;:20;;;1012:1;1007;1003;:5;;;;;;;;:10;993:20;985:29;;;;;;;1229:126;1291:6;1317:1;1313;:5;1310:18;;;-1:-1:-1;1327:1:0;1320:8;;1310:18;-1:-1:-1;1346:1:0;;1229:126;-1:-1:-1;1229:126:0:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "978600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "965",
                "_BLOCKS_PER_READJUSTMENT()": "1074",
                "_MAXIMUM_TARGET()": "920",
                "_MINIMUM_TARGET()": "1206",
                "_totalSupply()": "656",
                "acceptOwnership()": "43455",
                "allowance(address,address)": "1552",
                "approve(address,uint256)": "22419",
                "approveAndCall(address,uint256,bytes)": "infinite",
                "balanceOf(address)": "1054",
                "challengeNumber()": "964",
                "checkMintSolution(uint256,bytes32,bytes32,uint256)": "983",
                "decimals()": "627",
                "epochCount()": "898",
                "getChallengeNumber()": "700",
                "getMiningDifficulty()": "infinite",
                "getMiningReward()": "4234",
                "getMiningTarget()": "634",
                "getMintDigest(uint256,bytes32,bytes32)": "1084",
                "lastRewardAmount()": "1096",
                "lastRewardEthBlockNumber()": "480",
                "lastRewardTo()": "963",
                "latestDifficultyPeriodStarted()": "1140",
                "maxSupplyForEra()": "722",
                "miningTarget()": "942",
                "mint(uint256,bytes32)": "infinite",
                "mintWithoutPoW()": "infinite",
                "name()": "infinite",
                "newOwner()": "1315",
                "owner()": "1139",
                "rewardEra()": "590",
                "setTokensMinted(uint256)": "20527",
                "symbol()": "infinite",
                "tokensMinted()": "788",
                "totalSupply()": "770",
                "transfer(address,uint256)": "infinite",
                "transferAnyERC20Token(address,uint256)": "infinite",
                "transferFrom(address,address,uint256)": "infinite",
                "transferOwnership(address)": "21706"
              },
              "internal": {
                "_reAdjustDifficulty()": "infinite",
                "_startNewMiningEpoch()": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MSTORE"
                },
                {
                  "begin": 4182,
                  "end": 4186,
                  "name": "PUSH",
                  "value": "400"
                },
                {
                  "begin": 4143,
                  "end": 4186,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 4143,
                  "end": 4186,
                  "name": "SSTORE"
                },
                {
                  "begin": 4247,
                  "end": 4252,
                  "name": "PUSH",
                  "value": "10000"
                },
                {
                  "begin": 4216,
                  "end": 4252,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 4216,
                  "end": 4252,
                  "name": "SSTORE"
                },
                {
                  "begin": 4424,
                  "end": 4430,
                  "name": "PUSH",
                  "value": "40000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 4393,
                  "end": 4430,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 4393,
                  "end": 4430,
                  "name": "SSTORE"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "DUP1"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SLOAD"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "NOT"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "AND"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SWAP1"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SSTORE"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "ISZERO"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "JUMPI"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "DUP1"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "REVERT"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3119,
                  "end": 3124,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SLOAD"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "A0"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "EXP"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "SUB"
                },
                {
                  "begin": 3127,
                  "end": 3137,
                  "name": "CALLER"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP2"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "A0"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "EXP"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "SUB"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "NOT"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP3"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP3"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "OR"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP3"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP4"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SSTORE"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SWAP2"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SWAP1"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SWAP2"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "AND"
                },
                {
                  "begin": 3190,
                  "end": 3209,
                  "name": "EQ"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "PUSH [tag]",
                  "value": "6"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "JUMPI"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "DUP1"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "REVERT"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "tag",
                  "value": "6"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MLOAD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "ADD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MSTORE"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MSTORE"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "3078425443000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP3"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "ADD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MSTORE"
                },
                {
                  "begin": 5286,
                  "end": 5292,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 5286,
                  "end": 5292,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MLOAD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH [tag]",
                  "value": "8"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP3"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "ADD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH [tag]",
                  "value": "9"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "tag",
                  "value": "8"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "POP"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MLOAD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "ADD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MSTORE"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "F"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MSTORE"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "3078426974636F696E20546F6B656E0000000000000000000000000000000000"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP3"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "ADD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MSTORE"
                },
                {
                  "begin": 5313,
                  "end": 5317,
                  "name": "PUSH",
                  "value": "3"
                },
                {
                  "begin": 5313,
                  "end": 5317,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MLOAD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH [tag]",
                  "value": "10"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP3"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "ADD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH [tag]",
                  "value": "9"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "tag",
                  "value": "10"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "JUMPDEST"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 5348,
                  "end": 5356,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "DUP1"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SLOAD"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "NOT"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "AND"
                },
                {
                  "begin": 5359,
                  "end": 5360,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "OR"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SWAP1"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "DUP2"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SWAP1"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SSTORE"
                },
                {
                  "begin": 5386,
                  "end": 5394,
                  "name": "PUSH",
                  "value": "1406F40"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "SWAP2"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "DUP3"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "AND"
                },
                {
                  "begin": 5397,
                  "end": 5399,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 5397,
                  "end": 5415,
                  "name": "EXP"
                },
                {
                  "begin": 5386,
                  "end": 5415,
                  "name": "MUL"
                },
                {
                  "begin": 5371,
                  "end": 5383,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 5371,
                  "end": 5415,
                  "name": "SSTORE"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "SLOAD"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "AND"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "ISZERO"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "PUSH [tag]",
                  "value": "11"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "JUMPI"
                },
                {
                  "begin": 5437,
                  "end": 5445,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5437,
                  "end": 5445,
                  "name": "DUP1"
                },
                {
                  "begin": 5437,
                  "end": 5445,
                  "name": "REVERT"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "tag",
                  "value": "11"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5455,
                  "end": 5461,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "DUP1"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SLOAD"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "NOT"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "AND"
                },
                {
                  "begin": 5464,
                  "end": 5468,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "OR"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SWAP1"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SSTORE"
                },
                {
                  "begin": 5455,
                  "end": 5461,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5479,
                  "end": 5491,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "DUP2"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "SWAP1"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "SSTORE"
                },
                {
                  "begin": 5506,
                  "end": 5515,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 5506,
                  "end": 5519,
                  "name": "SSTORE"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 5547,
                  "end": 5559,
                  "name": "SLOAD"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "PUSH [tag]",
                  "value": "12"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "SWAP1"
                },
                {
                  "begin": 5564,
                  "end": 5565,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "DUP3"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "MUL"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "OR"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "DIV"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "tag",
                  "value": "12"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5529,
                  "end": 5544,
                  "name": "PUSH",
                  "value": "E"
                },
                {
                  "begin": 5529,
                  "end": 5566,
                  "name": "SSTORE"
                },
                {
                  "begin": 5592,
                  "end": 5607,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 5592,
                  "end": 5607,
                  "name": "SLOAD"
                },
                {
                  "begin": 5577,
                  "end": 5589,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 5577,
                  "end": 5607,
                  "name": "SSTORE"
                },
                {
                  "begin": 5650,
                  "end": 5662,
                  "name": "NUMBER"
                },
                {
                  "begin": 5618,
                  "end": 5647,
                  "name": "PUSH",
                  "value": "6"
                },
                {
                  "begin": 5618,
                  "end": 5662,
                  "name": "SSTORE"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "PUSH [tag]",
                  "value": "14"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551797"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "PUSH [tag]",
                  "value": "15"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "DUP3"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "MUL"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "OR"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "DIV"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "tag",
                  "value": "14"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "16"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "tag",
                  "value": "13"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1080,
                  "end": 1086,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1107,
                  "end": 1112,
                  "name": "DUP1"
                },
                {
                  "begin": 1107,
                  "end": 1112,
                  "name": "DUP3"
                },
                {
                  "begin": 1107,
                  "end": 1112,
                  "name": "GT"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "PUSH [tag]",
                  "value": "18"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "JUMPI"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "DUP1"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "REVERT"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "tag",
                  "value": "18"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1132,
                  "end": 1133,
                  "name": "DUP2"
                },
                {
                  "begin": 1128,
                  "end": 1129,
                  "name": "DUP4"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "DUP2"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "ISZERO"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "ISZERO"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "PUSH [tag]",
                  "value": "19"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "JUMPI"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "INVALID"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "tag",
                  "value": "19"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "DIV"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "SWAP4"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "SWAP3"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 7382,
                  "end": 8533,
                  "name": "tag",
                  "value": "15"
                },
                {
                  "begin": 7382,
                  "end": 8533,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7749,
                  "end": 7764,
                  "name": "PUSH",
                  "value": "E"
                },
                {
                  "begin": 7749,
                  "end": 7764,
                  "name": "SLOAD"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "PUSH [tag]",
                  "value": "21"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "PUSH [tag]",
                  "value": "22"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551697"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "PUSH [tag]",
                  "value": "23"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "DUP3"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "MUL"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "OR"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "DIV"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "tag",
                  "value": "22"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7711,
                  "end": 7723,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 7711,
                  "end": 7723,
                  "name": "SLOAD"
                },
                {
                  "begin": 7711,
                  "end": 7723,
                  "name": "SWAP1"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551793"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "PUSH [tag]",
                  "value": "24"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "DUP3"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "MUL"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "OR"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "DIV"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "tag",
                  "value": "21"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7711,
                  "end": 7764,
                  "name": "GT"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "DUP1"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "ISZERO"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "PUSH [tag]",
                  "value": "25"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "JUMPI"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "POP"
                },
                {
                  "begin": 7780,
                  "end": 7782,
                  "name": "PUSH",
                  "value": "27"
                },
                {
                  "begin": 7768,
                  "end": 7777,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 7768,
                  "end": 7777,
                  "name": "SLOAD"
                },
                {
                  "begin": 7768,
                  "end": 7782,
                  "name": "LT"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "tag",
                  "value": "25"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "ISZERO"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "PUSH [tag]",
                  "value": "26"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "JUMPI"
                },
                {
                  "begin": 7812,
                  "end": 7821,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 7812,
                  "end": 7821,
                  "name": "DUP1"
                },
                {
                  "begin": 7812,
                  "end": 7821,
                  "name": "SLOAD"
                },
                {
                  "begin": 7824,
                  "end": 7825,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 7812,
                  "end": 7825,
                  "name": "ADD"
                },
                {
                  "begin": 7800,
                  "end": 7825,
                  "name": "SWAP1"
                },
                {
                  "begin": 7800,
                  "end": 7825,
                  "name": "SSTORE"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "tag",
                  "value": "26"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8032,
                  "end": 8041,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 8032,
                  "end": 8041,
                  "name": "SLOAD"
                },
                {
                  "begin": 8010,
                  "end": 8022,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 8010,
                  "end": 8022,
                  "name": "SLOAD"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "PUSH [tag]",
                  "value": "27"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "SWAP2"
                },
                {
                  "begin": 8044,
                  "end": 8045,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 8032,
                  "end": 8045,
                  "name": "ADD"
                },
                {
                  "begin": 8028,
                  "end": 8029,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 8028,
                  "end": 8046,
                  "name": "EXP"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "DUP3"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "MUL"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "OR"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "DIV"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "tag",
                  "value": "27"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7995,
                  "end": 8007,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 7995,
                  "end": 8007,
                  "name": "SLOAD"
                },
                {
                  "begin": 7995,
                  "end": 8047,
                  "name": "SUB"
                },
                {
                  "begin": 7977,
                  "end": 7992,
                  "name": "PUSH",
                  "value": "E"
                },
                {
                  "begin": 7977,
                  "end": 8047,
                  "name": "SSTORE"
                },
                {
                  "begin": 8069,
                  "end": 8079,
                  "name": "PUSH",
                  "value": "7"
                },
                {
                  "begin": 8069,
                  "end": 8079,
                  "name": "SLOAD"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "PUSH [tag]",
                  "value": "28"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "SWAP1"
                },
                {
                  "begin": 8084,
                  "end": 8085,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551793"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "PUSH [tag]",
                  "value": "24"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "DUP3"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "MUL"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "OR"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "DIV"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "tag",
                  "value": "28"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8056,
                  "end": 8066,
                  "name": "PUSH",
                  "value": "7"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "DUP2"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "SWAP1"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "SSTORE"
                },
                {
                  "begin": 8185,
                  "end": 8209,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 8185,
                  "end": 8209,
                  "name": "SLOAD"
                },
                {
                  "begin": 8185,
                  "end": 8209,
                  "name": "SWAP1"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "DUP2"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "ISZERO"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "ISZERO"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "PUSH [tag]",
                  "value": "29"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "JUMPI"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "INVALID"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "tag",
                  "value": "29"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "MOD"
                },
                {
                  "begin": 8172,
                  "end": 8214,
                  "name": "ISZERO"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "ISZERO"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "PUSH [tag]",
                  "value": "31"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "JUMPI"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "PUSH [tag]",
                  "value": "31"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551858"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "PUSH [tag]",
                  "value": "32"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "DUP3"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "MUL"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "OR"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "DIV"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "tag",
                  "value": "31"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "JUMPDEST"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "NOT"
                },
                {
                  "begin": 8503,
                  "end": 8515,
                  "name": "NUMBER"
                },
                {
                  "begin": 8503,
                  "end": 8519,
                  "name": "ADD"
                },
                {
                  "begin": 8487,
                  "end": 8520,
                  "name": "BLOCKHASH"
                },
                {
                  "begin": 8469,
                  "end": 8484,
                  "name": "PUSH",
                  "value": "C"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "SSTORE"
                },
                {
                  "begin": 7382,
                  "end": 8533,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "tag",
                  "value": "23"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 11438,
                  "end": 11447,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 11438,
                  "end": 11447,
                  "name": "SLOAD"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "SLOAD"
                },
                {
                  "begin": 11253,
                  "end": 11257,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 11253,
                  "end": 11257,
                  "name": "SWAP2"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "PUSH [tag]",
                  "value": "34"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "SWAP2"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "AND"
                },
                {
                  "begin": 11409,
                  "end": 11411,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 11409,
                  "end": 11427,
                  "name": "EXP"
                },
                {
                  "begin": 11404,
                  "end": 11406,
                  "name": "PUSH",
                  "value": "32"
                },
                {
                  "begin": 11404,
                  "end": 11427,
                  "name": "MUL"
                },
                {
                  "begin": 11404,
                  "end": 11427,
                  "name": "SWAP1"
                },
                {
                  "begin": 11435,
                  "end": 11436,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 11435,
                  "end": 11447,
                  "name": "EXP"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "DUP2"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "MUL"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "OR"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "DIV"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "tag",
                  "value": "34"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 11396,
                  "end": 11449,
                  "name": "SWAP1"
                },
                {
                  "begin": 11396,
                  "end": 11449,
                  "name": "POP"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "tag",
                  "value": "33"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "SWAP1"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "tag",
                  "value": "24"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 729,
                  "end": 734,
                  "name": "DUP2"
                },
                {
                  "begin": 729,
                  "end": 734,
                  "name": "DUP2"
                },
                {
                  "begin": 729,
                  "end": 734,
                  "name": "ADD"
                },
                {
                  "begin": 753,
                  "end": 759,
                  "name": "DUP3"
                },
                {
                  "begin": 753,
                  "end": 759,
                  "name": "DUP2"
                },
                {
                  "begin": 753,
                  "end": 759,
                  "name": "LT"
                },
                {
                  "begin": 753,
                  "end": 759,
                  "name": "ISZERO"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "PUSH [tag]",
                  "value": "36"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "JUMPI"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "DUP1"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "REVERT"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "tag",
                  "value": "36"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "SWAP3"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "SWAP2"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "POP"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "POP"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "tag",
                  "value": "32"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8866,
                  "end": 8895,
                  "name": "PUSH",
                  "value": "6"
                },
                {
                  "begin": 8866,
                  "end": 8895,
                  "name": "SLOAD"
                },
                {
                  "begin": 9085,
                  "end": 9109,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 9085,
                  "end": 9109,
                  "name": "SLOAD"
                },
                {
                  "begin": 8851,
                  "end": 8863,
                  "name": "NUMBER"
                },
                {
                  "begin": 8851,
                  "end": 8895,
                  "name": "SWAP2"
                },
                {
                  "begin": 8851,
                  "end": 8895,
                  "name": "SWAP1"
                },
                {
                  "begin": 8851,
                  "end": 8895,
                  "name": "SWAP2"
                },
                {
                  "begin": 8851,
                  "end": 8895,
                  "name": "SUB"
                },
                {
                  "begin": 8851,
                  "end": 8895,
                  "name": "SWAP1"
                },
                {
                  "begin": 9176,
                  "end": 9178,
                  "name": "PUSH",
                  "value": "3C"
                },
                {
                  "begin": 9162,
                  "end": 9178,
                  "name": "DUP2"
                },
                {
                  "begin": 9162,
                  "end": 9178,
                  "name": "MUL"
                },
                {
                  "begin": 8809,
                  "end": 8848,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 8809,
                  "end": 8848,
                  "name": "DUP1"
                },
                {
                  "begin": 8809,
                  "end": 8848,
                  "name": "DUP1"
                },
                {
                  "begin": 8809,
                  "end": 8848,
                  "name": "DUP1"
                },
                {
                  "begin": 9304,
                  "end": 9369,
                  "name": "DUP5"
                },
                {
                  "begin": 9304,
                  "end": 9369,
                  "name": "DUP8"
                },
                {
                  "begin": 9304,
                  "end": 9369,
                  "name": "LT"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "ISZERO"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "PUSH [tag]",
                  "value": "38"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMPI"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "PUSH [tag]",
                  "value": "39"
                },
                {
                  "begin": 9461,
                  "end": 9495,
                  "name": "DUP8"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "PUSH [tag]",
                  "value": "40"
                },
                {
                  "begin": 9417,
                  "end": 9445,
                  "name": "DUP8"
                },
                {
                  "begin": 9450,
                  "end": 9453,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "DUP3"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "MUL"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "OR"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "DIV"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "tag",
                  "value": "40"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "SWAP1"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "DUP3"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "MUL"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "OR"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "DIV"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "tag",
                  "value": "39"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9392,
                  "end": 9497,
                  "name": "SWAP4"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "PUSH [tag]",
                  "value": "42"
                },
                {
                  "begin": 9580,
                  "end": 9584,
                  "name": "PUSH",
                  "value": "3E8"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "PUSH [tag]",
                  "value": "43"
                },
                {
                  "begin": 9392,
                  "end": 9497,
                  "name": "DUP7"
                },
                {
                  "begin": 9561,
                  "end": 9564,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551801"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "PUSH [tag]",
                  "value": "44"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "DUP3"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "MUL"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "OR"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "DIV"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "tag",
                  "value": "43"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551868"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "PUSH [tag]",
                  "value": "45"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "DUP3"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "MUL"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "OR"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "DIV"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "tag",
                  "value": "42"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9510,
                  "end": 9585,
                  "name": "SWAP3"
                },
                {
                  "begin": 9510,
                  "end": 9585,
                  "name": "POP"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "PUSH [tag]",
                  "value": "46"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "PUSH [tag]",
                  "value": "47"
                },
                {
                  "begin": 9832,
                  "end": 9854,
                  "name": "DUP5"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "PUSH [tag]",
                  "value": "48"
                },
                {
                  "begin": 9822,
                  "end": 9826,
                  "name": "PUSH",
                  "value": "7D0"
                },
                {
                  "begin": 9805,
                  "end": 9817,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 9805,
                  "end": 9817,
                  "name": "SLOAD"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "MUL"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "OR"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "SWAP2"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "DIV"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "tag",
                  "value": "48"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "DUP3"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "MUL"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "OR"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "DIV"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "tag",
                  "value": "47"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9788,
                  "end": 9800,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 9788,
                  "end": 9800,
                  "name": "SLOAD"
                },
                {
                  "begin": 9788,
                  "end": 9800,
                  "name": "SWAP1"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551801"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "PUSH [tag]",
                  "value": "44"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "DUP3"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "MUL"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "OR"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "DIV"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "tag",
                  "value": "46"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9773,
                  "end": 9785,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 9773,
                  "end": 9856,
                  "name": "SSTORE"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "PUSH [tag]",
                  "value": "49"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMP"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "tag",
                  "value": "38"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "PUSH [tag]",
                  "value": "50"
                },
                {
                  "begin": 9978,
                  "end": 10006,
                  "name": "DUP6"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "PUSH [tag]",
                  "value": "40"
                },
                {
                  "begin": 9928,
                  "end": 9962,
                  "name": "DUP10"
                },
                {
                  "begin": 9967,
                  "end": 9970,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "DUP3"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "MUL"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "OR"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "DIV"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "tag",
                  "value": "50"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9901,
                  "end": 10008,
                  "name": "SWAP2"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "PUSH [tag]",
                  "value": "52"
                },
                {
                  "begin": 10095,
                  "end": 10099,
                  "name": "PUSH",
                  "value": "3E8"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "PUSH [tag]",
                  "value": "43"
                },
                {
                  "begin": 9901,
                  "end": 10008,
                  "name": "DUP5"
                },
                {
                  "begin": 10076,
                  "end": 10079,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551801"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "PUSH [tag]",
                  "value": "44"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "DUP3"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "MUL"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "OR"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "DIV"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "tag",
                  "value": "52"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10021,
                  "end": 10100,
                  "name": "SWAP1"
                },
                {
                  "begin": 10021,
                  "end": 10100,
                  "name": "POP"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "PUSH [tag]",
                  "value": "54"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "PUSH [tag]",
                  "value": "55"
                },
                {
                  "begin": 10227,
                  "end": 10251,
                  "name": "DUP3"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "PUSH [tag]",
                  "value": "48"
                },
                {
                  "begin": 10217,
                  "end": 10221,
                  "name": "PUSH",
                  "value": "7D0"
                },
                {
                  "begin": 10200,
                  "end": 10212,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10200,
                  "end": 10212,
                  "name": "SLOAD"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "MUL"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "OR"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "SWAP2"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "DIV"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "tag",
                  "value": "55"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10183,
                  "end": 10195,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10183,
                  "end": 10195,
                  "name": "SLOAD"
                },
                {
                  "begin": 10183,
                  "end": 10195,
                  "name": "SWAP1"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551793"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "PUSH [tag]",
                  "value": "24"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "DUP3"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "MUL"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "OR"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "DIV"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "tag",
                  "value": "54"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10168,
                  "end": 10180,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10168,
                  "end": 10253,
                  "name": "SSTORE"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "tag",
                  "value": "49"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10326,
                  "end": 10338,
                  "name": "NUMBER"
                },
                {
                  "begin": 10294,
                  "end": 10323,
                  "name": "PUSH",
                  "value": "6"
                },
                {
                  "begin": 10294,
                  "end": 10338,
                  "name": "SSTORE"
                },
                {
                  "begin": 10367,
                  "end": 10382,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 10367,
                  "end": 10382,
                  "name": "SLOAD"
                },
                {
                  "begin": 10352,
                  "end": 10364,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10352,
                  "end": 10364,
                  "name": "SLOAD"
                },
                {
                  "begin": 10352,
                  "end": 10382,
                  "name": "LT"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "ISZERO"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "PUSH [tag]",
                  "value": "57"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "JUMPI"
                },
                {
                  "begin": 10436,
                  "end": 10451,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 10436,
                  "end": 10451,
                  "name": "SLOAD"
                },
                {
                  "begin": 10421,
                  "end": 10433,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10421,
                  "end": 10451,
                  "name": "SSTORE"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "tag",
                  "value": "57"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10490,
                  "end": 10505,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 10490,
                  "end": 10505,
                  "name": "SLOAD"
                },
                {
                  "begin": 10475,
                  "end": 10487,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10475,
                  "end": 10487,
                  "name": "SLOAD"
                },
                {
                  "begin": 10475,
                  "end": 10505,
                  "name": "GT"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "ISZERO"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "PUSH [tag]",
                  "value": "58"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "JUMPI"
                },
                {
                  "begin": 10554,
                  "end": 10569,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 10554,
                  "end": 10569,
                  "name": "SLOAD"
                },
                {
                  "begin": 10539,
                  "end": 10551,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10539,
                  "end": 10569,
                  "name": "SSTORE"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "tag",
                  "value": "58"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "tag",
                  "value": "41"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 969,
                  "end": 974,
                  "name": "DUP2"
                },
                {
                  "begin": 969,
                  "end": 974,
                  "name": "DUP2"
                },
                {
                  "begin": 969,
                  "end": 974,
                  "name": "MUL"
                },
                {
                  "begin": 993,
                  "end": 999,
                  "name": "DUP3"
                },
                {
                  "begin": 993,
                  "end": 999,
                  "name": "ISZERO"
                },
                {
                  "begin": 993,
                  "end": 999,
                  "name": "DUP1"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "PUSH [tag]",
                  "value": "60"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "JUMPI"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "POP"
                },
                {
                  "begin": 1012,
                  "end": 1013,
                  "name": "DUP2"
                },
                {
                  "begin": 1007,
                  "end": 1008,
                  "name": "DUP4"
                },
                {
                  "begin": 1003,
                  "end": 1004,
                  "name": "DUP3"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "DUP2"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "ISZERO"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "ISZERO"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "PUSH [tag]",
                  "value": "61"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "JUMPI"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "INVALID"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "tag",
                  "value": "61"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "DIV"
                },
                {
                  "begin": 1003,
                  "end": 1013,
                  "name": "EQ"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "tag",
                  "value": "60"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "ISZERO"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "ISZERO"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "PUSH [tag]",
                  "value": "36"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "JUMPI"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "DUP1"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "REVERT"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "tag",
                  "value": "44"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 826,
                  "end": 832,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 853,
                  "end": 859,
                  "name": "DUP3"
                },
                {
                  "begin": 853,
                  "end": 859,
                  "name": "DUP3"
                },
                {
                  "begin": 853,
                  "end": 859,
                  "name": "GT"
                },
                {
                  "begin": 853,
                  "end": 859,
                  "name": "ISZERO"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "PUSH [tag]",
                  "value": "64"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "JUMPI"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "DUP1"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "REVERT"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "tag",
                  "value": "64"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "JUMPDEST"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 875,
                  "end": 880,
                  "name": "SWAP1"
                },
                {
                  "begin": 875,
                  "end": 880,
                  "name": "SUB"
                },
                {
                  "begin": 875,
                  "end": 880,
                  "name": "SWAP1"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "tag",
                  "value": "45"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1291,
                  "end": 1297,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1317,
                  "end": 1318,
                  "name": "DUP2"
                },
                {
                  "begin": 1313,
                  "end": 1314,
                  "name": "DUP4"
                },
                {
                  "begin": 1313,
                  "end": 1318,
                  "name": "GT"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "ISZERO"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "PUSH [tag]",
                  "value": "66"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "JUMPI"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 1327,
                  "end": 1328,
                  "name": "DUP1"
                },
                {
                  "begin": 1320,
                  "end": 1328,
                  "name": "PUSH [tag]",
                  "value": "36"
                },
                {
                  "begin": 1320,
                  "end": 1328,
                  "name": "JUMP"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "tag",
                  "value": "66"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "JUMPDEST"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 1346,
                  "end": 1347,
                  "name": "SWAP1"
                },
                {
                  "begin": 1346,
                  "end": 1347,
                  "name": "SWAP2"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "SWAP1"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "9"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SLOAD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "AND"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MUL"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SUB"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "AND"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DIV"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "KECCAK256"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DIV"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "LT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "68"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MLOAD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "NOT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "AND"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP4"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "OR"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP6"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "70"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "68"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP6"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "70"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "69"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "GT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "70"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MLOAD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "69"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "70"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "71"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": -1,
                  "end": -1,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "72"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "71"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "72"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "33"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "74"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "GT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "71"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "74"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "16"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "CODECOPY"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a723058204247932f7ab7398807c2fc5704ae0d6e7750286377828b0773ef160b2e8f32180029",
                  ".code": [
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "LT"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DIV"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "AND"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "6FDDE03"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "95EA7B3"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "163AA00D"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "17DA485F"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "1801FBE5"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "18160DDD"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "23B872DD"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "2D38BF7A"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "313CE567"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "32E99708"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "3EAAF86B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "490203A7"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "13"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "4EF37628"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "14"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "4FA972E1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "5515A1EA"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "5CE7E030"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "6DE9F32B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "18"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "6FD396D6"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "70A08231"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "20"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "79BA5097"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "81269A56"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "22"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "829965CC"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "23"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "87A2A9D6"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "24"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "8A769D35"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "25"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "8AE0368B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "26"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "27"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "95D89B41"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "28"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "97566AA0"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "29"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "30"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "B5ADE81B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "31"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "BAFEDCAA"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "32"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "CAE9CA51"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "33"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "CB9AE707"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "34"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "D4EE1D90"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "35"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "DC39D06D"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "36"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "DC6E9CF9"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "37"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "38"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "39"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "tag",
                      "value": "1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16324,
                      "end": 16332,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16324,
                      "end": 16332,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16324,
                      "end": 16332,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "42"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "42"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "43"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "44"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "43"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "45"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "46"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "DUP4"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "DUP3"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "45"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "46"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "48"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "48"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH [tag]",
                      "value": "49"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "49"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "AND"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH [tag]",
                      "value": "51"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "50"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ADD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SUB"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH [tag]",
                      "value": "52"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "52"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH [tag]",
                      "value": "54"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "53"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "ADD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SUB"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH [tag]",
                      "value": "55"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "55"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH [tag]",
                      "value": "57"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH [tag]",
                      "value": "58"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "REVERT"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "58"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH [tag]",
                      "value": "60"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH [tag]",
                      "value": "61"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "61"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH [tag]",
                      "value": "63"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH [tag]",
                      "value": "64"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "REVERT"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "64"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "AND"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "AND"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "44"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH [tag]",
                      "value": "66"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH [tag]",
                      "value": "67"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "67"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH [tag]",
                      "value": "69"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH [tag]",
                      "value": "70"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "70"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH [tag]",
                      "value": "71"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH [tag]",
                      "value": "72"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "71"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "AND"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "ADD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SUB"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH [tag]",
                      "value": "73"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "73"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH [tag]",
                      "value": "75"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH [tag]",
                      "value": "76"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "76"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH [tag]",
                      "value": "78"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "13"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH [tag]",
                      "value": "79"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "79"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "14"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH [tag]",
                      "value": "82"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "82"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH [tag]",
                      "value": "84"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH [tag]",
                      "value": "85"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "85"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH [tag]",
                      "value": "87"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "16"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH [tag]",
                      "value": "88"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "REVERT"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "88"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH [tag]",
                      "value": "90"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH [tag]",
                      "value": "91"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "91"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH [tag]",
                      "value": "92"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH [tag]",
                      "value": "93"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "92"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "STOP"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "18"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH [tag]",
                      "value": "94"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "94"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH [tag]",
                      "value": "96"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH [tag]",
                      "value": "97"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "97"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH [tag]",
                      "value": "98"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH [tag]",
                      "value": "99"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "98"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "MLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "AND"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "ADD"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SUB"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "RETURN"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "20"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH [tag]",
                      "value": "100"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "100"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "AND"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH [tag]",
                      "value": "102"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "103"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "103"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "92"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "105"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "22"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH [tag]",
                      "value": "106"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "106"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "44"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH [tag]",
                      "value": "108"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "23"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH [tag]",
                      "value": "109"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "109"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH [tag]",
                      "value": "111"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "24"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH [tag]",
                      "value": "112"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "112"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH [tag]",
                      "value": "114"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "25"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH [tag]",
                      "value": "115"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "115"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH [tag]",
                      "value": "117"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "26"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH [tag]",
                      "value": "118"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "118"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH [tag]",
                      "value": "120"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "27"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "121"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "121"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "98"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "123"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "28"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "124"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "124"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "43"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "126"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "29"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH [tag]",
                      "value": "131"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "131"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "44"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH [tag]",
                      "value": "133"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "30"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH [tag]",
                      "value": "134"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "134"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "AND"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH [tag]",
                      "value": "136"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "31"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH [tag]",
                      "value": "137"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "137"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH [tag]",
                      "value": "139"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "32"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH [tag]",
                      "value": "140"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "140"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH [tag]",
                      "value": "142"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "33"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH [tag]",
                      "value": "143"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "REVERT"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "143"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "AND"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "44"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DIV"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MUL"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATACOPY"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP7"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH [tag]",
                      "value": "145"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP6"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "34"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH [tag]",
                      "value": "146"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "146"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH [tag]",
                      "value": "148"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "35"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "149"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "149"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "98"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "151"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "36"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH [tag]",
                      "value": "152"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "152"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "AND"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH [tag]",
                      "value": "154"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "37"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH [tag]",
                      "value": "155"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "155"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH [tag]",
                      "value": "157"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "38"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH [tag]",
                      "value": "158"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "REVERT"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "158"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "AND"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "AND"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH [tag]",
                      "value": "160"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "39"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "161"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "161"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "92"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "AND"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "163"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "44"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "LT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "165"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "165"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "166"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "GT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "166"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "164"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "51"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 13990,
                      "end": 14000,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "AND"
                    },
                    {
                      "begin": 13957,
                      "end": 13969,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 13989,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP4"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP8"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "AND"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP5"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "DUP6"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13957,
                      "end": 13969,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13957,
                      "end": 13969,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14013,
                      "end": 14019,
                      "name": "DUP6"
                    },
                    {
                      "begin": 14013,
                      "end": 14019,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "ADD"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SUB"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "LOG3"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 14085,
                      "end": 14089,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "167"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "54"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "11"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "57"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10926,
                      "end": 10930,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "PUSH [tag]",
                      "value": "169"
                    },
                    {
                      "begin": 10969,
                      "end": 10981,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10969,
                      "end": 10981,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10949,
                      "end": 10964,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10949,
                      "end": 10964,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10949,
                      "end": 10968,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 10949,
                      "end": 10968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "AND"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "tag",
                      "value": "169"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10942,
                      "end": 10982,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10942,
                      "end": 10982,
                      "name": "POP"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "60"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5949,
                      "end": 5961,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6134,
                      "end": 6148,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6499,
                      "end": 6515,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6722,
                      "end": 6740,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6162,
                      "end": 6177,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 6162,
                      "end": 6177,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6179,
                      "end": 6189,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6191,
                      "end": 6196,
                      "name": "DUP8"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MSTORE"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "AND"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "1000000000000000000000000"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MUL"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "ADD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "34"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "ADD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "54"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "ADD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SUB"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP3"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "DUP5"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "EQ"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "PUSH [tag]",
                      "value": "172"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6304,
                      "end": 6312,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6304,
                      "end": 6312,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6304,
                      "end": 6312,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "tag",
                      "value": "172"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6405,
                      "end": 6417,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 6405,
                      "end": 6417,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6387,
                      "end": 6417,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6387,
                      "end": 6417,
                      "name": "GT"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "PUSH [tag]",
                      "value": "173"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6419,
                      "end": 6427,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6419,
                      "end": 6427,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6419,
                      "end": 6427,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "tag",
                      "value": "173"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6539,
                      "end": 6554,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 6539,
                      "end": 6554,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6518,
                      "end": 6538,
                      "name": "PUSH",
                      "value": "13"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "DUP5"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "PUSH [tag]",
                      "value": "174"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6651,
                      "end": 6659,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6651,
                      "end": 6659,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6651,
                      "end": 6659,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "tag",
                      "value": "174"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "PUSH [tag]",
                      "value": "175"
                    },
                    {
                      "begin": 6743,
                      "end": 6758,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "tag",
                      "value": "175"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 6807,
                      "end": 6817,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "AND"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6798,
                      "end": 6806,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6722,
                      "end": 6760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6722,
                      "end": 6760,
                      "name": "SWAP2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "PUSH [tag]",
                      "value": "176"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6722,
                      "end": 6760,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 6798,
                      "end": 6822,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "AND"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "tag",
                      "value": "176"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 6784,
                      "end": 6794,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "AND"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6775,
                      "end": 6783,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6775,
                      "end": 6837,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6867,
                      "end": 6879,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 6867,
                      "end": 6879,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "PUSH [tag]",
                      "value": "178"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6884,
                      "end": 6897,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 6867,
                      "end": 6883,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "AND"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "tag",
                      "value": "178"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6852,
                      "end": 6864,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6990,
                      "end": 7005,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 6990,
                      "end": 7005,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6974,
                      "end": 7005,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6974,
                      "end": 7005,
                      "name": "GT"
                    },
                    {
                      "begin": 6974,
                      "end": 7005,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "PUSH [tag]",
                      "value": "179"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "INVALID"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "tag",
                      "value": "179"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7065,
                      "end": 7077,
                      "name": "PUSH",
                      "value": "F"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "AND"
                    },
                    {
                      "begin": 7080,
                      "end": 7090,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "AND"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "OR"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7104,
                      "end": 7120,
                      "name": "PUSH",
                      "value": "10"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7177,
                      "end": 7189,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 7150,
                      "end": 7174,
                      "name": "PUSH",
                      "value": "11"
                    },
                    {
                      "begin": 7150,
                      "end": 7189,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "PUSH [tag]",
                      "value": "180"
                    },
                    {
                      "begin": 7206,
                      "end": 7226,
                      "name": "PUSH [tag]",
                      "value": "181"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "tag",
                      "value": "180"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7250,
                      "end": 7260,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "AND"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "CF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
                    },
                    {
                      "begin": 7262,
                      "end": 7275,
                      "name": "DUP3"
                    },
                    {
                      "begin": 7277,
                      "end": 7287,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 7277,
                      "end": 7287,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7289,
                      "end": 7304,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 7289,
                      "end": 7304,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "ADD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "ADD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "ADD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SUB"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "LOG2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 7327,
                      "end": 7331,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 7327,
                      "end": 7331,
                      "name": "SWAP6"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP5"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "63"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12352,
                      "end": 12356,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12392,
                      "end": 12400,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "A31547CE6245CDB9ECEA19CF8C7EB9F5974025BB4075011409251AE855B30AED"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12376,
                      "end": 12388,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 12376,
                      "end": 12388,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12376,
                      "end": 12412,
                      "name": "SUB"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "66"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "AND"
                    },
                    {
                      "begin": 14715,
                      "end": 14727,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14757,
                      "end": 14765,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "PUSH [tag]",
                      "value": "184"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14776,
                      "end": 14782,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14757,
                      "end": 14775,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "AND"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "tag",
                      "value": "184"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "AND"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14740,
                      "end": 14748,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14829,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14836,
                      "end": 14846,
                      "name": "CALLER"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "PUSH [tag]",
                      "value": "186"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14852,
                      "end": 14858,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14822,
                      "end": 14851,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "tag",
                      "value": "186"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "AND"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14801,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14808,
                      "end": 14818,
                      "name": "CALLER"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP6"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "AND"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP5"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "AND"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14885,
                      "end": 14893,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "PUSH [tag]",
                      "value": "187"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14902,
                      "end": 14908,
                      "name": "DUP4"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14885,
                      "end": 14901,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "AND"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "tag",
                      "value": "187"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP6"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "AND"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14870,
                      "end": 14878,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "AND"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14939,
                      "end": 14945,
                      "name": "DUP6"
                    },
                    {
                      "begin": 14939,
                      "end": 14945,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "ADD"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SUB"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "LOG3"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 14964,
                      "end": 14968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "69"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "72"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "AND"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "75"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11069,
                      "end": 11081,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 11069,
                      "end": 11081,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "78"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "81"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11438,
                      "end": 11447,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 11438,
                      "end": 11447,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11253,
                      "end": 11257,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11253,
                      "end": 11257,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "PUSH [tag]",
                      "value": "169"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "AND"
                    },
                    {
                      "begin": 11409,
                      "end": 11411,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11409,
                      "end": 11427,
                      "name": "EXP"
                    },
                    {
                      "begin": 11404,
                      "end": 11406,
                      "name": "PUSH",
                      "value": "32"
                    },
                    {
                      "begin": 11404,
                      "end": 11427,
                      "name": "MUL"
                    },
                    {
                      "begin": 11404,
                      "end": 11427,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11435,
                      "end": 11436,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 11435,
                      "end": 11447,
                      "name": "EXP"
                    },
                    {
                      "begin": 11403,
                      "end": 11433,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "84"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10759,
                      "end": 10774,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 10759,
                      "end": 10774,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "87"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "90"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17117,
                      "end": 17129,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17867,
                      "end": 17885,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "PUSH [tag]",
                      "value": "193"
                    },
                    {
                      "begin": 17888,
                      "end": 17903,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "tag",
                      "value": "193"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 17948,
                      "end": 17958,
                      "name": "CALLER"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "AND"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17939,
                      "end": 17947,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 17867,
                      "end": 17905,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17867,
                      "end": 17905,
                      "name": "SWAP2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "PUSH [tag]",
                      "value": "194"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17867,
                      "end": 17905,
                      "name": "DUP3"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 17939,
                      "end": 17963,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "AND"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "tag",
                      "value": "194"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 17925,
                      "end": 17935,
                      "name": "CALLER"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "AND"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17916,
                      "end": 17924,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 17916,
                      "end": 17978,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18004,
                      "end": 18016,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 18004,
                      "end": 18016,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "PUSH [tag]",
                      "value": "195"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18021,
                      "end": 18034,
                      "name": "DUP3"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 18004,
                      "end": 18020,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "AND"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "tag",
                      "value": "195"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17989,
                      "end": 18001,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18119,
                      "end": 18134,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 18119,
                      "end": 18134,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 18103,
                      "end": 18134,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18103,
                      "end": 18134,
                      "name": "GT"
                    },
                    {
                      "begin": 18103,
                      "end": 18134,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "PUSH [tag]",
                      "value": "196"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "INVALID"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "tag",
                      "value": "196"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 18186,
                      "end": 18198,
                      "name": "PUSH",
                      "value": "F"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "DUP1"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "AND"
                    },
                    {
                      "begin": 18201,
                      "end": 18211,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "AND"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "OR"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18221,
                      "end": 18237,
                      "name": "PUSH",
                      "value": "10"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "DUP2"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18290,
                      "end": 18302,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 18263,
                      "end": 18287,
                      "name": "PUSH",
                      "value": "11"
                    },
                    {
                      "begin": 18263,
                      "end": 18302,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "PUSH [tag]",
                      "value": "197"
                    },
                    {
                      "begin": 18318,
                      "end": 18338,
                      "name": "PUSH [tag]",
                      "value": "181"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "tag",
                      "value": "197"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 18437,
                      "end": 18441,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 18430,
                      "end": 18441,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 18430,
                      "end": 18441,
                      "name": "POP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "POP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "93"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17042,
                      "end": 17054,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 17042,
                      "end": 17060,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "96"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "99"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "F"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "AND"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "102"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "AND"
                    },
                    {
                      "begin": 12709,
                      "end": 12721,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12741,
                      "end": 12749,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "105"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3398,
                      "end": 3408,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "EQ"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH [tag]",
                      "value": "201"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "tag",
                      "value": "201"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "AND"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SUB"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "LOG3"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "DUP5"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "OR"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "108"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11911,
                      "end": 11923,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11938,
                      "end": 11952,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11965,
                      "end": 11981,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11982,
                      "end": 11992,
                      "name": "CALLER"
                    },
                    {
                      "begin": 11993,
                      "end": 11998,
                      "name": "DUP8"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MSTORE"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "AND"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "1000000000000000000000000"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MUL"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "ADD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "34"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "ADD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "54"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "ADD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SUB"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 12015,
                      "end": 12043,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12015,
                      "end": 12043,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12015,
                      "end": 12043,
                      "name": "GT"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "PUSH [tag]",
                      "value": "203"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12045,
                      "end": 12053,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12045,
                      "end": 12053,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12045,
                      "end": 12053,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "tag",
                      "value": "203"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "EQ"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP4"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "111"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "114"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "117"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "120"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "123"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "126"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SUB"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SUB"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "LT"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "165"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "133"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11608,
                      "end": 11626,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11639,
                      "end": 11653,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11666,
                      "end": 11682,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11683,
                      "end": 11693,
                      "name": "CALLER"
                    },
                    {
                      "begin": 11694,
                      "end": 11699,
                      "name": "DUP7"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MSTORE"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "AND"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "1000000000000000000000000"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MUL"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "ADD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "34"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "ADD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "54"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "ADD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SUB"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP6"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP5"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "136"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 13234,
                      "end": 13244,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "AND"
                    },
                    {
                      "begin": 13177,
                      "end": 13189,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13225,
                      "end": 13233,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "PUSH [tag]",
                      "value": "209"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13250,
                      "end": 13256,
                      "name": "DUP4"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 13225,
                      "end": 13249,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "AND"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "tag",
                      "value": "209"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 13211,
                      "end": 13221,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "AND"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13202,
                      "end": 13210,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "DUP6"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "AND"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "PUSH [tag]",
                      "value": "210"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13300,
                      "end": 13306,
                      "name": "DUP4"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 13283,
                      "end": 13299,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "AND"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "tag",
                      "value": "210"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP6"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "AND"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13268,
                      "end": 13276,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13327,
                      "end": 13337,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "AND"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13343,
                      "end": 13349,
                      "name": "DUP6"
                    },
                    {
                      "begin": 13343,
                      "end": 13349,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "ADD"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SUB"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "LOG3"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 13368,
                      "end": 13372,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "139"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "142"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "10"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "145"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15894,
                      "end": 15904,
                      "name": "CALLER"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "AND"
                    },
                    {
                      "begin": 15861,
                      "end": 15873,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15893,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP9"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "AND"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "DUP7"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 15861,
                      "end": 15873,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15861,
                      "end": 15873,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15917,
                      "end": 15923,
                      "name": "DUP7"
                    },
                    {
                      "begin": 15917,
                      "end": 15923,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "ADD"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SUB"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "LOG3"
                    },
                    {
                      "begin": 16005,
                      "end": 16012,
                      "name": "DUP4"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16029,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16029,
                      "name": "PUSH",
                      "value": "8F4FFCB1"
                    },
                    {
                      "begin": 16030,
                      "end": 16040,
                      "name": "CALLER"
                    },
                    {
                      "begin": 16042,
                      "end": 16048,
                      "name": "DUP6"
                    },
                    {
                      "begin": 16050,
                      "end": 16054,
                      "name": "ADDRESS"
                    },
                    {
                      "begin": 16056,
                      "end": 16060,
                      "name": "DUP7"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP6"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MUL"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP6"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "POP"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "212"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "213"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "DUP4"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "DUP3"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "212"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "213"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "215"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "215"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP6"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP8"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "216"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "216"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "GAS"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "CALL"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "217"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "217"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 16079,
                      "end": 16083,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 16079,
                      "end": 16083,
                      "name": "SWAP7"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP6"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "148"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "151"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "154"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16668,
                      "end": 16680,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3190,
                      "end": 3200,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "EQ"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH [tag]",
                      "value": "219"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "tag",
                      "value": "219"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "DUP7"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "PUSH",
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "AND"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16745,
                      "end": 16751,
                      "name": "DUP6"
                    },
                    {
                      "begin": 16745,
                      "end": 16751,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "E0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP6"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MUL"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "24"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP3"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "44"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SUB"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP8"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH [tag]",
                      "value": "221"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "tag",
                      "value": "221"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "GAS"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SUB"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "CALL"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH [tag]",
                      "value": "222"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "tag",
                      "value": "222"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP4"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "157"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "160"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "AND"
                    },
                    {
                      "begin": 15343,
                      "end": 15357,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15384,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "AND"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "163"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3190,
                      "end": 3200,
                      "name": "CALLER"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "EQ"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH [tag]",
                      "value": "225"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "tag",
                      "value": "225"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3311,
                      "end": 3319,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SLOAD"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "A0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "EXP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "SUB"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "OR"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "tag",
                      "value": "170"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1080,
                      "end": 1086,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1107,
                      "end": 1112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1107,
                      "end": 1112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1107,
                      "end": 1112,
                      "name": "GT"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "PUSH [tag]",
                      "value": "228"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "tag",
                      "value": "228"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1132,
                      "end": 1133,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1128,
                      "end": 1129,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "PUSH [tag]",
                      "value": "229"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "INVALID"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "tag",
                      "value": "229"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "DIV"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "SWAP3"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "tag",
                      "value": "177"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 729,
                      "end": 734,
                      "name": "DUP2"
                    },
                    {
                      "begin": 729,
                      "end": 734,
                      "name": "DUP2"
                    },
                    {
                      "begin": 729,
                      "end": 734,
                      "name": "ADD"
                    },
                    {
                      "begin": 753,
                      "end": 759,
                      "name": "DUP3"
                    },
                    {
                      "begin": 753,
                      "end": 759,
                      "name": "DUP2"
                    },
                    {
                      "begin": 753,
                      "end": 759,
                      "name": "LT"
                    },
                    {
                      "begin": 753,
                      "end": 759,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "PUSH [tag]",
                      "value": "167"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "REVERT"
                    },
                    {
                      "begin": 7382,
                      "end": 8533,
                      "name": "tag",
                      "value": "181"
                    },
                    {
                      "begin": 7382,
                      "end": 8533,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7749,
                      "end": 7764,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 7749,
                      "end": 7764,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "PUSH [tag]",
                      "value": "233"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "PUSH [tag]",
                      "value": "234"
                    },
                    {
                      "begin": 7728,
                      "end": 7743,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "tag",
                      "value": "234"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7711,
                      "end": 7723,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7711,
                      "end": 7723,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7711,
                      "end": 7723,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 7711,
                      "end": 7727,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "AND"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "tag",
                      "value": "233"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7711,
                      "end": 7764,
                      "name": "GT"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "PUSH [tag]",
                      "value": "235"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "POP"
                    },
                    {
                      "begin": 7780,
                      "end": 7782,
                      "name": "PUSH",
                      "value": "27"
                    },
                    {
                      "begin": 7768,
                      "end": 7777,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 7768,
                      "end": 7777,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7768,
                      "end": 7782,
                      "name": "LT"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "tag",
                      "value": "235"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "PUSH [tag]",
                      "value": "236"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7812,
                      "end": 7821,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 7812,
                      "end": 7821,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7812,
                      "end": 7821,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7824,
                      "end": 7825,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 7812,
                      "end": 7825,
                      "name": "ADD"
                    },
                    {
                      "begin": 7800,
                      "end": 7825,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7800,
                      "end": 7825,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "tag",
                      "value": "236"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8032,
                      "end": 8041,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 8032,
                      "end": 8041,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8010,
                      "end": 8022,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 8010,
                      "end": 8022,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "PUSH [tag]",
                      "value": "237"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8044,
                      "end": 8045,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 8032,
                      "end": 8045,
                      "name": "ADD"
                    },
                    {
                      "begin": 8028,
                      "end": 8029,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 8028,
                      "end": 8046,
                      "name": "EXP"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 8010,
                      "end": 8026,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "AND"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "tag",
                      "value": "237"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7995,
                      "end": 8007,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 7995,
                      "end": 8007,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7995,
                      "end": 8047,
                      "name": "SUB"
                    },
                    {
                      "begin": 7977,
                      "end": 7992,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 7977,
                      "end": 8047,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8069,
                      "end": 8079,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 8069,
                      "end": 8079,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "PUSH [tag]",
                      "value": "238"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8084,
                      "end": 8085,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 8069,
                      "end": 8083,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "AND"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "tag",
                      "value": "238"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8056,
                      "end": 8066,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8185,
                      "end": 8209,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 8185,
                      "end": 8209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8185,
                      "end": 8209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "PUSH [tag]",
                      "value": "239"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "INVALID"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "tag",
                      "value": "239"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "MOD"
                    },
                    {
                      "begin": 8172,
                      "end": 8214,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "PUSH [tag]",
                      "value": "241"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "PUSH [tag]",
                      "value": "241"
                    },
                    {
                      "begin": 8232,
                      "end": 8251,
                      "name": "PUSH [tag]",
                      "value": "242"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "tag",
                      "value": "241"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "NOT"
                    },
                    {
                      "begin": 8503,
                      "end": 8515,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 8503,
                      "end": 8519,
                      "name": "ADD"
                    },
                    {
                      "begin": 8487,
                      "end": 8520,
                      "name": "BLOCKHASH"
                    },
                    {
                      "begin": 8469,
                      "end": 8484,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7382,
                      "end": 8533,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "tag",
                      "value": "185"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 826,
                      "end": 832,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 853,
                      "end": 859,
                      "name": "DUP3"
                    },
                    {
                      "begin": 853,
                      "end": 859,
                      "name": "DUP3"
                    },
                    {
                      "begin": 853,
                      "end": 859,
                      "name": "GT"
                    },
                    {
                      "begin": 853,
                      "end": 859,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "PUSH [tag]",
                      "value": "244"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "DUP1"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "REVERT"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "tag",
                      "value": "244"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 875,
                      "end": 880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 875,
                      "end": 880,
                      "name": "SUB"
                    },
                    {
                      "begin": 875,
                      "end": 880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "tag",
                      "value": "242"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8866,
                      "end": 8895,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8866,
                      "end": 8895,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9085,
                      "end": 9109,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 9085,
                      "end": 9109,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8851,
                      "end": 8863,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 8851,
                      "end": 8895,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8851,
                      "end": 8895,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8851,
                      "end": 8895,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8851,
                      "end": 8895,
                      "name": "SUB"
                    },
                    {
                      "begin": 8851,
                      "end": 8895,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9176,
                      "end": 9178,
                      "name": "PUSH",
                      "value": "3C"
                    },
                    {
                      "begin": 9162,
                      "end": 9178,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9162,
                      "end": 9178,
                      "name": "MUL"
                    },
                    {
                      "begin": 8809,
                      "end": 8848,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8809,
                      "end": 8848,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8809,
                      "end": 8848,
                      "name": "DUP1"
                    },
                    {
                      "begin": 8809,
                      "end": 8848,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9304,
                      "end": 9369,
                      "name": "DUP5"
                    },
                    {
                      "begin": 9304,
                      "end": 9369,
                      "name": "DUP8"
                    },
                    {
                      "begin": 9304,
                      "end": 9369,
                      "name": "LT"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "PUSH [tag]",
                      "value": "246"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "PUSH [tag]",
                      "value": "247"
                    },
                    {
                      "begin": 9461,
                      "end": 9495,
                      "name": "DUP8"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "PUSH [tag]",
                      "value": "248"
                    },
                    {
                      "begin": 9417,
                      "end": 9445,
                      "name": "DUP8"
                    },
                    {
                      "begin": 9450,
                      "end": 9453,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9417,
                      "end": 9449,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "AND"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "tag",
                      "value": "248"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9416,
                      "end": 9459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9416,
                      "end": 9459,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "AND"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "tag",
                      "value": "247"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9392,
                      "end": 9497,
                      "name": "SWAP4"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "PUSH [tag]",
                      "value": "250"
                    },
                    {
                      "begin": 9580,
                      "end": 9584,
                      "name": "PUSH",
                      "value": "3E8"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "PUSH [tag]",
                      "value": "251"
                    },
                    {
                      "begin": 9392,
                      "end": 9497,
                      "name": "DUP7"
                    },
                    {
                      "begin": 9561,
                      "end": 9564,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9540,
                      "end": 9560,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "AND"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "tag",
                      "value": "251"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9540,
                      "end": 9579,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9540,
                      "end": 9579,
                      "name": "PUSH [tag]",
                      "value": "252"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "AND"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "tag",
                      "value": "250"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9510,
                      "end": 9585,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 9510,
                      "end": 9585,
                      "name": "POP"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "PUSH [tag]",
                      "value": "254"
                    },
                    {
                      "begin": 9832,
                      "end": 9854,
                      "name": "DUP5"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "PUSH [tag]",
                      "value": "255"
                    },
                    {
                      "begin": 9822,
                      "end": 9826,
                      "name": "PUSH",
                      "value": "7D0"
                    },
                    {
                      "begin": 9805,
                      "end": 9817,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 9805,
                      "end": 9817,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9805,
                      "end": 9821,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 9805,
                      "end": 9821,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "AND"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "tag",
                      "value": "255"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9805,
                      "end": 9831,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9805,
                      "end": 9831,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "AND"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "tag",
                      "value": "254"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9788,
                      "end": 9800,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 9788,
                      "end": 9800,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9788,
                      "end": 9800,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9788,
                      "end": 9804,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "AND"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "tag",
                      "value": "253"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9773,
                      "end": 9785,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 9773,
                      "end": 9856,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "PUSH [tag]",
                      "value": "256"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "tag",
                      "value": "246"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "PUSH [tag]",
                      "value": "257"
                    },
                    {
                      "begin": 9978,
                      "end": 10006,
                      "name": "DUP6"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "PUSH [tag]",
                      "value": "248"
                    },
                    {
                      "begin": 9928,
                      "end": 9962,
                      "name": "DUP10"
                    },
                    {
                      "begin": 9967,
                      "end": 9970,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9928,
                      "end": 9966,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "AND"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "tag",
                      "value": "257"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9901,
                      "end": 10008,
                      "name": "SWAP2"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "PUSH [tag]",
                      "value": "259"
                    },
                    {
                      "begin": 10095,
                      "end": 10099,
                      "name": "PUSH",
                      "value": "3E8"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "PUSH [tag]",
                      "value": "251"
                    },
                    {
                      "begin": 9901,
                      "end": 10008,
                      "name": "DUP5"
                    },
                    {
                      "begin": 10076,
                      "end": 10079,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10053,
                      "end": 10075,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "AND"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "tag",
                      "value": "259"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10021,
                      "end": 10100,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10021,
                      "end": 10100,
                      "name": "POP"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "PUSH [tag]",
                      "value": "261"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "PUSH [tag]",
                      "value": "262"
                    },
                    {
                      "begin": 10227,
                      "end": 10251,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "PUSH [tag]",
                      "value": "255"
                    },
                    {
                      "begin": 10217,
                      "end": 10221,
                      "name": "PUSH",
                      "value": "7D0"
                    },
                    {
                      "begin": 10200,
                      "end": 10212,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10200,
                      "end": 10212,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10200,
                      "end": 10216,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 10200,
                      "end": 10216,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "AND"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "tag",
                      "value": "262"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10183,
                      "end": 10195,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10183,
                      "end": 10195,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10183,
                      "end": 10195,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10183,
                      "end": 10199,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "AND"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "tag",
                      "value": "261"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10168,
                      "end": 10180,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10168,
                      "end": 10253,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "tag",
                      "value": "256"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10326,
                      "end": 10338,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 10294,
                      "end": 10323,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 10294,
                      "end": 10338,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10367,
                      "end": 10382,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 10367,
                      "end": 10382,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10352,
                      "end": 10364,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10352,
                      "end": 10364,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10352,
                      "end": 10382,
                      "name": "LT"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "PUSH [tag]",
                      "value": "264"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10436,
                      "end": 10451,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 10436,
                      "end": 10451,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10421,
                      "end": 10433,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10421,
                      "end": 10451,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "tag",
                      "value": "264"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10490,
                      "end": 10505,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10490,
                      "end": 10505,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10475,
                      "end": 10487,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10475,
                      "end": 10487,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10475,
                      "end": 10505,
                      "name": "GT"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "PUSH [tag]",
                      "value": "265"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10554,
                      "end": 10569,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10554,
                      "end": 10569,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10539,
                      "end": 10551,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10539,
                      "end": 10569,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "tag",
                      "value": "265"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "tag",
                      "value": "249"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 969,
                      "end": 974,
                      "name": "DUP2"
                    },
                    {
                      "begin": 969,
                      "end": 974,
                      "name": "DUP2"
                    },
                    {
                      "begin": 969,
                      "end": 974,
                      "name": "MUL"
                    },
                    {
                      "begin": 993,
                      "end": 999,
                      "name": "DUP3"
                    },
                    {
                      "begin": 993,
                      "end": 999,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 993,
                      "end": 999,
                      "name": "DUP1"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "PUSH [tag]",
                      "value": "267"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "POP"
                    },
                    {
                      "begin": 1012,
                      "end": 1013,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1007,
                      "end": 1008,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1003,
                      "end": 1004,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "PUSH [tag]",
                      "value": "268"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "INVALID"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "tag",
                      "value": "268"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "DIV"
                    },
                    {
                      "begin": 1003,
                      "end": 1013,
                      "name": "EQ"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "tag",
                      "value": "267"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "PUSH [tag]",
                      "value": "167"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "DUP1"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "tag",
                      "value": "252"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1291,
                      "end": 1297,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1317,
                      "end": 1318,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1313,
                      "end": 1314,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1313,
                      "end": 1318,
                      "name": "GT"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "PUSH [tag]",
                      "value": "271"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "JUMPI"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 1327,
                      "end": 1328,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1320,
                      "end": 1328,
                      "name": "PUSH [tag]",
                      "value": "167"
                    },
                    {
                      "begin": 1320,
                      "end": 1328,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "tag",
                      "value": "271"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 1346,
                      "end": 1347,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1346,
                      "end": 1347,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "SWAP1"
                    },
                    {
                      "begin": -1,
                      "end": -1,
                      "name": "POP"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "_BLOCKS_PER_READJUSTMENT()": "b5ade81b",
              "_MAXIMUM_TARGET()": "87a2a9d6",
              "_MINIMUM_TARGET()": "dc6e9cf9",
              "_totalSupply()": "3eaaf86b",
              "acceptOwnership()": "79ba5097",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "challengeNumber()": "8ae0368b",
              "checkMintSolution(uint256,bytes32,bytes32,uint256)": "81269a56",
              "decimals()": "313ce567",
              "epochCount()": "829965cc",
              "getChallengeNumber()": "4ef37628",
              "getMiningDifficulty()": "17da485f",
              "getMiningReward()": "490203a7",
              "getMiningTarget()": "32e99708",
              "getMintDigest(uint256,bytes32,bytes32)": "97566aa0",
              "lastRewardAmount()": "bafedcaa",
              "lastRewardEthBlockNumber()": "163aa00d",
              "lastRewardTo()": "6fd396d6",
              "latestDifficultyPeriodStarted()": "cb9ae707",
              "maxSupplyForEra()": "4fa972e1",
              "miningTarget()": "8a769d35",
              "mint(uint256,bytes32)": "1801fbe5",
              "mintWithoutPoW()": "5515a1ea",
              "name()": "06fdde03",
              "newOwner()": "d4ee1d90",
              "owner()": "8da5cb5b",
              "rewardEra()": "2d38bf7a",
              "setTokensMinted(uint256)": "5ce7e030",
              "symbol()": "95d89b41",
              "tokensMinted()": "6de9f32b",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAnyERC20Token(address,uint256)": "dc39d06d",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardEthBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMiningDifficulty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"challenge_digest\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardEra\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMiningTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMiningReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getChallengeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupplyForEra\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintWithoutPoW\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"setTokensMinted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardTo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"challenge_digest\",\"type\":\"bytes32\"},{\"name\":\"challenge_number\",\"type\":\"bytes32\"},{\"name\":\"testTarget\",\"type\":\"uint256\"}],\"name\":\"checkMintSolution\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epochCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_MAXIMUM_TARGET\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"miningTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"challengeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"challenge_digest\",\"type\":\"bytes32\"},{\"name\":\"challenge_number\",\"type\":\"bytes32\"}],\"name\":\"getMintDigest\",\"outputs\":[{\"name\":\"digesttest\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_BLOCKS_PER_READJUSTMENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestDifficultyPeriodStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_MINIMUM_TARGET\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"epochCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newChallengeNumber\",\"type\":\"bytes32\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"_0xBitcoinToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/0xBitcoinExtended.sol:465:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n                                          ^----------------------^\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/0xBitcoinExtended.sol": {
        "ast": {
          "absolutePath": "contracts/0xBitcoinExtended.sol",
          "exportedSymbols": {
            "ApproveAndCallFallBack": [
              194
            ],
            "ERC20Interface": [
              182
            ],
            "ExtendedMath": [
              115
            ],
            "Owned": [
              263
            ],
            "SafeMath": [
              96
            ],
            "_0xBitcoinToken": [
              1113
            ]
          },
          "id": 1114,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.4",
                ".18"
              ],
              "nodeType": "PragmaDirective",
              "src": "67:24:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 96,
              "linearizedBaseContracts": [
                96
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "714:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 10,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "725:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "729:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 12,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "733:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "729:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "725:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15,
                        "nodeType": "ExpressionStatement",
                        "src": "725:9:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 17,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "753:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 18,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "758:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "753:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 16,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "745:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "745:15:0"
                      }
                    ]
                  },
                  "id": 23,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "667:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "675:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "706:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "706:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "705:8:0"
                  },
                  "scope": 96,
                  "src": "654:114:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 44,
                    "nodeType": "Block",
                    "src": "834:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 33,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "853:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 34,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "858:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "853:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 32,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "845:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "845:15:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "871:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 39,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "875:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 40,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "879:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "875:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "871:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "871:9:0"
                      }
                    ]
                  },
                  "id": 45,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "787:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "795:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "795:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "786:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "826:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "825:8:0"
                  },
                  "scope": 96,
                  "src": "774:114:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "954:68:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "965:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "969:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 56,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "973:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "969:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "965:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "965:9:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 63,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 61,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "993:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 62,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "998:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "993:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 68,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 66,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 64,
                                    "name": "c",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52,
                                    "src": "1003:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 65,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "1007:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1003:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 67,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "1012:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1003:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "993:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 60,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "985:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "ExpressionStatement",
                        "src": "985:29:0"
                      }
                    ]
                  },
                  "id": 73,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "907:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "915:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "906:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "946:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "945:8:0"
                  },
                  "scope": 96,
                  "src": "894:128:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "1088:53:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 83,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "1107:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 84,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1111:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1107:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 82,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "1099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1099:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "1099:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "1124:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "1128:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1132:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1128:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1124:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 93,
                        "nodeType": "ExpressionStatement",
                        "src": "1124:9:0"
                      }
                    ]
                  },
                  "id": 95,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 75,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "1041:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1041:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "1049:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1049:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1040:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "1080:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1079:8:0"
                  },
                  "scope": 96,
                  "src": "1028:113:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1114,
              "src": "630:514:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 115,
              "linearizedBaseContracts": [
                115
              ],
              "name": "ExtendedMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "1299:56:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1313:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1317:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1313:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 110,
                        "nodeType": "IfStatement",
                        "src": "1310:18:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1327:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 104,
                          "id": 109,
                          "nodeType": "Return",
                          "src": "1320:8:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1346:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 104,
                        "id": 112,
                        "nodeType": "Return",
                        "src": "1339:8:0"
                      }
                    ]
                  },
                  "id": 114,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "limitLessThan",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 98,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1252:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1252:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 100,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1260:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 103,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1291:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1291:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1290:8:0"
                  },
                  "scope": 115,
                  "src": "1229:126:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1114,
              "src": "1148:209:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 182,
              "linearizedBaseContracts": [
                182
              ],
              "name": "ERC20Interface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "id": 120,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1688:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1716:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1716:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1715:6:0"
                  },
                  "scope": 182,
                  "src": "1668:54:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 127,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "1747:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1746:20:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "1792:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1792:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1791:14:0"
                  },
                  "scope": 182,
                  "src": "1728:78:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 136,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1831:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1831:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1851:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1830:37:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "name": "remaining",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1893:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:16:0"
                  },
                  "scope": 182,
                  "src": "1812:97:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 145,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1933:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1933:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 140,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1945:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1932:25:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 143,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1974:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1974:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1973:14:0"
                  },
                  "scope": 182,
                  "src": "1915:73:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 154,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2011:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2028:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2010:30:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2057:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2056:14:0"
                  },
                  "scope": 182,
                  "src": "1994:77:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 165,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2099:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2099:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2113:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2125:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2125:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2098:39:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2154:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:14:0"
                  },
                  "scope": 182,
                  "src": "2077:91:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 173,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2190:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2190:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": true,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2212:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2212:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": false,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2232:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2232:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2189:55:0"
                  },
                  "src": "2175:70:0"
                },
                {
                  "anonymous": false,
                  "id": 181,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": true,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2266:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2266:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "indexed": true,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2294:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2294:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "indexed": false,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2319:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2265:66:0"
                  },
                  "src": "2251:81:0"
                }
              ],
              "scope": 1114,
              "src": "1637:698:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 194,
              "linearizedBaseContracts": [
                194
              ],
              "name": "ApproveAndCallFallBack",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "id": 193,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "receiveApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2674:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2674:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2688:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2688:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2704:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 190,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2719:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2719:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2673:57:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2737:0:0"
                  },
                  "scope": 194,
                  "src": "2649:89:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1114,
              "src": "2610:131:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 263,
              "linearizedBaseContracts": [
                263
              ],
              "name": "Owned",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 196,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2948:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 198,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2975:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 204,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "indexed": true,
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "3033:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": true,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "3056:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3032:44:0"
                  },
                  "src": "3006:71:0"
                },
                {
                  "body": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "3108:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "3119:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "3127:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3127:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3119:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 211,
                        "nodeType": "ExpressionStatement",
                        "src": "3119:18:0"
                      }
                    ]
                  },
                  "id": 213,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "Owned",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3098:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3108:0:0"
                  },
                  "scope": 263,
                  "src": "3084:61:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "3171:59:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 216,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "3190:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3190:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 218,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "3204:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3190:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "3182:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3182:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "ExpressionStatement",
                        "src": "3182:28:0"
                      },
                      {
                        "id": 222,
                        "nodeType": "PlaceholderStatement",
                        "src": "3221:1:0"
                      }
                    ]
                  },
                  "id": 224,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3171:0:0"
                  },
                  "src": "3152:78:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 235,
                    "nodeType": "Block",
                    "src": "3300:39:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3311:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "3322:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3311:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 234,
                        "nodeType": "ExpressionStatement",
                        "src": "3311:20:0"
                      }
                    ]
                  },
                  "id": 236,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 229,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3290:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3290:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "name": "_newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "3264:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3264:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3263:19:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3300:0:0"
                  },
                  "scope": 263,
                  "src": "3237:102:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "3379:157:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 240,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "3398:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3398:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 242,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "3412:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3398:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 239,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "3390:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3390:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "3390:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 247,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "3453:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3460:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 246,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "3432:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3432:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "3432:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 251,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "3480:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3488:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3480:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "3480:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3507:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3526:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3518:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3518:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3507:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "3507:21:0"
                      }
                    ]
                  },
                  "id": 262,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3369:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3379:0:0"
                  },
                  "scope": 263,
                  "src": "3345:191:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1114,
              "src": "2926:613:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 264,
                    "name": "ERC20Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 182,
                    "src": "3829:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Interface_$182",
                      "typeString": "contract ERC20Interface"
                    }
                  },
                  "id": 265,
                  "nodeType": "InheritanceSpecifier",
                  "src": "3829:14:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 266,
                    "name": "Owned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 263,
                    "src": "3845:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Owned_$263",
                      "typeString": "contract Owned"
                    }
                  },
                  "id": 267,
                  "nodeType": "InheritanceSpecifier",
                  "src": "3845:5:0"
                }
              ],
              "contractDependencies": [
                182,
                263
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1113,
              "linearizedBaseContracts": [
                1113,
                263,
                182
              ],
              "name": "_0xBitcoinToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 270,
                  "libraryName": {
                    "contractScope": null,
                    "id": 268,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 96,
                    "src": "3864:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$96",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "3858:24:0",
                  "typeName": {
                    "id": 269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 273,
                  "libraryName": {
                    "contractScope": null,
                    "id": 271,
                    "name": "ExtendedMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 115,
                    "src": "3893:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExtendedMath_$115",
                      "typeString": "library ExtendedMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "3887:28:0",
                  "typeName": {
                    "id": 272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 275,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "3922:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3922:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 277,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "3949:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3949:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "3975:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4003:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 283,
                  "name": "latestDifficultyPeriodStarted",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4037:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4037:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 285,
                  "name": "epochCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4087:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4087:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "_BLOCKS_PER_READJUSTMENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4143:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "31303234",
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4182:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1024_by_1",
                      "typeString": "int_const 1024"
                    },
                    "value": "1024"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 293,
                  "name": "_MINIMUM_TARGET",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4216:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_65536_by_1",
                      "typeString": "int_const 65536"
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4247:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3136",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4250:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "4247:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_65536_by_1",
                      "typeString": "int_const 65536"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 298,
                  "name": "_MAXIMUM_TARGET",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4393:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                      "typeString": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4424:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "323334",
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4427:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_234_by_1",
                        "typeString": "int_const 234"
                      },
                      "value": "234"
                    },
                    "src": "4424:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                      "typeString": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "miningTarget",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4438:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "challengeNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4469:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4469:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "rewardEra",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4559:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "maxSupplyForEra",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4586:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 308,
                  "name": "lastRewardTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4621:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 310,
                  "name": "lastRewardAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4654:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4654:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 312,
                  "name": "lastRewardEthBlockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4688:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4688:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 315,
                  "name": "locked",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4731:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4745:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "name": "solutionForChallenge",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4757:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                    "typeString": "mapping(bytes32 => bytes32)"
                  },
                  "typeName": {
                    "id": 318,
                    "keyType": {
                      "id": 316,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4757:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                      "typeString": "mapping(bytes32 => bytes32)"
                    },
                    "valueType": {
                      "id": 317,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4776:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "name": "tokensMinted",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4812:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4812:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 325,
                  "name": "balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4843:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 324,
                    "keyType": {
                      "id": 322,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4843:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 323,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4862:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4884:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 330,
                    "keyType": {
                      "id": 326,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4892:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4884:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 329,
                      "keyType": {
                        "id": 327,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4911:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "4903:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 328,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4922:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 341,
                  "name": "Mint",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "4955:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4955:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "indexed": false,
                        "name": "reward_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "4977:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4977:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "indexed": false,
                        "name": "epochCount",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "4997:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4997:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "indexed": false,
                        "name": "newChallengeNumber",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "5014:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5014:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4954:87:0"
                  },
                  "src": "4944:98:0"
                },
                {
                  "body": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "5273:592:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 346,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5286:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3078425443",
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5295:7:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9e4a716719467fc42b820b94f1356b33f39ce535dd752e1d5b99cb0c97083efa",
                              "typeString": "literal_string \"0xBTC\""
                            },
                            "value": "0xBTC"
                          },
                          "src": "5286:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "5286:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 350,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "5313:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3078426974636f696e20546f6b656e",
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5320:17:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fea30677be370ab091c7335eca717ec2a8f008807e0930b3e75ca21e92b0c743",
                              "typeString": "literal_string \"0xBitcoin Token\""
                            },
                            "value": "0xBitcoin Token"
                          },
                          "src": "5313:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "5313:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 354,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5348:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "38",
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5359:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "5348:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "5348:12:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 358,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "5371:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3231303030303030",
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5386:8:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_21000000_by_1",
                                "typeString": "int_const 21000000"
                              },
                              "value": "21000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5397:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 362,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 279,
                                    "src": "5406:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5401:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": "uint"
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5401:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5397:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5386:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5371:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "5371:44:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 368,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "5429:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 372,
                        "nodeType": "IfStatement",
                        "src": "5426:19:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 369,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "5437:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5437:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 371,
                          "nodeType": "ExpressionStatement",
                          "src": "5437:8:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 373,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "5455:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5464:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5455:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 376,
                        "nodeType": "ExpressionStatement",
                        "src": "5455:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "5479:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5494:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5479:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "5479:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5506:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5518:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5506:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "5506:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "5529:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5564:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 386,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "5547:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 95,
                              "src": "5547:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5547:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5529:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 391,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "5577:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "5592:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5577:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 395,
                        "nodeType": "ExpressionStatement",
                        "src": "5577:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "latestDifficultyPeriodStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "5618:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 397,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "5650:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5650:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5618:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 400,
                        "nodeType": "ExpressionStatement",
                        "src": "5618:44:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 401,
                            "name": "_startNewMiningEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "5673:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5673:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "5673:22:0"
                      }
                    ]
                  },
                  "id": 405,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 344,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "5264:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5264:9:0"
                    }
                  ],
                  "name": "_0xBitcoinToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5254:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5273:0:0"
                  },
                  "scope": 1113,
                  "src": "5230:635:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 516,
                    "nodeType": "Block",
                    "src": "5963:1380:0",
                    "statements": [
                      {
                        "assignments": [
                          415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 415,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "6134:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6134:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 422,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 417,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "6162:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 418,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "6179:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6179:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "6191:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 416,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "6152:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6152:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6134:64:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 423,
                            "name": "digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "6276:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 424,
                            "name": "challenge_digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "6286:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6276:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "6272:40:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 426,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "6304:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6304:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 428,
                          "nodeType": "ExpressionStatement",
                          "src": "6304:8:0"
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 431,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "6395:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6387:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6387:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "6405:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6387:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 438,
                        "nodeType": "IfStatement",
                        "src": "6384:43:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 435,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "6419:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6419:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 437,
                          "nodeType": "ExpressionStatement",
                          "src": "6419:8:0"
                        }
                      },
                      {
                        "assignments": [
                          440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 440,
                            "name": "solution",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "6499:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 439,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6499:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 444,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "solutionForChallenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "6518:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 442,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "6539:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6518:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6499:56:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 445,
                              "name": "solutionForChallenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "6570:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                                "typeString": "mapping(bytes32 => bytes32)"
                              }
                            },
                            "id": 447,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "6591:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6570:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 448,
                            "name": "digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "6610:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6570:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "6570:46:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 451,
                            "name": "solution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "6634:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6646:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          "src": "6634:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 457,
                        "nodeType": "IfStatement",
                        "src": "6631:28:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 454,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "6651:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6651:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 456,
                          "nodeType": "ExpressionStatement",
                          "src": "6651:8:0"
                        }
                      },
                      {
                        "assignments": [
                          459
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 459,
                            "name": "reward_amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "6722:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 458,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6722:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 462,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 460,
                            "name": "getMiningReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "6743:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6743:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6722:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 463,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "6775:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 466,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 464,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "6784:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6784:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6775:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 472,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "6823:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "6798:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 470,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 468,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1125,
                                    "src": "6807:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6807:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6798:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "6798:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6798:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6775:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "6775:62:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 476,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "6852:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 479,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "6884:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 477,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "6867:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "6867:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6867:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6852:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "6852:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 484,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "6974:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 485,
                                "name": "maxSupplyForEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "6990:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6974:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 483,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "6967:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6967:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 488,
                        "nodeType": "ExpressionStatement",
                        "src": "6967:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 489,
                            "name": "lastRewardTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "7065:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 490,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "7080:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7080:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7065:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "7065:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 494,
                            "name": "lastRewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "7104:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 495,
                            "name": "reward_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "7123:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7104:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "7104:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "lastRewardEthBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "7150:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 499,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "7177:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7177:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7150:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "7150:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 503,
                            "name": "_startNewMiningEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "7206:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7206:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 505,
                        "nodeType": "ExpressionStatement",
                        "src": "7206:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 507,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "7250:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7250:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 509,
                              "name": "reward_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "7262:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 510,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "7277:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 511,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7289:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 506,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "7245:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes32)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7245:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "7245:61:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7327:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 413,
                        "id": 515,
                        "nodeType": "Return",
                        "src": "7320:11:0"
                      }
                    ]
                  },
                  "id": 517,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 407,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 517,
                        "src": "5892:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 409,
                        "name": "challenge_digest",
                        "nodeType": "VariableDeclaration",
                        "scope": 517,
                        "src": "5907:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5907:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:41:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 517,
                        "src": "5949:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5949:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5948:14:0"
                  },
                  "scope": 1113,
                  "src": "5878:1465:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 580,
                    "nodeType": "Block",
                    "src": "7423:1110:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 522,
                                    "name": "getMiningReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 746,
                                    "src": "7728:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7728:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 520,
                                  "name": "tokensMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 321,
                                  "src": "7711:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "7711:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7711:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 525,
                              "name": "maxSupplyForEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "7749:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7711:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 527,
                              "name": "rewardEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "7768:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3339",
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7780:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_39_by_1",
                                "typeString": "int_const 39"
                              },
                              "value": "39"
                            },
                            "src": "7768:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7711:71:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 538,
                        "nodeType": "IfStatement",
                        "src": "7707:127:0",
                        "trueBody": {
                          "id": 537,
                          "nodeType": "Block",
                          "src": "7790:44:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 531,
                                  "name": "rewardEra",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 304,
                                  "src": "7800:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 532,
                                    "name": "rewardEra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 304,
                                    "src": "7812:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7824:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7812:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7800:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 536,
                              "nodeType": "ExpressionStatement",
                              "src": "7800:25:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "7977:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 540,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "7995:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "32",
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8028:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 544,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 304,
                                          "src": "8032:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8044:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "8032:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 547,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8031:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8028:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 541,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "8010:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 95,
                                "src": "8010:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8010:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7995:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7977:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 552,
                        "nodeType": "ExpressionStatement",
                        "src": "7977:70:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 553,
                            "name": "epochCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "8056:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8084:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 554,
                                "name": "epochCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 285,
                                "src": "8069:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "8069:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8069:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8056:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 559,
                        "nodeType": "ExpressionStatement",
                        "src": "8056:30:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "8172:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 561,
                              "name": "_BLOCKS_PER_READJUSTMENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "8185:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8172:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8213:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8172:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 569,
                        "nodeType": "IfStatement",
                        "src": "8169:93:0",
                        "trueBody": {
                          "id": 568,
                          "nodeType": "Block",
                          "src": "8222:40:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 565,
                                  "name": "_reAdjustDifficulty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "8232:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8232:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 567,
                              "nodeType": "ExpressionStatement",
                              "src": "8232:21:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 570,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "8469:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 573,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "8503:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8503:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8518:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8503:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1117,
                                "src": "8487:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "blockhash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8487:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256) view returns (bytes32)"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8487:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "8469:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "8469:51:0"
                      }
                    ]
                  },
                  "id": 581,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "_startNewMiningEpoch",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7411:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7423:0:0"
                  },
                  "scope": 1113,
                  "src": "7382:1151:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "8797:1789:0",
                    "statements": [
                      {
                        "assignments": [
                          585
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 585,
                            "name": "ethBlocksSinceLastDifficultyPeriod",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "8809:39:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 584,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8809:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 590,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 586,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "8851:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8851:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 588,
                            "name": "latestDifficultyPeriodStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "8866:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8851:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8809:86:0"
                      },
                      {
                        "assignments": [
                          592
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 592,
                            "name": "epochsMined",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "9066:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 591,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9066:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 594,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 593,
                          "name": "_BLOCKS_PER_READJUSTMENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "9085:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9066:43:0"
                      },
                      {
                        "assignments": [
                          596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 596,
                            "name": "targetEthBlocksPerDiffPeriod",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "9126:33:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 595,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9126:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 600,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "epochsMined",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "9162:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3630",
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9176:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "9162:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9126:52:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 601,
                            "name": "ethBlocksSinceLastDifficultyPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "9304:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 602,
                            "name": "targetEthBlocksPerDiffPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "9341:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9304:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 673,
                          "nodeType": "Block",
                          "src": "9889:393:0",
                          "statements": [
                            {
                              "assignments": [
                                640
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 640,
                                  "name": "shortage_block_pct",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "9901:23:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 639,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9901:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 649,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 647,
                                    "name": "targetEthBlocksPerDiffPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 596,
                                    "src": "9978:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 643,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9967:3:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 641,
                                            "name": "ethBlocksSinceLastDifficultyPeriod",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 585,
                                            "src": "9928:34:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 642,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 73,
                                          "src": "9928:38:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9928:43:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 645,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9927:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 95,
                                  "src": "9927:49:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9927:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9901:107:0"
                            },
                            {
                              "assignments": [
                                651
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 651,
                                  "name": "shortage_block_pct_extra",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "10021:29:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 650,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10021:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 659,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10095:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 654,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10076:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 652,
                                        "name": "shortage_block_pct",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 640,
                                        "src": "10053:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "10053:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10053:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "limitLessThan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 114,
                                  "src": "10053:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10053:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10021:79:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 660,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "10168:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 668,
                                          "name": "shortage_block_pct_extra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 651,
                                          "src": "10227:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "32303030",
                                              "id": 665,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10217:4:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              },
                                              "value": "2000"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 663,
                                              "name": "miningTarget",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "10200:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 664,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 95,
                                            "src": "10200:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 666,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10200:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 667,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "10200:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10200:52:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 661,
                                      "name": "miningTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 300,
                                      "src": "10183:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 662,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "10183:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10183:70:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10168:85:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 672,
                              "nodeType": "ExpressionStatement",
                              "src": "10168:85:0"
                            }
                          ]
                        },
                        "id": 674,
                        "nodeType": "IfStatement",
                        "src": "9300:982:0",
                        "trueBody": {
                          "id": 638,
                          "nodeType": "Block",
                          "src": "9380:505:0",
                          "statements": [
                            {
                              "assignments": [
                                605
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 605,
                                  "name": "excess_block_pct",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "9392:21:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 604,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9392:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 614,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 612,
                                    "name": "ethBlocksSinceLastDifficultyPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 585,
                                    "src": "9461:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 608,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9450:3:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 606,
                                            "name": "targetEthBlocksPerDiffPeriod",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 596,
                                            "src": "9417:28:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 607,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 73,
                                          "src": "9417:32:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 609,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9417:37:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 610,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9416:39:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 95,
                                  "src": "9416:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9416:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9392:105:0"
                            },
                            {
                              "assignments": [
                                616
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 616,
                                  "name": "excess_block_pct_extra",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "9510:27:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 615,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9510:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 624,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 622,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9580:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 619,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9561:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 617,
                                        "name": "excess_block_pct",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "9540:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 618,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "9540:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9540:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "limitLessThan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 114,
                                  "src": "9540:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9540:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9510:75:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 625,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "9773:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 633,
                                          "name": "excess_block_pct_extra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 616,
                                          "src": "9832:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "32303030",
                                              "id": 630,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9822:4:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              },
                                              "value": "2000"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 628,
                                              "name": "miningTarget",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "9805:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 629,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 95,
                                            "src": "9805:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 631,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9805:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 632,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "9805:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 634,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9805:50:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 626,
                                      "name": "miningTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 300,
                                      "src": "9788:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 45,
                                    "src": "9788:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9788:68:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9773:83:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 637,
                              "nodeType": "ExpressionStatement",
                              "src": "9773:83:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 675,
                            "name": "latestDifficultyPeriodStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "10294:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "10326:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10326:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10294:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "10294:44:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 680,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "10352:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 681,
                            "name": "_MINIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "10367:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10352:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 688,
                        "nodeType": "IfStatement",
                        "src": "10349:113:0",
                        "trueBody": {
                          "id": 687,
                          "nodeType": "Block",
                          "src": "10409:53:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 683,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "10421:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 684,
                                  "name": "_MINIMUM_TARGET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "10436:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10421:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 686,
                              "nodeType": "ExpressionStatement",
                              "src": "10421:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 689,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "10475:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "10490:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10475:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 697,
                        "nodeType": "IfStatement",
                        "src": "10472:108:0",
                        "trueBody": {
                          "id": 696,
                          "nodeType": "Block",
                          "src": "10527:53:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 692,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "10539:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 693,
                                  "name": "_MAXIMUM_TARGET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "10554:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10539:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 695,
                              "nodeType": "ExpressionStatement",
                              "src": "10539:30:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 699,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "_reAdjustDifficulty",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8785:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8797:0:0"
                  },
                  "scope": 1113,
                  "src": "8757:1829:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "10742:39:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "10759:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 703,
                        "id": 705,
                        "nodeType": "Return",
                        "src": "10752:22:0"
                      }
                    ]
                  },
                  "id": 707,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getChallengeNumber",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10705:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 707,
                        "src": "10733:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10733:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10732:9:0"
                  },
                  "scope": 1113,
                  "src": "10678:103:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "10932:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 714,
                              "name": "miningTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "10969:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 712,
                              "name": "_MAXIMUM_TARGET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "10949:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 95,
                            "src": "10949:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10949:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 711,
                        "id": 716,
                        "nodeType": "Return",
                        "src": "10942:40:0"
                      }
                    ]
                  },
                  "id": 718,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMiningDifficulty",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10898:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 710,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "10926:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10926:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10925:6:0"
                  },
                  "scope": 1113,
                  "src": "10870:119:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "11053:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 723,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "11069:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 722,
                        "id": 724,
                        "nodeType": "Return",
                        "src": "11062:19:0"
                      }
                    ]
                  },
                  "id": 726,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMiningTarget",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11019:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 726,
                        "src": "11047:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11047:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11046:6:0"
                  },
                  "scope": 1113,
                  "src": "10995:92:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 745,
                    "nodeType": "Block",
                    "src": "11259:199:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11435:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 741,
                                "name": "rewardEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "11438:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11435:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3530",
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11404:2:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50_by_1",
                                      "typeString": "int_const 50"
                                    },
                                    "value": "50"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11409:2:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 734,
                                          "name": "decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 279,
                                          "src": "11418:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11413:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": "uint"
                                      },
                                      "id": 735,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11413:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11409:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11404:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 738,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11403:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 95,
                            "src": "11403:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11403:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 730,
                        "id": 744,
                        "nodeType": "Return",
                        "src": "11396:53:0"
                      }
                    ]
                  },
                  "id": 746,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMiningReward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11225:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 729,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "11253:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11253:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11252:6:0"
                  },
                  "scope": 1113,
                  "src": "11201:257:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 768,
                    "nodeType": "Block",
                    "src": "11628:106:0",
                    "statements": [
                      {
                        "assignments": [
                          758
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 758,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 769,
                            "src": "11639:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 757,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 765,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 760,
                              "name": "challenge_number",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "11666:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 761,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "11683:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11683:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 763,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "11694:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 759,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "11656:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11656:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11639:61:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 766,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 758,
                          "src": "11718:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 756,
                        "id": 767,
                        "nodeType": "Return",
                        "src": "11711:13:0"
                      }
                    ]
                  },
                  "id": 769,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMintDigest",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 748,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11520:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "name": "challenge_digest",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11535:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11535:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 752,
                        "name": "challenge_number",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11561:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11561:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11519:67:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 755,
                        "name": "digesttest",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11608:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11608:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11607:20:0"
                  },
                  "scope": 1113,
                  "src": "11497:237:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 805,
                    "nodeType": "Block",
                    "src": "11925:188:0",
                    "statements": [
                      {
                        "assignments": [
                          783
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 783,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 806,
                            "src": "11938:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 782,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11938:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 790,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 785,
                              "name": "challenge_number",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "11965:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 786,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "11982:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11982:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 788,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 771,
                              "src": "11993:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 784,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "11955:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11955:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11938:61:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 792,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "12023:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12015:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12015:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 794,
                            "name": "testTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "12033:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12015:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 799,
                        "nodeType": "IfStatement",
                        "src": "12012:41:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 796,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "12045:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12045:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 798,
                          "nodeType": "ExpressionStatement",
                          "src": "12045:8:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 800,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "12074:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 801,
                                "name": "challenge_digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "12084:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "12074:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 803,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12073:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 781,
                        "id": 804,
                        "nodeType": "Return",
                        "src": "12066:35:0"
                      }
                    ]
                  },
                  "id": 806,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "checkMintSolution",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 778,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 771,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11806:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11806:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "name": "challenge_digest",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11821:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11821:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 775,
                        "name": "challenge_number",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11847:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11847:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 777,
                        "name": "testTarget",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11873:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 776,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11873:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11805:84:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 780,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11911:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11911:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11910:14:0"
                  },
                  "scope": 1113,
                  "src": "11779:334:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "12358:62:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "12376:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 812,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "12392:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 816,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12409:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12401:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12401:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12392:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12376:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 810,
                        "id": 818,
                        "nodeType": "Return",
                        "src": "12369:43:0"
                      }
                    ]
                  },
                  "id": 820,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12324:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "12352:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12352:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12351:6:0"
                  },
                  "scope": 1113,
                  "src": "12304:116:0",
                  "stateMutability": "view",
                  "superFunction": 120,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "12723:46:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 827,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "12741:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 829,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 828,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "12750:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12741:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 826,
                        "id": 830,
                        "nodeType": "Return",
                        "src": "12734:27:0"
                      }
                    ]
                  },
                  "id": 832,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "12664:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12664:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12663:20:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 825,
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "12709:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12709:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12708:14:0"
                  },
                  "scope": 1113,
                  "src": "12645:124:0",
                  "stateMutability": "view",
                  "superFunction": 127,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "13191:189:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 841,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "13202:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 844,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 842,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "13211:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13211:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13202:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 850,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13250:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 845,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "13225:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 848,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 846,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1125,
                                    "src": "13234:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "13234:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13225:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "13225:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13225:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13202:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 853,
                        "nodeType": "ExpressionStatement",
                        "src": "13202:55:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 854,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "13268:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 856,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 855,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "13277:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13268:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 861,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13300:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 857,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "13283:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 859,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 858,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "13292:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13283:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "13283:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13283:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13268:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 864,
                        "nodeType": "ExpressionStatement",
                        "src": "13268:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 866,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "13327:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13327:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "13339:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 869,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "13343:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 865,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "13318:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13318:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 871,
                        "nodeType": "ExpressionStatement",
                        "src": "13318:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13368:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 840,
                        "id": 873,
                        "nodeType": "Return",
                        "src": "13361:11:0"
                      }
                    ]
                  },
                  "id": 875,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 834,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "13136:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13136:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 836,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "13148:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13148:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13135:25:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "13177:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13177:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13176:14:0"
                  },
                  "scope": 1113,
                  "src": "13118:262:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 145,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "13971:126:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 884,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "13982:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 888,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 885,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "13990:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13990:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13982:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 889,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 887,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "14002:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13982:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 890,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "14013:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13982:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "13982:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 894,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "14039:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14039:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 896,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "14051:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 897,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "14060:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "14030:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14030:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "14030:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14085:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 883,
                        "id": 901,
                        "nodeType": "Return",
                        "src": "14078:11:0"
                      }
                    ]
                  },
                  "id": 903,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 877,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "13911:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 876,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13911:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 879,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "13928:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 878,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13928:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13910:30:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 882,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "13957:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 881,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13957:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13956:14:0"
                  },
                  "scope": 1113,
                  "src": "13894:203:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 154,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 961,
                    "nodeType": "Block",
                    "src": "14729:247:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 914,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "14740:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 916,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 915,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "14749:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14740:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 921,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "14776:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 917,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "14757:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 919,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 918,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 905,
                                  "src": "14766:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14757:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "14757:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14757:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14740:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 924,
                        "nodeType": "ExpressionStatement",
                        "src": "14740:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 925,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "14794:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 929,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 926,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 905,
                                "src": "14802:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14794:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 930,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 927,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "14808:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14808:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14794:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 938,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "14852:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 931,
                                    "name": "allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 331,
                                    "src": "14822:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 933,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 932,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 905,
                                    "src": "14830:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14822:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 936,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 934,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1125,
                                    "src": "14836:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "14836:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14822:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "14822:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14822:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14794:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 941,
                        "nodeType": "ExpressionStatement",
                        "src": "14794:65:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 942,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "14870:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 944,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 943,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "14879:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14870:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 949,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "14902:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 945,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "14885:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 947,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 946,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "14894:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14885:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "14885:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14885:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14870:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 952,
                        "nodeType": "ExpressionStatement",
                        "src": "14870:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "14929:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 955,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "14935:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 956,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "14939:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 953,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "14920:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14920:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "14920:26:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14964:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 913,
                        "id": 960,
                        "nodeType": "Return",
                        "src": "14957:11:0"
                      }
                    ]
                  },
                  "id": 962,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 905,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14660:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 904,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14660:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 907,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14674:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14674:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 909,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14686:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14686:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14659:39:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 912,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14715:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14715:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14714:14:0"
                  },
                  "scope": 1113,
                  "src": "14638:338:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 165,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "15359:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 971,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 331,
                              "src": "15377:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 973,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 972,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 964,
                              "src": "15385:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15377:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 975,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 974,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "15397:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15377:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 970,
                        "id": 976,
                        "nodeType": "Return",
                        "src": "15370:35:0"
                      }
                    ]
                  },
                  "id": 978,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "15281:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15281:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 966,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "15301:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15280:37:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "name": "remaining",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "15343:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15343:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15342:16:0"
                  },
                  "scope": 1113,
                  "src": "15262:151:0",
                  "stateMutability": "view",
                  "superFunction": 136,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "15875:216:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 989,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "15886:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 993,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 990,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "15894:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15894:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15886:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 994,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 992,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "15906:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15886:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 995,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 982,
                            "src": "15917:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15886:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "15886:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 999,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "15943:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15943:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1001,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "15955:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1002,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "15964:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 998,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "15934:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15934:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "15934:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1009,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "16030:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "16030:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1011,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "16042:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1012,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "16050:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$__0xBitcoinToken_$1113",
                                "typeString": "contract _0xBitcoinToken"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1013,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "16056:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$__0xBitcoinToken_$1113",
                                "typeString": "contract _0xBitcoinToken"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1006,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 980,
                                  "src": "16005:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1005,
                                "name": "ApproveAndCallFallBack",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "15982:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ApproveAndCallFallBack_$194_$",
                                  "typeString": "type(contract ApproveAndCallFallBack)"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15982:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$194",
                                "typeString": "contract ApproveAndCallFallBack"
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiveApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 193,
                            "src": "15982:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15982:79:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1015,
                        "nodeType": "ExpressionStatement",
                        "src": "15982:79:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16079:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 988,
                        "id": 1017,
                        "nodeType": "Return",
                        "src": "16072:11:0"
                      }
                    ]
                  },
                  "id": 1019,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15803:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15803:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 982,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15820:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15820:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 984,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15833:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "15833:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15802:42:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 987,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15861:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15861:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15860:14:0"
                  },
                  "scope": 1113,
                  "src": "15779:312:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "16313:27:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1022,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1129,
                            "src": "16324:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16324:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1024,
                        "nodeType": "ExpressionStatement",
                        "src": "16324:8:0"
                      }
                    ]
                  },
                  "id": 1026,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16295:2:0"
                  },
                  "payable": true,
                  "returnParameters": {
                    "id": 1021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16313:0:0"
                  },
                  "scope": 1113,
                  "src": "16286:54:0",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "16682:78:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1041,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "16738:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1042,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "16745:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1038,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1028,
                                  "src": "16715:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1037,
                                "name": "ERC20Interface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "16700:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20Interface_$182_$",
                                  "typeString": "type(contract ERC20Interface)"
                                }
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16700:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Interface_$182",
                                "typeString": "contract ERC20Interface"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "16700:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16700:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1036,
                        "id": 1044,
                        "nodeType": "Return",
                        "src": "16693:59:0"
                      }
                    ]
                  },
                  "id": 1046,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1033,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "16649:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16649:9:0"
                    }
                  ],
                  "name": "transferAnyERC20Token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "name": "tokenAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "16607:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16607:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1030,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "16629:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16629:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16606:35:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1035,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "16668:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16668:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16667:14:0"
                  },
                  "scope": 1113,
                  "src": "16576:184:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "17032:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1051,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "17042:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1052,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1048,
                            "src": "17057:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17042:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "17042:18:0"
                      }
                    ]
                  },
                  "id": 1056,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "setTokensMinted",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "name": "amt",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "17013:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17013:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17012:10:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17032:0:0"
                  },
                  "scope": 1113,
                  "src": "16988:79:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1111,
                    "nodeType": "Block",
                    "src": "17131:1318:0",
                    "statements": [
                      {
                        "assignments": [
                          1062
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1062,
                            "name": "reward_amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 1112,
                            "src": "17867:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1061,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17867:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1065,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1063,
                            "name": "getMiningReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "17888:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17888:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17867:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1066,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "17916:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1069,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1067,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "17925:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "17925:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17916:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1075,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "17964:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1070,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "17939:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1073,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1071,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1125,
                                    "src": "17948:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "17948:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17939:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "17939:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17939:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17916:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1078,
                        "nodeType": "ExpressionStatement",
                        "src": "17916:62:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1079,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "17989:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1082,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "18021:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1080,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "18004:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "18004:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18004:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17989:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "17989:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1087,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "18103:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1088,
                                "name": "maxSupplyForEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "18119:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18103:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1086,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "18096:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18096:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1091,
                        "nodeType": "ExpressionStatement",
                        "src": "18096:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1092,
                            "name": "lastRewardTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "18186:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1093,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "18201:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18201:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18186:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "18186:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1097,
                            "name": "lastRewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "18221:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1098,
                            "name": "reward_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "18240:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18221:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1100,
                        "nodeType": "ExpressionStatement",
                        "src": "18221:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1101,
                            "name": "lastRewardEthBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "18263:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1102,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "18290:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18290:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18263:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "18263:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1106,
                            "name": "_startNewMiningEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "18318:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18318:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1108,
                        "nodeType": "ExpressionStatement",
                        "src": "18318:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18437:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1060,
                        "id": 1110,
                        "nodeType": "Return",
                        "src": "18430:11:0"
                      }
                    ]
                  },
                  "id": 1112,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "mintWithoutPoW",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17097:3:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "17117:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17117:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17116:14:0"
                  },
                  "scope": 1113,
                  "src": "17074:1375:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1114,
              "src": "3801:14652:0"
            }
          ],
          "src": "67:18386:0"
        },
        "id": 0,
        "legacyAST": {
          "attributes": {
            "absolutePath": "contracts/0xBitcoinExtended.sol",
            "exportedSymbols": {
              "ApproveAndCallFallBack": [
                194
              ],
              "ERC20Interface": [
                182
              ],
              "ExtendedMath": [
                115
              ],
              "Owned": [
                263
              ],
              "SafeMath": [
                96
              ],
              "_0xBitcoinToken": [
                1113
              ]
            }
          },
          "children": [
            {
              "attributes": {
                "literals": [
                  "solidity",
                  "^",
                  "0.4",
                  ".18"
                ]
              },
              "id": 1,
              "name": "PragmaDirective",
              "src": "67:24:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "library",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  96
                ],
                "name": "SafeMath",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "add",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 23,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 2,
                              "name": "ElementaryTypeName",
                              "src": "667:4:0"
                            }
                          ],
                          "id": 3,
                          "name": "VariableDeclaration",
                          "src": "667:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 23,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 4,
                              "name": "ElementaryTypeName",
                              "src": "675:4:0"
                            }
                          ],
                          "id": 5,
                          "name": "VariableDeclaration",
                          "src": "675:6:0"
                        }
                      ],
                      "id": 6,
                      "name": "ParameterList",
                      "src": "666:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 23,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 7,
                              "name": "ElementaryTypeName",
                              "src": "706:4:0"
                            }
                          ],
                          "id": 8,
                          "name": "VariableDeclaration",
                          "src": "706:6:0"
                        }
                      ],
                      "id": 9,
                      "name": "ParameterList",
                      "src": "705:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 8,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 10,
                                  "name": "Identifier",
                                  "src": "725:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "+",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 3,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 11,
                                      "name": "Identifier",
                                      "src": "729:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 5,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 12,
                                      "name": "Identifier",
                                      "src": "733:1:0"
                                    }
                                  ],
                                  "id": 13,
                                  "name": "BinaryOperation",
                                  "src": "729:5:0"
                                }
                              ],
                              "id": 14,
                              "name": "Assignment",
                              "src": "725:9:0"
                            }
                          ],
                          "id": 15,
                          "name": "ExpressionStatement",
                          "src": "725:9:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1128,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 16,
                                  "name": "Identifier",
                                  "src": "745:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 8,
                                        "type": "uint256",
                                        "value": "c"
                                      },
                                      "id": 17,
                                      "name": "Identifier",
                                      "src": "753:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 3,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 18,
                                      "name": "Identifier",
                                      "src": "758:1:0"
                                    }
                                  ],
                                  "id": 19,
                                  "name": "BinaryOperation",
                                  "src": "753:6:0"
                                }
                              ],
                              "id": 20,
                              "name": "FunctionCall",
                              "src": "745:15:0"
                            }
                          ],
                          "id": 21,
                          "name": "ExpressionStatement",
                          "src": "745:15:0"
                        }
                      ],
                      "id": 22,
                      "name": "Block",
                      "src": "714:54:0"
                    }
                  ],
                  "id": 23,
                  "name": "FunctionDefinition",
                  "src": "654:114:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "sub",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 45,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 24,
                              "name": "ElementaryTypeName",
                              "src": "787:4:0"
                            }
                          ],
                          "id": 25,
                          "name": "VariableDeclaration",
                          "src": "787:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 45,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 26,
                              "name": "ElementaryTypeName",
                              "src": "795:4:0"
                            }
                          ],
                          "id": 27,
                          "name": "VariableDeclaration",
                          "src": "795:6:0"
                        }
                      ],
                      "id": 28,
                      "name": "ParameterList",
                      "src": "786:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 45,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 29,
                              "name": "ElementaryTypeName",
                              "src": "826:4:0"
                            }
                          ],
                          "id": 30,
                          "name": "VariableDeclaration",
                          "src": "826:6:0"
                        }
                      ],
                      "id": 31,
                      "name": "ParameterList",
                      "src": "825:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1128,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 32,
                                  "name": "Identifier",
                                  "src": "845:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 27,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 33,
                                      "name": "Identifier",
                                      "src": "853:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 25,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 34,
                                      "name": "Identifier",
                                      "src": "858:1:0"
                                    }
                                  ],
                                  "id": 35,
                                  "name": "BinaryOperation",
                                  "src": "853:6:0"
                                }
                              ],
                              "id": 36,
                              "name": "FunctionCall",
                              "src": "845:15:0"
                            }
                          ],
                          "id": 37,
                          "name": "ExpressionStatement",
                          "src": "845:15:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 30,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 38,
                                  "name": "Identifier",
                                  "src": "871:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "-",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 25,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 39,
                                      "name": "Identifier",
                                      "src": "875:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 27,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 40,
                                      "name": "Identifier",
                                      "src": "879:1:0"
                                    }
                                  ],
                                  "id": 41,
                                  "name": "BinaryOperation",
                                  "src": "875:5:0"
                                }
                              ],
                              "id": 42,
                              "name": "Assignment",
                              "src": "871:9:0"
                            }
                          ],
                          "id": 43,
                          "name": "ExpressionStatement",
                          "src": "871:9:0"
                        }
                      ],
                      "id": 44,
                      "name": "Block",
                      "src": "834:54:0"
                    }
                  ],
                  "id": 45,
                  "name": "FunctionDefinition",
                  "src": "774:114:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mul",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 73,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 46,
                              "name": "ElementaryTypeName",
                              "src": "907:4:0"
                            }
                          ],
                          "id": 47,
                          "name": "VariableDeclaration",
                          "src": "907:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 73,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 48,
                              "name": "ElementaryTypeName",
                              "src": "915:4:0"
                            }
                          ],
                          "id": 49,
                          "name": "VariableDeclaration",
                          "src": "915:6:0"
                        }
                      ],
                      "id": 50,
                      "name": "ParameterList",
                      "src": "906:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 73,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 51,
                              "name": "ElementaryTypeName",
                              "src": "946:4:0"
                            }
                          ],
                          "id": 52,
                          "name": "VariableDeclaration",
                          "src": "946:6:0"
                        }
                      ],
                      "id": 53,
                      "name": "ParameterList",
                      "src": "945:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 52,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 54,
                                  "name": "Identifier",
                                  "src": "965:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "*",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 47,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 55,
                                      "name": "Identifier",
                                      "src": "969:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 49,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 56,
                                      "name": "Identifier",
                                      "src": "973:1:0"
                                    }
                                  ],
                                  "id": 57,
                                  "name": "BinaryOperation",
                                  "src": "969:5:0"
                                }
                              ],
                              "id": 58,
                              "name": "Assignment",
                              "src": "965:9:0"
                            }
                          ],
                          "id": 59,
                          "name": "ExpressionStatement",
                          "src": "965:9:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1128,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 60,
                                  "name": "Identifier",
                                  "src": "985:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "||",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "==",
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 47,
                                            "type": "uint256",
                                            "value": "a"
                                          },
                                          "id": 61,
                                          "name": "Identifier",
                                          "src": "993:1:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "30",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 0",
                                            "value": "0"
                                          },
                                          "id": 62,
                                          "name": "Literal",
                                          "src": "998:1:0"
                                        }
                                      ],
                                      "id": 63,
                                      "name": "BinaryOperation",
                                      "src": "993:6:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "==",
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "/",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 52,
                                                "type": "uint256",
                                                "value": "c"
                                              },
                                              "id": 64,
                                              "name": "Identifier",
                                              "src": "1003:1:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 47,
                                                "type": "uint256",
                                                "value": "a"
                                              },
                                              "id": 65,
                                              "name": "Identifier",
                                              "src": "1007:1:0"
                                            }
                                          ],
                                          "id": 66,
                                          "name": "BinaryOperation",
                                          "src": "1003:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 49,
                                            "type": "uint256",
                                            "value": "b"
                                          },
                                          "id": 67,
                                          "name": "Identifier",
                                          "src": "1012:1:0"
                                        }
                                      ],
                                      "id": 68,
                                      "name": "BinaryOperation",
                                      "src": "1003:10:0"
                                    }
                                  ],
                                  "id": 69,
                                  "name": "BinaryOperation",
                                  "src": "993:20:0"
                                }
                              ],
                              "id": 70,
                              "name": "FunctionCall",
                              "src": "985:29:0"
                            }
                          ],
                          "id": 71,
                          "name": "ExpressionStatement",
                          "src": "985:29:0"
                        }
                      ],
                      "id": 72,
                      "name": "Block",
                      "src": "954:68:0"
                    }
                  ],
                  "id": 73,
                  "name": "FunctionDefinition",
                  "src": "894:128:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "div",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 95,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 74,
                              "name": "ElementaryTypeName",
                              "src": "1041:4:0"
                            }
                          ],
                          "id": 75,
                          "name": "VariableDeclaration",
                          "src": "1041:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 95,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 76,
                              "name": "ElementaryTypeName",
                              "src": "1049:4:0"
                            }
                          ],
                          "id": 77,
                          "name": "VariableDeclaration",
                          "src": "1049:6:0"
                        }
                      ],
                      "id": 78,
                      "name": "ParameterList",
                      "src": "1040:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 95,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 79,
                              "name": "ElementaryTypeName",
                              "src": "1080:4:0"
                            }
                          ],
                          "id": 80,
                          "name": "VariableDeclaration",
                          "src": "1080:6:0"
                        }
                      ],
                      "id": 81,
                      "name": "ParameterList",
                      "src": "1079:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1128,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 82,
                                  "name": "Identifier",
                                  "src": "1099:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 77,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 83,
                                      "name": "Identifier",
                                      "src": "1107:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "30",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 0",
                                        "value": "0"
                                      },
                                      "id": 84,
                                      "name": "Literal",
                                      "src": "1111:1:0"
                                    }
                                  ],
                                  "id": 85,
                                  "name": "BinaryOperation",
                                  "src": "1107:5:0"
                                }
                              ],
                              "id": 86,
                              "name": "FunctionCall",
                              "src": "1099:14:0"
                            }
                          ],
                          "id": 87,
                          "name": "ExpressionStatement",
                          "src": "1099:14:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 80,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 88,
                                  "name": "Identifier",
                                  "src": "1124:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "/",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 75,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 89,
                                      "name": "Identifier",
                                      "src": "1128:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 77,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 90,
                                      "name": "Identifier",
                                      "src": "1132:1:0"
                                    }
                                  ],
                                  "id": 91,
                                  "name": "BinaryOperation",
                                  "src": "1128:5:0"
                                }
                              ],
                              "id": 92,
                              "name": "Assignment",
                              "src": "1124:9:0"
                            }
                          ],
                          "id": 93,
                          "name": "ExpressionStatement",
                          "src": "1124:9:0"
                        }
                      ],
                      "id": 94,
                      "name": "Block",
                      "src": "1088:53:0"
                    }
                  ],
                  "id": 95,
                  "name": "FunctionDefinition",
                  "src": "1028:113:0"
                }
              ],
              "id": 96,
              "name": "ContractDefinition",
              "src": "630:514:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "library",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  115
                ],
                "name": "ExtendedMath",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "limitLessThan",
                    "payable": false,
                    "scope": 115,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 114,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 97,
                              "name": "ElementaryTypeName",
                              "src": "1252:4:0"
                            }
                          ],
                          "id": 98,
                          "name": "VariableDeclaration",
                          "src": "1252:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 114,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 99,
                              "name": "ElementaryTypeName",
                              "src": "1260:4:0"
                            }
                          ],
                          "id": 100,
                          "name": "VariableDeclaration",
                          "src": "1260:6:0"
                        }
                      ],
                      "id": 101,
                      "name": "ParameterList",
                      "src": "1251:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 114,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 102,
                              "name": "ElementaryTypeName",
                              "src": "1291:4:0"
                            }
                          ],
                          "id": 103,
                          "name": "VariableDeclaration",
                          "src": "1291:6:0"
                        }
                      ],
                      "id": 104,
                      "name": "ParameterList",
                      "src": "1290:8:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 98,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 105,
                                  "name": "Identifier",
                                  "src": "1313:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 100,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 106,
                                  "name": "Identifier",
                                  "src": "1317:1:0"
                                }
                              ],
                              "id": 107,
                              "name": "BinaryOperation",
                              "src": "1313:5:0"
                            },
                            {
                              "attributes": {
                                "functionReturnParameters": 104
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 100,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 108,
                                  "name": "Identifier",
                                  "src": "1327:1:0"
                                }
                              ],
                              "id": 109,
                              "name": "Return",
                              "src": "1320:8:0"
                            }
                          ],
                          "id": 110,
                          "name": "IfStatement",
                          "src": "1310:18:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 104
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 98,
                                "type": "uint256",
                                "value": "a"
                              },
                              "id": 111,
                              "name": "Identifier",
                              "src": "1346:1:0"
                            }
                          ],
                          "id": 112,
                          "name": "Return",
                          "src": "1339:8:0"
                        }
                      ],
                      "id": 113,
                      "name": "Block",
                      "src": "1299:56:0"
                    }
                  ],
                  "id": 114,
                  "name": "FunctionDefinition",
                  "src": "1229:126:0"
                }
              ],
              "id": 115,
              "name": "ContractDefinition",
              "src": "1148:209:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  182
                ],
                "name": "ERC20Interface",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 116,
                      "name": "ParameterList",
                      "src": "1688:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 120,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 117,
                              "name": "ElementaryTypeName",
                              "src": "1716:4:0"
                            }
                          ],
                          "id": 118,
                          "name": "VariableDeclaration",
                          "src": "1716:4:0"
                        }
                      ],
                      "id": 119,
                      "name": "ParameterList",
                      "src": "1715:6:0"
                    }
                  ],
                  "id": 120,
                  "name": "FunctionDefinition",
                  "src": "1668:54:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 127,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 121,
                              "name": "ElementaryTypeName",
                              "src": "1747:7:0"
                            }
                          ],
                          "id": 122,
                          "name": "VariableDeclaration",
                          "src": "1747:18:0"
                        }
                      ],
                      "id": 123,
                      "name": "ParameterList",
                      "src": "1746:20:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "balance",
                            "scope": 127,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 124,
                              "name": "ElementaryTypeName",
                              "src": "1792:4:0"
                            }
                          ],
                          "id": 125,
                          "name": "VariableDeclaration",
                          "src": "1792:12:0"
                        }
                      ],
                      "id": 126,
                      "name": "ParameterList",
                      "src": "1791:14:0"
                    }
                  ],
                  "id": 127,
                  "name": "FunctionDefinition",
                  "src": "1728:78:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 136,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 128,
                              "name": "ElementaryTypeName",
                              "src": "1831:7:0"
                            }
                          ],
                          "id": 129,
                          "name": "VariableDeclaration",
                          "src": "1831:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 136,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 130,
                              "name": "ElementaryTypeName",
                              "src": "1851:7:0"
                            }
                          ],
                          "id": 131,
                          "name": "VariableDeclaration",
                          "src": "1851:15:0"
                        }
                      ],
                      "id": 132,
                      "name": "ParameterList",
                      "src": "1830:37:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "remaining",
                            "scope": 136,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 133,
                              "name": "ElementaryTypeName",
                              "src": "1893:4:0"
                            }
                          ],
                          "id": 134,
                          "name": "VariableDeclaration",
                          "src": "1893:14:0"
                        }
                      ],
                      "id": 135,
                      "name": "ParameterList",
                      "src": "1892:16:0"
                    }
                  ],
                  "id": 136,
                  "name": "FunctionDefinition",
                  "src": "1812:97:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transfer",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 145,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 137,
                              "name": "ElementaryTypeName",
                              "src": "1933:7:0"
                            }
                          ],
                          "id": 138,
                          "name": "VariableDeclaration",
                          "src": "1933:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 145,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 139,
                              "name": "ElementaryTypeName",
                              "src": "1945:4:0"
                            }
                          ],
                          "id": 140,
                          "name": "VariableDeclaration",
                          "src": "1945:11:0"
                        }
                      ],
                      "id": 141,
                      "name": "ParameterList",
                      "src": "1932:25:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 145,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 142,
                              "name": "ElementaryTypeName",
                              "src": "1974:4:0"
                            }
                          ],
                          "id": 143,
                          "name": "VariableDeclaration",
                          "src": "1974:12:0"
                        }
                      ],
                      "id": 144,
                      "name": "ParameterList",
                      "src": "1973:14:0"
                    }
                  ],
                  "id": 145,
                  "name": "FunctionDefinition",
                  "src": "1915:73:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approve",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 154,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 146,
                              "name": "ElementaryTypeName",
                              "src": "2011:7:0"
                            }
                          ],
                          "id": 147,
                          "name": "VariableDeclaration",
                          "src": "2011:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 154,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 148,
                              "name": "ElementaryTypeName",
                              "src": "2028:4:0"
                            }
                          ],
                          "id": 149,
                          "name": "VariableDeclaration",
                          "src": "2028:11:0"
                        }
                      ],
                      "id": 150,
                      "name": "ParameterList",
                      "src": "2010:30:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 154,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 151,
                              "name": "ElementaryTypeName",
                              "src": "2057:4:0"
                            }
                          ],
                          "id": 152,
                          "name": "VariableDeclaration",
                          "src": "2057:12:0"
                        }
                      ],
                      "id": 153,
                      "name": "ParameterList",
                      "src": "2056:14:0"
                    }
                  ],
                  "id": 154,
                  "name": "FunctionDefinition",
                  "src": "1994:77:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 155,
                              "name": "ElementaryTypeName",
                              "src": "2099:7:0"
                            }
                          ],
                          "id": 156,
                          "name": "VariableDeclaration",
                          "src": "2099:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 157,
                              "name": "ElementaryTypeName",
                              "src": "2113:7:0"
                            }
                          ],
                          "id": 158,
                          "name": "VariableDeclaration",
                          "src": "2113:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 159,
                              "name": "ElementaryTypeName",
                              "src": "2125:4:0"
                            }
                          ],
                          "id": 160,
                          "name": "VariableDeclaration",
                          "src": "2125:11:0"
                        }
                      ],
                      "id": 161,
                      "name": "ParameterList",
                      "src": "2098:39:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 162,
                              "name": "ElementaryTypeName",
                              "src": "2154:4:0"
                            }
                          ],
                          "id": 163,
                          "name": "VariableDeclaration",
                          "src": "2154:12:0"
                        }
                      ],
                      "id": 164,
                      "name": "ParameterList",
                      "src": "2153:14:0"
                    }
                  ],
                  "id": 165,
                  "name": "FunctionDefinition",
                  "src": "2077:91:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Transfer"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "from",
                            "scope": 173,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 166,
                              "name": "ElementaryTypeName",
                              "src": "2190:7:0"
                            }
                          ],
                          "id": 167,
                          "name": "VariableDeclaration",
                          "src": "2190:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "to",
                            "scope": 173,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 168,
                              "name": "ElementaryTypeName",
                              "src": "2212:7:0"
                            }
                          ],
                          "id": 169,
                          "name": "VariableDeclaration",
                          "src": "2212:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "tokens",
                            "scope": 173,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 170,
                              "name": "ElementaryTypeName",
                              "src": "2232:4:0"
                            }
                          ],
                          "id": 171,
                          "name": "VariableDeclaration",
                          "src": "2232:11:0"
                        }
                      ],
                      "id": 172,
                      "name": "ParameterList",
                      "src": "2189:55:0"
                    }
                  ],
                  "id": 173,
                  "name": "EventDefinition",
                  "src": "2175:70:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Approval"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "tokenOwner",
                            "scope": 181,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 174,
                              "name": "ElementaryTypeName",
                              "src": "2266:7:0"
                            }
                          ],
                          "id": 175,
                          "name": "VariableDeclaration",
                          "src": "2266:26:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "spender",
                            "scope": 181,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 176,
                              "name": "ElementaryTypeName",
                              "src": "2294:7:0"
                            }
                          ],
                          "id": 177,
                          "name": "VariableDeclaration",
                          "src": "2294:23:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "tokens",
                            "scope": 181,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 178,
                              "name": "ElementaryTypeName",
                              "src": "2319:4:0"
                            }
                          ],
                          "id": 179,
                          "name": "VariableDeclaration",
                          "src": "2319:11:0"
                        }
                      ],
                      "id": 180,
                      "name": "ParameterList",
                      "src": "2265:66:0"
                    }
                  ],
                  "id": 181,
                  "name": "EventDefinition",
                  "src": "2251:81:0"
                }
              ],
              "id": 182,
              "name": "ContractDefinition",
              "src": "1637:698:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  194
                ],
                "name": "ApproveAndCallFallBack",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "receiveApproval",
                    "payable": false,
                    "scope": 194,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 183,
                              "name": "ElementaryTypeName",
                              "src": "2674:7:0"
                            }
                          ],
                          "id": 184,
                          "name": "VariableDeclaration",
                          "src": "2674:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 185,
                              "name": "ElementaryTypeName",
                              "src": "2688:7:0"
                            }
                          ],
                          "id": 186,
                          "name": "VariableDeclaration",
                          "src": "2688:14:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "token",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 187,
                              "name": "ElementaryTypeName",
                              "src": "2704:7:0"
                            }
                          ],
                          "id": 188,
                          "name": "VariableDeclaration",
                          "src": "2704:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "data",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes memory",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes",
                                "type": "bytes storage pointer"
                              },
                              "id": 189,
                              "name": "ElementaryTypeName",
                              "src": "2719:5:0"
                            }
                          ],
                          "id": 190,
                          "name": "VariableDeclaration",
                          "src": "2719:10:0"
                        }
                      ],
                      "id": 191,
                      "name": "ParameterList",
                      "src": "2673:57:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 192,
                      "name": "ParameterList",
                      "src": "2737:0:0"
                    }
                  ],
                  "id": 193,
                  "name": "FunctionDefinition",
                  "src": "2649:89:0"
                }
              ],
              "id": 194,
              "name": "ContractDefinition",
              "src": "2610:131:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  263
                ],
                "name": "Owned",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "constant": false,
                    "name": "owner",
                    "scope": 263,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 195,
                      "name": "ElementaryTypeName",
                      "src": "2948:7:0"
                    }
                  ],
                  "id": 196,
                  "name": "VariableDeclaration",
                  "src": "2948:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "newOwner",
                    "scope": 263,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 197,
                      "name": "ElementaryTypeName",
                      "src": "2975:7:0"
                    }
                  ],
                  "id": 198,
                  "name": "VariableDeclaration",
                  "src": "2975:23:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "OwnershipTransferred"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "_from",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 199,
                              "name": "ElementaryTypeName",
                              "src": "3033:7:0"
                            }
                          ],
                          "id": 200,
                          "name": "VariableDeclaration",
                          "src": "3033:21:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "_to",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 201,
                              "name": "ElementaryTypeName",
                              "src": "3056:7:0"
                            }
                          ],
                          "id": 202,
                          "name": "VariableDeclaration",
                          "src": "3056:19:0"
                        }
                      ],
                      "id": 203,
                      "name": "ParameterList",
                      "src": "3032:44:0"
                    }
                  ],
                  "id": 204,
                  "name": "EventDefinition",
                  "src": "3006:71:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": true,
                    "modifiers": [
                      null
                    ],
                    "name": "Owned",
                    "payable": false,
                    "scope": 263,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 205,
                      "name": "ParameterList",
                      "src": "3098:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 206,
                      "name": "ParameterList",
                      "src": "3108:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 207,
                                  "name": "Identifier",
                                  "src": "3119:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 208,
                                      "name": "Identifier",
                                      "src": "3127:3:0"
                                    }
                                  ],
                                  "id": 209,
                                  "name": "MemberAccess",
                                  "src": "3127:10:0"
                                }
                              ],
                              "id": 210,
                              "name": "Assignment",
                              "src": "3119:18:0"
                            }
                          ],
                          "id": 211,
                          "name": "ExpressionStatement",
                          "src": "3119:18:0"
                        }
                      ],
                      "id": 212,
                      "name": "Block",
                      "src": "3108:37:0"
                    }
                  ],
                  "id": 213,
                  "name": "FunctionDefinition",
                  "src": "3084:61:0"
                },
                {
                  "attributes": {
                    "name": "onlyOwner",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 214,
                      "name": "ParameterList",
                      "src": "3171:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1128,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 215,
                                  "name": "Identifier",
                                  "src": "3182:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1125,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 216,
                                          "name": "Identifier",
                                          "src": "3190:3:0"
                                        }
                                      ],
                                      "id": 217,
                                      "name": "MemberAccess",
                                      "src": "3190:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 196,
                                        "type": "address",
                                        "value": "owner"
                                      },
                                      "id": 218,
                                      "name": "Identifier",
                                      "src": "3204:5:0"
                                    }
                                  ],
                                  "id": 219,
                                  "name": "BinaryOperation",
                                  "src": "3190:19:0"
                                }
                              ],
                              "id": 220,
                              "name": "FunctionCall",
                              "src": "3182:28:0"
                            }
                          ],
                          "id": 221,
                          "name": "ExpressionStatement",
                          "src": "3182:28:0"
                        },
                        {
                          "id": 222,
                          "name": "PlaceholderStatement",
                          "src": "3221:1:0"
                        }
                      ],
                      "id": 223,
                      "name": "Block",
                      "src": "3171:59:0"
                    }
                  ],
                  "id": 224,
                  "name": "ModifierDefinition",
                  "src": "3152:78:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferOwnership",
                    "payable": false,
                    "scope": 263,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_newOwner",
                            "scope": 236,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 225,
                              "name": "ElementaryTypeName",
                              "src": "3264:7:0"
                            }
                          ],
                          "id": 226,
                          "name": "VariableDeclaration",
                          "src": "3264:17:0"
                        }
                      ],
                      "id": 227,
                      "name": "ParameterList",
                      "src": "3263:19:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 230,
                      "name": "ParameterList",
                      "src": "3300:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 224,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 228,
                          "name": "Identifier",
                          "src": "3290:9:0"
                        }
                      ],
                      "id": 229,
                      "name": "ModifierInvocation",
                      "src": "3290:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 231,
                                  "name": "Identifier",
                                  "src": "3311:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 226,
                                    "type": "address",
                                    "value": "_newOwner"
                                  },
                                  "id": 232,
                                  "name": "Identifier",
                                  "src": "3322:9:0"
                                }
                              ],
                              "id": 233,
                              "name": "Assignment",
                              "src": "3311:20:0"
                            }
                          ],
                          "id": 234,
                          "name": "ExpressionStatement",
                          "src": "3311:20:0"
                        }
                      ],
                      "id": 235,
                      "name": "Block",
                      "src": "3300:39:0"
                    }
                  ],
                  "id": 236,
                  "name": "FunctionDefinition",
                  "src": "3237:102:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "acceptOwnership",
                    "payable": false,
                    "scope": 263,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 237,
                      "name": "ParameterList",
                      "src": "3369:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 238,
                      "name": "ParameterList",
                      "src": "3379:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1128,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 239,
                                  "name": "Identifier",
                                  "src": "3390:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1125,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 240,
                                          "name": "Identifier",
                                          "src": "3398:3:0"
                                        }
                                      ],
                                      "id": 241,
                                      "name": "MemberAccess",
                                      "src": "3398:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 198,
                                        "type": "address",
                                        "value": "newOwner"
                                      },
                                      "id": 242,
                                      "name": "Identifier",
                                      "src": "3412:8:0"
                                    }
                                  ],
                                  "id": 243,
                                  "name": "BinaryOperation",
                                  "src": "3398:22:0"
                                }
                              ],
                              "id": 244,
                              "name": "FunctionCall",
                              "src": "3390:31:0"
                            }
                          ],
                          "id": 245,
                          "name": "ExpressionStatement",
                          "src": "3390:31:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 204,
                                    "type": "function (address,address)",
                                    "value": "OwnershipTransferred"
                                  },
                                  "id": 246,
                                  "name": "Identifier",
                                  "src": "3432:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 247,
                                  "name": "Identifier",
                                  "src": "3453:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 248,
                                  "name": "Identifier",
                                  "src": "3460:8:0"
                                }
                              ],
                              "id": 249,
                              "name": "FunctionCall",
                              "src": "3432:37:0"
                            }
                          ],
                          "id": 250,
                          "name": "ExpressionStatement",
                          "src": "3432:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 251,
                                  "name": "Identifier",
                                  "src": "3480:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 252,
                                  "name": "Identifier",
                                  "src": "3488:8:0"
                                }
                              ],
                              "id": 253,
                              "name": "Assignment",
                              "src": "3480:16:0"
                            }
                          ],
                          "id": 254,
                          "name": "ExpressionStatement",
                          "src": "3480:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 255,
                                  "name": "Identifier",
                                  "src": "3507:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "address",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(address)",
                                        "value": "address"
                                      },
                                      "id": 256,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "3518:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "30",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 0",
                                        "value": "0"
                                      },
                                      "id": 257,
                                      "name": "Literal",
                                      "src": "3526:1:0"
                                    }
                                  ],
                                  "id": 258,
                                  "name": "FunctionCall",
                                  "src": "3518:10:0"
                                }
                              ],
                              "id": 259,
                              "name": "Assignment",
                              "src": "3507:21:0"
                            }
                          ],
                          "id": 260,
                          "name": "ExpressionStatement",
                          "src": "3507:21:0"
                        }
                      ],
                      "id": 261,
                      "name": "Block",
                      "src": "3379:157:0"
                    }
                  ],
                  "id": 262,
                  "name": "FunctionDefinition",
                  "src": "3345:191:0"
                }
              ],
              "id": 263,
              "name": "ContractDefinition",
              "src": "2926:613:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  182,
                  263
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  1113,
                  263,
                  182
                ],
                "name": "_0xBitcoinToken",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ERC20Interface",
                        "referencedDeclaration": 182,
                        "type": "contract ERC20Interface"
                      },
                      "id": 264,
                      "name": "UserDefinedTypeName",
                      "src": "3829:14:0"
                    }
                  ],
                  "id": 265,
                  "name": "InheritanceSpecifier",
                  "src": "3829:14:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "Owned",
                        "referencedDeclaration": 263,
                        "type": "contract Owned"
                      },
                      "id": 266,
                      "name": "UserDefinedTypeName",
                      "src": "3845:5:0"
                    }
                  ],
                  "id": 267,
                  "name": "InheritanceSpecifier",
                  "src": "3845:5:0"
                },
                {
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "SafeMath",
                        "referencedDeclaration": 96,
                        "type": "library SafeMath"
                      },
                      "id": 268,
                      "name": "UserDefinedTypeName",
                      "src": "3864:8:0"
                    },
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 269,
                      "name": "ElementaryTypeName",
                      "src": "3877:4:0"
                    }
                  ],
                  "id": 270,
                  "name": "UsingForDirective",
                  "src": "3858:24:0"
                },
                {
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ExtendedMath",
                        "referencedDeclaration": 115,
                        "type": "library ExtendedMath"
                      },
                      "id": 271,
                      "name": "UserDefinedTypeName",
                      "src": "3893:12:0"
                    },
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 272,
                      "name": "ElementaryTypeName",
                      "src": "3910:4:0"
                    }
                  ],
                  "id": 273,
                  "name": "UsingForDirective",
                  "src": "3887:28:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "symbol",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 274,
                      "name": "ElementaryTypeName",
                      "src": "3922:6:0"
                    }
                  ],
                  "id": 275,
                  "name": "VariableDeclaration",
                  "src": "3922:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "name",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 276,
                      "name": "ElementaryTypeName",
                      "src": "3949:6:0"
                    }
                  ],
                  "id": 277,
                  "name": "VariableDeclaration",
                  "src": "3949:19:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "decimals",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint8",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint8",
                        "type": "uint8"
                      },
                      "id": 278,
                      "name": "ElementaryTypeName",
                      "src": "3975:5:0"
                    }
                  ],
                  "id": 279,
                  "name": "VariableDeclaration",
                  "src": "3975:21:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_totalSupply",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 280,
                      "name": "ElementaryTypeName",
                      "src": "4003:4:0"
                    }
                  ],
                  "id": 281,
                  "name": "VariableDeclaration",
                  "src": "4003:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "latestDifficultyPeriodStarted",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 282,
                      "name": "ElementaryTypeName",
                      "src": "4037:4:0"
                    }
                  ],
                  "id": 283,
                  "name": "VariableDeclaration",
                  "src": "4037:41:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "epochCount",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 284,
                      "name": "ElementaryTypeName",
                      "src": "4087:4:0"
                    }
                  ],
                  "id": 285,
                  "name": "VariableDeclaration",
                  "src": "4087:22:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_BLOCKS_PER_READJUSTMENT",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 286,
                      "name": "ElementaryTypeName",
                      "src": "4143:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "31303234",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "number",
                        "type": "int_const 1024",
                        "value": "1024"
                      },
                      "id": 287,
                      "name": "Literal",
                      "src": "4182:4:0"
                    }
                  ],
                  "id": 288,
                  "name": "VariableDeclaration",
                  "src": "4143:43:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_MINIMUM_TARGET",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 289,
                      "name": "ElementaryTypeName",
                      "src": "4216:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "operator": "**",
                        "type": "int_const 65536"
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "32",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 2",
                            "value": "2"
                          },
                          "id": 290,
                          "name": "Literal",
                          "src": "4247:1:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "3136",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 16",
                            "value": "16"
                          },
                          "id": 291,
                          "name": "Literal",
                          "src": "4250:2:0"
                        }
                      ],
                      "id": 292,
                      "name": "BinaryOperation",
                      "src": "4247:5:0"
                    }
                  ],
                  "id": 293,
                  "name": "VariableDeclaration",
                  "src": "4216:36:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_MAXIMUM_TARGET",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 294,
                      "name": "ElementaryTypeName",
                      "src": "4393:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                          "typeString": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "operator": "**",
                        "type": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "32",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 2",
                            "value": "2"
                          },
                          "id": 295,
                          "name": "Literal",
                          "src": "4424:1:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "323334",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 234",
                            "value": "234"
                          },
                          "id": 296,
                          "name": "Literal",
                          "src": "4427:3:0"
                        }
                      ],
                      "id": 297,
                      "name": "BinaryOperation",
                      "src": "4424:6:0"
                    }
                  ],
                  "id": 298,
                  "name": "VariableDeclaration",
                  "src": "4393:37:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "miningTarget",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 299,
                      "name": "ElementaryTypeName",
                      "src": "4438:4:0"
                    }
                  ],
                  "id": 300,
                  "name": "VariableDeclaration",
                  "src": "4438:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "challengeNumber",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "bytes32",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "bytes32",
                        "type": "bytes32"
                      },
                      "id": 301,
                      "name": "ElementaryTypeName",
                      "src": "4469:7:0"
                    }
                  ],
                  "id": 302,
                  "name": "VariableDeclaration",
                  "src": "4469:30:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "rewardEra",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 303,
                      "name": "ElementaryTypeName",
                      "src": "4559:4:0"
                    }
                  ],
                  "id": 304,
                  "name": "VariableDeclaration",
                  "src": "4559:21:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "maxSupplyForEra",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 305,
                      "name": "ElementaryTypeName",
                      "src": "4586:4:0"
                    }
                  ],
                  "id": 306,
                  "name": "VariableDeclaration",
                  "src": "4586:27:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "lastRewardTo",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 307,
                      "name": "ElementaryTypeName",
                      "src": "4621:7:0"
                    }
                  ],
                  "id": 308,
                  "name": "VariableDeclaration",
                  "src": "4621:27:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "lastRewardAmount",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 309,
                      "name": "ElementaryTypeName",
                      "src": "4654:4:0"
                    }
                  ],
                  "id": 310,
                  "name": "VariableDeclaration",
                  "src": "4654:28:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "lastRewardEthBlockNumber",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 311,
                      "name": "ElementaryTypeName",
                      "src": "4688:4:0"
                    }
                  ],
                  "id": 312,
                  "name": "VariableDeclaration",
                  "src": "4688:36:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "locked",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "bool",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "bool",
                        "type": "bool"
                      },
                      "id": 313,
                      "name": "ElementaryTypeName",
                      "src": "4731:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "66616c7365",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "bool",
                        "type": "bool",
                        "value": "false"
                      },
                      "id": 314,
                      "name": "Literal",
                      "src": "4745:5:0"
                    }
                  ],
                  "id": 315,
                  "name": "VariableDeclaration",
                  "src": "4731:19:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "solutionForChallenge",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(bytes32 => bytes32)",
                    "value": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(bytes32 => bytes32)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "bytes32",
                            "type": "bytes32"
                          },
                          "id": 316,
                          "name": "ElementaryTypeName",
                          "src": "4765:7:0"
                        },
                        {
                          "attributes": {
                            "name": "bytes32",
                            "type": "bytes32"
                          },
                          "id": 317,
                          "name": "ElementaryTypeName",
                          "src": "4776:7:0"
                        }
                      ],
                      "id": 318,
                      "name": "Mapping",
                      "src": "4757:27:0"
                    }
                  ],
                  "id": 319,
                  "name": "VariableDeclaration",
                  "src": "4757:48:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "tokensMinted",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 320,
                      "name": "ElementaryTypeName",
                      "src": "4812:4:0"
                    }
                  ],
                  "id": 321,
                  "name": "VariableDeclaration",
                  "src": "4812:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "balances",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => uint256)",
                    "value": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => uint256)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 322,
                          "name": "ElementaryTypeName",
                          "src": "4851:7:0"
                        },
                        {
                          "attributes": {
                            "name": "uint",
                            "type": "uint256"
                          },
                          "id": 323,
                          "name": "ElementaryTypeName",
                          "src": "4862:4:0"
                        }
                      ],
                      "id": 324,
                      "name": "Mapping",
                      "src": "4843:24:0"
                    }
                  ],
                  "id": 325,
                  "name": "VariableDeclaration",
                  "src": "4843:33:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "allowed",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => mapping(address => uint256))",
                    "value": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => mapping(address => uint256))"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 326,
                          "name": "ElementaryTypeName",
                          "src": "4892:7:0"
                        },
                        {
                          "attributes": {
                            "type": "mapping(address => uint256)"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 327,
                              "name": "ElementaryTypeName",
                              "src": "4911:7:0"
                            },
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 328,
                              "name": "ElementaryTypeName",
                              "src": "4922:4:0"
                            }
                          ],
                          "id": 329,
                          "name": "Mapping",
                          "src": "4903:24:0"
                        }
                      ],
                      "id": 330,
                      "name": "Mapping",
                      "src": "4884:44:0"
                    }
                  ],
                  "id": 331,
                  "name": "VariableDeclaration",
                  "src": "4884:52:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Mint"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "from",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 332,
                              "name": "ElementaryTypeName",
                              "src": "4955:7:0"
                            }
                          ],
                          "id": 333,
                          "name": "VariableDeclaration",
                          "src": "4955:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "reward_amount",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 334,
                              "name": "ElementaryTypeName",
                              "src": "4977:4:0"
                            }
                          ],
                          "id": 335,
                          "name": "VariableDeclaration",
                          "src": "4977:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "epochCount",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 336,
                              "name": "ElementaryTypeName",
                              "src": "4997:4:0"
                            }
                          ],
                          "id": 337,
                          "name": "VariableDeclaration",
                          "src": "4997:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "newChallengeNumber",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 338,
                              "name": "ElementaryTypeName",
                              "src": "5014:7:0"
                            }
                          ],
                          "id": 339,
                          "name": "VariableDeclaration",
                          "src": "5014:26:0"
                        }
                      ],
                      "id": 340,
                      "name": "ParameterList",
                      "src": "4954:87:0"
                    }
                  ],
                  "id": 341,
                  "name": "EventDefinition",
                  "src": "4944:98:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": true,
                    "name": "_0xBitcoinToken",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 342,
                      "name": "ParameterList",
                      "src": "5254:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 345,
                      "name": "ParameterList",
                      "src": "5273:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 224,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 343,
                          "name": "Identifier",
                          "src": "5264:9:0"
                        }
                      ],
                      "id": 344,
                      "name": "ModifierInvocation",
                      "src": "5264:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "string storage ref"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 275,
                                    "type": "string storage ref",
                                    "value": "symbol"
                                  },
                                  "id": 346,
                                  "name": "Identifier",
                                  "src": "5286:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3078425443",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "string",
                                    "type": "literal_string \"0xBTC\"",
                                    "value": "0xBTC"
                                  },
                                  "id": 347,
                                  "name": "Literal",
                                  "src": "5295:7:0"
                                }
                              ],
                              "id": 348,
                              "name": "Assignment",
                              "src": "5286:16:0"
                            }
                          ],
                          "id": 349,
                          "name": "ExpressionStatement",
                          "src": "5286:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "string storage ref"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 277,
                                    "type": "string storage ref",
                                    "value": "name"
                                  },
                                  "id": 350,
                                  "name": "Identifier",
                                  "src": "5313:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3078426974636f696e20546f6b656e",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "string",
                                    "type": "literal_string \"0xBitcoin Token\"",
                                    "value": "0xBitcoin Token"
                                  },
                                  "id": 351,
                                  "name": "Literal",
                                  "src": "5320:17:0"
                                }
                              ],
                              "id": 352,
                              "name": "Assignment",
                              "src": "5313:24:0"
                            }
                          ],
                          "id": 353,
                          "name": "ExpressionStatement",
                          "src": "5313:24:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint8"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 279,
                                    "type": "uint8",
                                    "value": "decimals"
                                  },
                                  "id": 354,
                                  "name": "Identifier",
                                  "src": "5348:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "38",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 8",
                                    "value": "8"
                                  },
                                  "id": 355,
                                  "name": "Literal",
                                  "src": "5359:1:0"
                                }
                              ],
                              "id": 356,
                              "name": "Assignment",
                              "src": "5348:12:0"
                            }
                          ],
                          "id": 357,
                          "name": "ExpressionStatement",
                          "src": "5348:12:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 281,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 358,
                                  "name": "Identifier",
                                  "src": "5371:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "*",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "3231303030303030",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 21000000",
                                        "value": "21000000"
                                      },
                                      "id": 359,
                                      "name": "Literal",
                                      "src": "5386:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "**",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "3130",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 10",
                                            "value": "10"
                                          },
                                          "id": 360,
                                          "name": "Literal",
                                          "src": "5397:2:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": true
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "type": "type(uint256)",
                                                "value": "uint"
                                              },
                                              "id": 361,
                                              "name": "ElementaryTypeNameExpression",
                                              "src": "5401:4:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 279,
                                                "type": "uint8",
                                                "value": "decimals"
                                              },
                                              "id": 362,
                                              "name": "Identifier",
                                              "src": "5406:8:0"
                                            }
                                          ],
                                          "id": 363,
                                          "name": "FunctionCall",
                                          "src": "5401:14:0"
                                        }
                                      ],
                                      "id": 364,
                                      "name": "BinaryOperation",
                                      "src": "5397:18:0"
                                    }
                                  ],
                                  "id": 365,
                                  "name": "BinaryOperation",
                                  "src": "5386:29:0"
                                }
                              ],
                              "id": 366,
                              "name": "Assignment",
                              "src": "5371:44:0"
                            }
                          ],
                          "id": 367,
                          "name": "ExpressionStatement",
                          "src": "5371:44:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 315,
                                "type": "bool",
                                "value": "locked"
                              },
                              "id": 368,
                              "name": "Identifier",
                              "src": "5429:6:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1129,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 369,
                                      "name": "Identifier",
                                      "src": "5437:6:0"
                                    }
                                  ],
                                  "id": 370,
                                  "name": "FunctionCall",
                                  "src": "5437:8:0"
                                }
                              ],
                              "id": 371,
                              "name": "ExpressionStatement",
                              "src": "5437:8:0"
                            }
                          ],
                          "id": 372,
                          "name": "IfStatement",
                          "src": "5426:19:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 315,
                                    "type": "bool",
                                    "value": "locked"
                                  },
                                  "id": 373,
                                  "name": "Identifier",
                                  "src": "5455:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "74727565",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "true"
                                  },
                                  "id": 374,
                                  "name": "Literal",
                                  "src": "5464:4:0"
                                }
                              ],
                              "id": 375,
                              "name": "Assignment",
                              "src": "5455:13:0"
                            }
                          ],
                          "id": 376,
                          "name": "ExpressionStatement",
                          "src": "5455:13:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 377,
                                  "name": "Identifier",
                                  "src": "5479:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 378,
                                  "name": "Literal",
                                  "src": "5494:1:0"
                                }
                              ],
                              "id": 379,
                              "name": "Assignment",
                              "src": "5479:16:0"
                            }
                          ],
                          "id": 380,
                          "name": "ExpressionStatement",
                          "src": "5479:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 304,
                                    "type": "uint256",
                                    "value": "rewardEra"
                                  },
                                  "id": 381,
                                  "name": "Identifier",
                                  "src": "5506:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 382,
                                  "name": "Literal",
                                  "src": "5518:1:0"
                                }
                              ],
                              "id": 383,
                              "name": "Assignment",
                              "src": "5506:13:0"
                            }
                          ],
                          "id": 384,
                          "name": "ExpressionStatement",
                          "src": "5506:13:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 306,
                                    "type": "uint256",
                                    "value": "maxSupplyForEra"
                                  },
                                  "id": 385,
                                  "name": "Identifier",
                                  "src": "5529:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "div",
                                        "referencedDeclaration": 95,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 281,
                                            "type": "uint256",
                                            "value": "_totalSupply"
                                          },
                                          "id": 386,
                                          "name": "Identifier",
                                          "src": "5547:12:0"
                                        }
                                      ],
                                      "id": 387,
                                      "name": "MemberAccess",
                                      "src": "5547:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "32",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 2",
                                        "value": "2"
                                      },
                                      "id": 388,
                                      "name": "Literal",
                                      "src": "5564:1:0"
                                    }
                                  ],
                                  "id": 389,
                                  "name": "FunctionCall",
                                  "src": "5547:19:0"
                                }
                              ],
                              "id": 390,
                              "name": "Assignment",
                              "src": "5529:37:0"
                            }
                          ],
                          "id": 391,
                          "name": "ExpressionStatement",
                          "src": "5529:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 392,
                                  "name": "Identifier",
                                  "src": "5577:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 298,
                                    "type": "uint256",
                                    "value": "_MAXIMUM_TARGET"
                                  },
                                  "id": 393,
                                  "name": "Identifier",
                                  "src": "5592:15:0"
                                }
                              ],
                              "id": 394,
                              "name": "Assignment",
                              "src": "5577:30:0"
                            }
                          ],
                          "id": 395,
                          "name": "ExpressionStatement",
                          "src": "5577:30:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 283,
                                    "type": "uint256",
                                    "value": "latestDifficultyPeriodStarted"
                                  },
                                  "id": 396,
                                  "name": "Identifier",
                                  "src": "5618:29:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1117,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 397,
                                      "name": "Identifier",
                                      "src": "5650:5:0"
                                    }
                                  ],
                                  "id": 398,
                                  "name": "MemberAccess",
                                  "src": "5650:12:0"
                                }
                              ],
                              "id": 399,
                              "name": "Assignment",
                              "src": "5618:44:0"
                            }
                          ],
                          "id": 400,
                          "name": "ExpressionStatement",
                          "src": "5618:44:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 581,
                                    "type": "function ()",
                                    "value": "_startNewMiningEpoch"
                                  },
                                  "id": 401,
                                  "name": "Identifier",
                                  "src": "5673:20:0"
                                }
                              ],
                              "id": 402,
                              "name": "FunctionCall",
                              "src": "5673:22:0"
                            }
                          ],
                          "id": 403,
                          "name": "ExpressionStatement",
                          "src": "5673:22:0"
                        }
                      ],
                      "id": 404,
                      "name": "Block",
                      "src": "5273:592:0"
                    }
                  ],
                  "id": 405,
                  "name": "FunctionDefinition",
                  "src": "5230:635:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mint",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "nonce",
                            "scope": 517,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 406,
                              "name": "ElementaryTypeName",
                              "src": "5892:7:0"
                            }
                          ],
                          "id": 407,
                          "name": "VariableDeclaration",
                          "src": "5892:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_digest",
                            "scope": 517,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 408,
                              "name": "ElementaryTypeName",
                              "src": "5907:7:0"
                            }
                          ],
                          "id": 409,
                          "name": "VariableDeclaration",
                          "src": "5907:24:0"
                        }
                      ],
                      "id": 410,
                      "name": "ParameterList",
                      "src": "5891:41:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 517,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 411,
                              "name": "ElementaryTypeName",
                              "src": "5949:4:0"
                            }
                          ],
                          "id": 412,
                          "name": "VariableDeclaration",
                          "src": "5949:12:0"
                        }
                      ],
                      "id": 413,
                      "name": "ParameterList",
                      "src": "5948:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              415
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "digest",
                                "scope": 517,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 414,
                                  "name": "ElementaryTypeName",
                                  "src": "6134:7:0"
                                }
                              ],
                              "id": 415,
                              "name": "VariableDeclaration",
                              "src": "6134:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bytes32",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1119,
                                    "type": "function () pure returns (bytes32)",
                                    "value": "keccak256"
                                  },
                                  "id": 416,
                                  "name": "Identifier",
                                  "src": "6152:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 417,
                                  "name": "Identifier",
                                  "src": "6162:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 418,
                                      "name": "Identifier",
                                      "src": "6179:3:0"
                                    }
                                  ],
                                  "id": 419,
                                  "name": "MemberAccess",
                                  "src": "6179:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 407,
                                    "type": "uint256",
                                    "value": "nonce"
                                  },
                                  "id": 420,
                                  "name": "Identifier",
                                  "src": "6191:5:0"
                                }
                              ],
                              "id": 421,
                              "name": "FunctionCall",
                              "src": "6152:46:0"
                            }
                          ],
                          "id": 422,
                          "name": "VariableDeclarationStatement",
                          "src": "6134:64:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "!=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 415,
                                    "type": "bytes32",
                                    "value": "digest"
                                  },
                                  "id": 423,
                                  "name": "Identifier",
                                  "src": "6276:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 409,
                                    "type": "bytes32",
                                    "value": "challenge_digest"
                                  },
                                  "id": 424,
                                  "name": "Identifier",
                                  "src": "6286:16:0"
                                }
                              ],
                              "id": 425,
                              "name": "BinaryOperation",
                              "src": "6276:26:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1129,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 426,
                                      "name": "Identifier",
                                      "src": "6304:6:0"
                                    }
                                  ],
                                  "id": 427,
                                  "name": "FunctionCall",
                                  "src": "6304:8:0"
                                }
                              ],
                              "id": 428,
                              "name": "ExpressionStatement",
                              "src": "6304:8:0"
                            }
                          ],
                          "id": 429,
                          "name": "IfStatement",
                          "src": "6272:40:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(uint256)",
                                        "value": "uint256"
                                      },
                                      "id": 430,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "6387:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 415,
                                        "type": "bytes32",
                                        "value": "digest"
                                      },
                                      "id": 431,
                                      "name": "Identifier",
                                      "src": "6395:6:0"
                                    }
                                  ],
                                  "id": 432,
                                  "name": "FunctionCall",
                                  "src": "6387:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 433,
                                  "name": "Identifier",
                                  "src": "6405:12:0"
                                }
                              ],
                              "id": 434,
                              "name": "BinaryOperation",
                              "src": "6387:30:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1129,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 435,
                                      "name": "Identifier",
                                      "src": "6419:6:0"
                                    }
                                  ],
                                  "id": 436,
                                  "name": "FunctionCall",
                                  "src": "6419:8:0"
                                }
                              ],
                              "id": 437,
                              "name": "ExpressionStatement",
                              "src": "6419:8:0"
                            }
                          ],
                          "id": 438,
                          "name": "IfStatement",
                          "src": "6384:43:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              440
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "solution",
                                "scope": 517,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 439,
                                  "name": "ElementaryTypeName",
                                  "src": "6499:7:0"
                                }
                              ],
                              "id": 440,
                              "name": "VariableDeclaration",
                              "src": "6499:16:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "bytes32"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 319,
                                    "type": "mapping(bytes32 => bytes32)",
                                    "value": "solutionForChallenge"
                                  },
                                  "id": 441,
                                  "name": "Identifier",
                                  "src": "6518:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 442,
                                  "name": "Identifier",
                                  "src": "6539:15:0"
                                }
                              ],
                              "id": 443,
                              "name": "IndexAccess",
                              "src": "6518:37:0"
                            }
                          ],
                          "id": 444,
                          "name": "VariableDeclarationStatement",
                          "src": "6499:56:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bytes32"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "bytes32"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 319,
                                        "type": "mapping(bytes32 => bytes32)",
                                        "value": "solutionForChallenge"
                                      },
                                      "id": 445,
                                      "name": "Identifier",
                                      "src": "6570:20:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 302,
                                        "type": "bytes32",
                                        "value": "challengeNumber"
                                      },
                                      "id": 446,
                                      "name": "Identifier",
                                      "src": "6591:15:0"
                                    }
                                  ],
                                  "id": 447,
                                  "name": "IndexAccess",
                                  "src": "6570:37:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 415,
                                    "type": "bytes32",
                                    "value": "digest"
                                  },
                                  "id": 448,
                                  "name": "Identifier",
                                  "src": "6610:6:0"
                                }
                              ],
                              "id": 449,
                              "name": "Assignment",
                              "src": "6570:46:0"
                            }
                          ],
                          "id": 450,
                          "name": "ExpressionStatement",
                          "src": "6570:46:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "!=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 440,
                                    "type": "bytes32",
                                    "value": "solution"
                                  },
                                  "id": 451,
                                  "name": "Identifier",
                                  "src": "6634:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "307830",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0x0"
                                  },
                                  "id": 452,
                                  "name": "Literal",
                                  "src": "6646:3:0"
                                }
                              ],
                              "id": 453,
                              "name": "BinaryOperation",
                              "src": "6634:15:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1129,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 454,
                                      "name": "Identifier",
                                      "src": "6651:6:0"
                                    }
                                  ],
                                  "id": 455,
                                  "name": "FunctionCall",
                                  "src": "6651:8:0"
                                }
                              ],
                              "id": 456,
                              "name": "ExpressionStatement",
                              "src": "6651:8:0"
                            }
                          ],
                          "id": 457,
                          "name": "IfStatement",
                          "src": "6631:28:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              459
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "reward_amount",
                                "scope": 517,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 458,
                                  "name": "ElementaryTypeName",
                                  "src": "6722:4:0"
                                }
                              ],
                              "id": 459,
                              "name": "VariableDeclaration",
                              "src": "6722:18:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 746,
                                    "type": "function () view returns (uint256)",
                                    "value": "getMiningReward"
                                  },
                                  "id": 460,
                                  "name": "Identifier",
                                  "src": "6743:15:0"
                                }
                              ],
                              "id": 461,
                              "name": "FunctionCall",
                              "src": "6743:17:0"
                            }
                          ],
                          "id": 462,
                          "name": "VariableDeclarationStatement",
                          "src": "6722:38:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 463,
                                      "name": "Identifier",
                                      "src": "6775:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1125,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 464,
                                          "name": "Identifier",
                                          "src": "6784:3:0"
                                        }
                                      ],
                                      "id": 465,
                                      "name": "MemberAccess",
                                      "src": "6784:10:0"
                                    }
                                  ],
                                  "id": 466,
                                  "name": "IndexAccess",
                                  "src": "6775:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 467,
                                              "name": "Identifier",
                                              "src": "6798:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1125,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 468,
                                                  "name": "Identifier",
                                                  "src": "6807:3:0"
                                                }
                                              ],
                                              "id": 469,
                                              "name": "MemberAccess",
                                              "src": "6807:10:0"
                                            }
                                          ],
                                          "id": 470,
                                          "name": "IndexAccess",
                                          "src": "6798:20:0"
                                        }
                                      ],
                                      "id": 471,
                                      "name": "MemberAccess",
                                      "src": "6798:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 459,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 472,
                                      "name": "Identifier",
                                      "src": "6823:13:0"
                                    }
                                  ],
                                  "id": 473,
                                  "name": "FunctionCall",
                                  "src": "6798:39:0"
                                }
                              ],
                              "id": 474,
                              "name": "Assignment",
                              "src": "6775:62:0"
                            }
                          ],
                          "id": 475,
                          "name": "ExpressionStatement",
                          "src": "6775:62:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 476,
                                  "name": "Identifier",
                                  "src": "6852:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 321,
                                            "type": "uint256",
                                            "value": "tokensMinted"
                                          },
                                          "id": 477,
                                          "name": "Identifier",
                                          "src": "6867:12:0"
                                        }
                                      ],
                                      "id": 478,
                                      "name": "MemberAccess",
                                      "src": "6867:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 459,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 479,
                                      "name": "Identifier",
                                      "src": "6884:13:0"
                                    }
                                  ],
                                  "id": 480,
                                  "name": "FunctionCall",
                                  "src": "6867:31:0"
                                }
                              ],
                              "id": 481,
                              "name": "Assignment",
                              "src": "6852:46:0"
                            }
                          ],
                          "id": 482,
                          "name": "ExpressionStatement",
                          "src": "6852:46:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1116,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 483,
                                  "name": "Identifier",
                                  "src": "6967:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 321,
                                        "type": "uint256",
                                        "value": "tokensMinted"
                                      },
                                      "id": 484,
                                      "name": "Identifier",
                                      "src": "6974:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 306,
                                        "type": "uint256",
                                        "value": "maxSupplyForEra"
                                      },
                                      "id": 485,
                                      "name": "Identifier",
                                      "src": "6990:15:0"
                                    }
                                  ],
                                  "id": 486,
                                  "name": "BinaryOperation",
                                  "src": "6974:31:0"
                                }
                              ],
                              "id": 487,
                              "name": "FunctionCall",
                              "src": "6967:39:0"
                            }
                          ],
                          "id": 488,
                          "name": "ExpressionStatement",
                          "src": "6967:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 308,
                                    "type": "address",
                                    "value": "lastRewardTo"
                                  },
                                  "id": 489,
                                  "name": "Identifier",
                                  "src": "7065:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 490,
                                      "name": "Identifier",
                                      "src": "7080:3:0"
                                    }
                                  ],
                                  "id": 491,
                                  "name": "MemberAccess",
                                  "src": "7080:10:0"
                                }
                              ],
                              "id": 492,
                              "name": "Assignment",
                              "src": "7065:25:0"
                            }
                          ],
                          "id": 493,
                          "name": "ExpressionStatement",
                          "src": "7065:25:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 310,
                                    "type": "uint256",
                                    "value": "lastRewardAmount"
                                  },
                                  "id": 494,
                                  "name": "Identifier",
                                  "src": "7104:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 459,
                                    "type": "uint256",
                                    "value": "reward_amount"
                                  },
                                  "id": 495,
                                  "name": "Identifier",
                                  "src": "7123:13:0"
                                }
                              ],
                              "id": 496,
                              "name": "Assignment",
                              "src": "7104:32:0"
                            }
                          ],
                          "id": 497,
                          "name": "ExpressionStatement",
                          "src": "7104:32:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 312,
                                    "type": "uint256",
                                    "value": "lastRewardEthBlockNumber"
                                  },
                                  "id": 498,
                                  "name": "Identifier",
                                  "src": "7150:24:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1117,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 499,
                                      "name": "Identifier",
                                      "src": "7177:5:0"
                                    }
                                  ],
                                  "id": 500,
                                  "name": "MemberAccess",
                                  "src": "7177:12:0"
                                }
                              ],
                              "id": 501,
                              "name": "Assignment",
                              "src": "7150:39:0"
                            }
                          ],
                          "id": 502,
                          "name": "ExpressionStatement",
                          "src": "7150:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 581,
                                    "type": "function ()",
                                    "value": "_startNewMiningEpoch"
                                  },
                                  "id": 503,
                                  "name": "Identifier",
                                  "src": "7206:20:0"
                                }
                              ],
                              "id": 504,
                              "name": "FunctionCall",
                              "src": "7206:22:0"
                            }
                          ],
                          "id": 505,
                          "name": "ExpressionStatement",
                          "src": "7206:22:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 341,
                                    "type": "function (address,uint256,uint256,bytes32)",
                                    "value": "Mint"
                                  },
                                  "id": 506,
                                  "name": "Identifier",
                                  "src": "7245:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 507,
                                      "name": "Identifier",
                                      "src": "7250:3:0"
                                    }
                                  ],
                                  "id": 508,
                                  "name": "MemberAccess",
                                  "src": "7250:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 459,
                                    "type": "uint256",
                                    "value": "reward_amount"
                                  },
                                  "id": 509,
                                  "name": "Identifier",
                                  "src": "7262:13:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 285,
                                    "type": "uint256",
                                    "value": "epochCount"
                                  },
                                  "id": 510,
                                  "name": "Identifier",
                                  "src": "7277:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 511,
                                  "name": "Identifier",
                                  "src": "7289:15:0"
                                }
                              ],
                              "id": 512,
                              "name": "FunctionCall",
                              "src": "7245:61:0"
                            }
                          ],
                          "id": 513,
                          "name": "ExpressionStatement",
                          "src": "7245:61:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 413
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 514,
                              "name": "Literal",
                              "src": "7327:4:0"
                            }
                          ],
                          "id": 515,
                          "name": "Return",
                          "src": "7320:11:0"
                        }
                      ],
                      "id": 516,
                      "name": "Block",
                      "src": "5963:1380:0"
                    }
                  ],
                  "id": 517,
                  "name": "FunctionDefinition",
                  "src": "5878:1465:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "_startNewMiningEpoch",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 518,
                      "name": "ParameterList",
                      "src": "7411:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 519,
                      "name": "ParameterList",
                      "src": "7423:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "&&",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "add",
                                            "referencedDeclaration": 23,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 321,
                                                "type": "uint256",
                                                "value": "tokensMinted"
                                              },
                                              "id": 520,
                                              "name": "Identifier",
                                              "src": "7711:12:0"
                                            }
                                          ],
                                          "id": 521,
                                          "name": "MemberAccess",
                                          "src": "7711:16:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              null
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  null
                                                ],
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 746,
                                                "type": "function () view returns (uint256)",
                                                "value": "getMiningReward"
                                              },
                                              "id": 522,
                                              "name": "Identifier",
                                              "src": "7728:15:0"
                                            }
                                          ],
                                          "id": 523,
                                          "name": "FunctionCall",
                                          "src": "7728:17:0"
                                        }
                                      ],
                                      "id": 524,
                                      "name": "FunctionCall",
                                      "src": "7711:35:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 306,
                                        "type": "uint256",
                                        "value": "maxSupplyForEra"
                                      },
                                      "id": 525,
                                      "name": "Identifier",
                                      "src": "7749:15:0"
                                    }
                                  ],
                                  "id": 526,
                                  "name": "BinaryOperation",
                                  "src": "7711:53:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 304,
                                        "type": "uint256",
                                        "value": "rewardEra"
                                      },
                                      "id": 527,
                                      "name": "Identifier",
                                      "src": "7768:9:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "3339",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 39",
                                        "value": "39"
                                      },
                                      "id": 528,
                                      "name": "Literal",
                                      "src": "7780:2:0"
                                    }
                                  ],
                                  "id": 529,
                                  "name": "BinaryOperation",
                                  "src": "7768:14:0"
                                }
                              ],
                              "id": 530,
                              "name": "BinaryOperation",
                              "src": "7711:71:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 304,
                                            "type": "uint256",
                                            "value": "rewardEra"
                                          },
                                          "id": 531,
                                          "name": "Identifier",
                                          "src": "7800:9:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "+",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 304,
                                                "type": "uint256",
                                                "value": "rewardEra"
                                              },
                                              "id": 532,
                                              "name": "Identifier",
                                              "src": "7812:9:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "31",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 1",
                                                "value": "1"
                                              },
                                              "id": 533,
                                              "name": "Literal",
                                              "src": "7824:1:0"
                                            }
                                          ],
                                          "id": 534,
                                          "name": "BinaryOperation",
                                          "src": "7812:13:0"
                                        }
                                      ],
                                      "id": 535,
                                      "name": "Assignment",
                                      "src": "7800:25:0"
                                    }
                                  ],
                                  "id": 536,
                                  "name": "ExpressionStatement",
                                  "src": "7800:25:0"
                                }
                              ],
                              "id": 537,
                              "name": "Block",
                              "src": "7790:44:0"
                            }
                          ],
                          "id": 538,
                          "name": "IfStatement",
                          "src": "7707:127:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 306,
                                    "type": "uint256",
                                    "value": "maxSupplyForEra"
                                  },
                                  "id": 539,
                                  "name": "Identifier",
                                  "src": "7977:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "-",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 281,
                                        "type": "uint256",
                                        "value": "_totalSupply"
                                      },
                                      "id": 540,
                                      "name": "Identifier",
                                      "src": "7995:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "div",
                                            "referencedDeclaration": 95,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 281,
                                                "type": "uint256",
                                                "value": "_totalSupply"
                                              },
                                              "id": 541,
                                              "name": "Identifier",
                                              "src": "8010:12:0"
                                            }
                                          ],
                                          "id": 542,
                                          "name": "MemberAccess",
                                          "src": "8010:16:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "**",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "32",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 2",
                                                "value": "2"
                                              },
                                              "id": 543,
                                              "name": "Literal",
                                              "src": "8028:1:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "operator": "+",
                                                    "type": "uint256"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 304,
                                                        "type": "uint256",
                                                        "value": "rewardEra"
                                                      },
                                                      "id": 544,
                                                      "name": "Identifier",
                                                      "src": "8032:9:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "31",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 1",
                                                        "value": "1"
                                                      },
                                                      "id": 545,
                                                      "name": "Literal",
                                                      "src": "8044:1:0"
                                                    }
                                                  ],
                                                  "id": 546,
                                                  "name": "BinaryOperation",
                                                  "src": "8032:13:0"
                                                }
                                              ],
                                              "id": 547,
                                              "name": "TupleExpression",
                                              "src": "8031:15:0"
                                            }
                                          ],
                                          "id": 548,
                                          "name": "BinaryOperation",
                                          "src": "8028:18:0"
                                        }
                                      ],
                                      "id": 549,
                                      "name": "FunctionCall",
                                      "src": "8010:37:0"
                                    }
                                  ],
                                  "id": 550,
                                  "name": "BinaryOperation",
                                  "src": "7995:52:0"
                                }
                              ],
                              "id": 551,
                              "name": "Assignment",
                              "src": "7977:70:0"
                            }
                          ],
                          "id": 552,
                          "name": "ExpressionStatement",
                          "src": "7977:70:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 285,
                                    "type": "uint256",
                                    "value": "epochCount"
                                  },
                                  "id": 553,
                                  "name": "Identifier",
                                  "src": "8056:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 285,
                                            "type": "uint256",
                                            "value": "epochCount"
                                          },
                                          "id": 554,
                                          "name": "Identifier",
                                          "src": "8069:10:0"
                                        }
                                      ],
                                      "id": 555,
                                      "name": "MemberAccess",
                                      "src": "8069:14:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "31",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 1",
                                        "value": "1"
                                      },
                                      "id": 556,
                                      "name": "Literal",
                                      "src": "8084:1:0"
                                    }
                                  ],
                                  "id": 557,
                                  "name": "FunctionCall",
                                  "src": "8069:17:0"
                                }
                              ],
                              "id": 558,
                              "name": "Assignment",
                              "src": "8056:30:0"
                            }
                          ],
                          "id": 559,
                          "name": "ExpressionStatement",
                          "src": "8056:30:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "==",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "%",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 285,
                                        "type": "uint256",
                                        "value": "epochCount"
                                      },
                                      "id": 560,
                                      "name": "Identifier",
                                      "src": "8172:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 288,
                                        "type": "uint256",
                                        "value": "_BLOCKS_PER_READJUSTMENT"
                                      },
                                      "id": 561,
                                      "name": "Identifier",
                                      "src": "8185:24:0"
                                    }
                                  ],
                                  "id": 562,
                                  "name": "BinaryOperation",
                                  "src": "8172:37:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 563,
                                  "name": "Literal",
                                  "src": "8213:1:0"
                                }
                              ],
                              "id": 564,
                              "name": "BinaryOperation",
                              "src": "8172:42:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          null
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              null
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 699,
                                            "type": "function ()",
                                            "value": "_reAdjustDifficulty"
                                          },
                                          "id": 565,
                                          "name": "Identifier",
                                          "src": "8232:19:0"
                                        }
                                      ],
                                      "id": 566,
                                      "name": "FunctionCall",
                                      "src": "8232:21:0"
                                    }
                                  ],
                                  "id": 567,
                                  "name": "ExpressionStatement",
                                  "src": "8232:21:0"
                                }
                              ],
                              "id": 568,
                              "name": "Block",
                              "src": "8222:40:0"
                            }
                          ],
                          "id": 569,
                          "name": "IfStatement",
                          "src": "8169:93:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bytes32"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 570,
                                  "name": "Identifier",
                                  "src": "8469:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "bytes32",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "blockhash",
                                        "referencedDeclaration": null,
                                        "type": "function (uint256) view returns (bytes32)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1117,
                                            "type": "block",
                                            "value": "block"
                                          },
                                          "id": 571,
                                          "name": "Identifier",
                                          "src": "8487:5:0"
                                        }
                                      ],
                                      "id": 572,
                                      "name": "MemberAccess",
                                      "src": "8487:15:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "-",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "number",
                                            "referencedDeclaration": null,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1117,
                                                "type": "block",
                                                "value": "block"
                                              },
                                              "id": 573,
                                              "name": "Identifier",
                                              "src": "8503:5:0"
                                            }
                                          ],
                                          "id": 574,
                                          "name": "MemberAccess",
                                          "src": "8503:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "31",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 1",
                                            "value": "1"
                                          },
                                          "id": 575,
                                          "name": "Literal",
                                          "src": "8518:1:0"
                                        }
                                      ],
                                      "id": 576,
                                      "name": "BinaryOperation",
                                      "src": "8503:16:0"
                                    }
                                  ],
                                  "id": 577,
                                  "name": "FunctionCall",
                                  "src": "8487:33:0"
                                }
                              ],
                              "id": 578,
                              "name": "Assignment",
                              "src": "8469:51:0"
                            }
                          ],
                          "id": 579,
                          "name": "ExpressionStatement",
                          "src": "8469:51:0"
                        }
                      ],
                      "id": 580,
                      "name": "Block",
                      "src": "7423:1110:0"
                    }
                  ],
                  "id": 581,
                  "name": "FunctionDefinition",
                  "src": "7382:1151:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "_reAdjustDifficulty",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 582,
                      "name": "ParameterList",
                      "src": "8785:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 583,
                      "name": "ParameterList",
                      "src": "8797:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              585
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "ethBlocksSinceLastDifficultyPeriod",
                                "scope": 699,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 584,
                                  "name": "ElementaryTypeName",
                                  "src": "8809:4:0"
                                }
                              ],
                              "id": 585,
                              "name": "VariableDeclaration",
                              "src": "8809:39:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1117,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 586,
                                      "name": "Identifier",
                                      "src": "8851:5:0"
                                    }
                                  ],
                                  "id": 587,
                                  "name": "MemberAccess",
                                  "src": "8851:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 283,
                                    "type": "uint256",
                                    "value": "latestDifficultyPeriodStarted"
                                  },
                                  "id": 588,
                                  "name": "Identifier",
                                  "src": "8866:29:0"
                                }
                              ],
                              "id": 589,
                              "name": "BinaryOperation",
                              "src": "8851:44:0"
                            }
                          ],
                          "id": 590,
                          "name": "VariableDeclarationStatement",
                          "src": "8809:86:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              592
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "epochsMined",
                                "scope": 699,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 591,
                                  "name": "ElementaryTypeName",
                                  "src": "9066:4:0"
                                }
                              ],
                              "id": 592,
                              "name": "VariableDeclaration",
                              "src": "9066:16:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 288,
                                "type": "uint256",
                                "value": "_BLOCKS_PER_READJUSTMENT"
                              },
                              "id": 593,
                              "name": "Identifier",
                              "src": "9085:24:0"
                            }
                          ],
                          "id": 594,
                          "name": "VariableDeclarationStatement",
                          "src": "9066:43:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              596
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "targetEthBlocksPerDiffPeriod",
                                "scope": 699,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 595,
                                  "name": "ElementaryTypeName",
                                  "src": "9126:4:0"
                                }
                              ],
                              "id": 596,
                              "name": "VariableDeclaration",
                              "src": "9126:33:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "*",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 592,
                                    "type": "uint256",
                                    "value": "epochsMined"
                                  },
                                  "id": 597,
                                  "name": "Identifier",
                                  "src": "9162:11:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3630",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 60",
                                    "value": "60"
                                  },
                                  "id": 598,
                                  "name": "Literal",
                                  "src": "9176:2:0"
                                }
                              ],
                              "id": 599,
                              "name": "BinaryOperation",
                              "src": "9162:16:0"
                            }
                          ],
                          "id": 600,
                          "name": "VariableDeclarationStatement",
                          "src": "9126:52:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "<",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 585,
                                    "type": "uint256",
                                    "value": "ethBlocksSinceLastDifficultyPeriod"
                                  },
                                  "id": 601,
                                  "name": "Identifier",
                                  "src": "9304:34:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 596,
                                    "type": "uint256",
                                    "value": "targetEthBlocksPerDiffPeriod"
                                  },
                                  "id": 602,
                                  "name": "Identifier",
                                  "src": "9341:28:0"
                                }
                              ],
                              "id": 603,
                              "name": "BinaryOperation",
                              "src": "9304:65:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "assignments": [
                                      605
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "excess_block_pct",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 604,
                                          "name": "ElementaryTypeName",
                                          "src": "9392:4:0"
                                        }
                                      ],
                                      "id": 605,
                                      "name": "VariableDeclaration",
                                      "src": "9392:21:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "div",
                                            "referencedDeclaration": 95,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "isStructConstructorCall": false,
                                                    "lValueRequested": false,
                                                    "names": [
                                                      null
                                                    ],
                                                    "type": "uint256",
                                                    "type_conversion": false
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          }
                                                        ],
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "member_name": "mul",
                                                        "referencedDeclaration": 73,
                                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "overloadedDeclarations": [
                                                              null
                                                            ],
                                                            "referencedDeclaration": 596,
                                                            "type": "uint256",
                                                            "value": "targetEthBlocksPerDiffPeriod"
                                                          },
                                                          "id": 606,
                                                          "name": "Identifier",
                                                          "src": "9417:28:0"
                                                        }
                                                      ],
                                                      "id": 607,
                                                      "name": "MemberAccess",
                                                      "src": "9417:32:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "313030",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 100",
                                                        "value": "100"
                                                      },
                                                      "id": 608,
                                                      "name": "Literal",
                                                      "src": "9450:3:0"
                                                    }
                                                  ],
                                                  "id": 609,
                                                  "name": "FunctionCall",
                                                  "src": "9417:37:0"
                                                }
                                              ],
                                              "id": 610,
                                              "name": "TupleExpression",
                                              "src": "9416:39:0"
                                            }
                                          ],
                                          "id": 611,
                                          "name": "MemberAccess",
                                          "src": "9416:43:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 585,
                                            "type": "uint256",
                                            "value": "ethBlocksSinceLastDifficultyPeriod"
                                          },
                                          "id": 612,
                                          "name": "Identifier",
                                          "src": "9461:34:0"
                                        }
                                      ],
                                      "id": 613,
                                      "name": "FunctionCall",
                                      "src": "9416:81:0"
                                    }
                                  ],
                                  "id": 614,
                                  "name": "VariableDeclarationStatement",
                                  "src": "9392:105:0"
                                },
                                {
                                  "attributes": {
                                    "assignments": [
                                      616
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "excess_block_pct_extra",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 615,
                                          "name": "ElementaryTypeName",
                                          "src": "9510:4:0"
                                        }
                                      ],
                                      "id": 616,
                                      "name": "VariableDeclaration",
                                      "src": "9510:27:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1000_by_1",
                                                "typeString": "int_const 1000"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "limitLessThan",
                                            "referencedDeclaration": 114,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "sub",
                                                    "referencedDeclaration": 45,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 605,
                                                        "type": "uint256",
                                                        "value": "excess_block_pct"
                                                      },
                                                      "id": 617,
                                                      "name": "Identifier",
                                                      "src": "9540:16:0"
                                                    }
                                                  ],
                                                  "id": 618,
                                                  "name": "MemberAccess",
                                                  "src": "9540:20:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "313030",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 100",
                                                    "value": "100"
                                                  },
                                                  "id": 619,
                                                  "name": "Literal",
                                                  "src": "9561:3:0"
                                                }
                                              ],
                                              "id": 620,
                                              "name": "FunctionCall",
                                              "src": "9540:25:0"
                                            }
                                          ],
                                          "id": 621,
                                          "name": "MemberAccess",
                                          "src": "9540:39:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "31303030",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 1000",
                                            "value": "1000"
                                          },
                                          "id": 622,
                                          "name": "Literal",
                                          "src": "9580:4:0"
                                        }
                                      ],
                                      "id": 623,
                                      "name": "FunctionCall",
                                      "src": "9540:45:0"
                                    }
                                  ],
                                  "id": 624,
                                  "name": "VariableDeclarationStatement",
                                  "src": "9510:75:0"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 625,
                                          "name": "Identifier",
                                          "src": "9773:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sub",
                                                "referencedDeclaration": 45,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 300,
                                                    "type": "uint256",
                                                    "value": "miningTarget"
                                                  },
                                                  "id": 626,
                                                  "name": "Identifier",
                                                  "src": "9788:12:0"
                                                }
                                              ],
                                              "id": 627,
                                              "name": "MemberAccess",
                                              "src": "9788:16:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "mul",
                                                    "referencedDeclaration": 73,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "isStructConstructorCall": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                          null
                                                        ],
                                                        "type": "uint256",
                                                        "type_conversion": false
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_2000_by_1",
                                                                "typeString": "int_const 2000"
                                                              }
                                                            ],
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "member_name": "div",
                                                            "referencedDeclaration": 95,
                                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                                          },
                                                          "children": [
                                                            {
                                                              "attributes": {
                                                                "argumentTypes": null,
                                                                "overloadedDeclarations": [
                                                                  null
                                                                ],
                                                                "referencedDeclaration": 300,
                                                                "type": "uint256",
                                                                "value": "miningTarget"
                                                              },
                                                              "id": 628,
                                                              "name": "Identifier",
                                                              "src": "9805:12:0"
                                                            }
                                                          ],
                                                          "id": 629,
                                                          "name": "MemberAccess",
                                                          "src": "9805:16:0"
                                                        },
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "hexvalue": "32303030",
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "subdenomination": null,
                                                            "token": "number",
                                                            "type": "int_const 2000",
                                                            "value": "2000"
                                                          },
                                                          "id": 630,
                                                          "name": "Literal",
                                                          "src": "9822:4:0"
                                                        }
                                                      ],
                                                      "id": 631,
                                                      "name": "FunctionCall",
                                                      "src": "9805:22:0"
                                                    }
                                                  ],
                                                  "id": 632,
                                                  "name": "MemberAccess",
                                                  "src": "9805:26:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 616,
                                                    "type": "uint256",
                                                    "value": "excess_block_pct_extra"
                                                  },
                                                  "id": 633,
                                                  "name": "Identifier",
                                                  "src": "9832:22:0"
                                                }
                                              ],
                                              "id": 634,
                                              "name": "FunctionCall",
                                              "src": "9805:50:0"
                                            }
                                          ],
                                          "id": 635,
                                          "name": "FunctionCall",
                                          "src": "9788:68:0"
                                        }
                                      ],
                                      "id": 636,
                                      "name": "Assignment",
                                      "src": "9773:83:0"
                                    }
                                  ],
                                  "id": 637,
                                  "name": "ExpressionStatement",
                                  "src": "9773:83:0"
                                }
                              ],
                              "id": 638,
                              "name": "Block",
                              "src": "9380:505:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "assignments": [
                                      640
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "shortage_block_pct",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 639,
                                          "name": "ElementaryTypeName",
                                          "src": "9901:4:0"
                                        }
                                      ],
                                      "id": 640,
                                      "name": "VariableDeclaration",
                                      "src": "9901:23:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "div",
                                            "referencedDeclaration": 95,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "isStructConstructorCall": false,
                                                    "lValueRequested": false,
                                                    "names": [
                                                      null
                                                    ],
                                                    "type": "uint256",
                                                    "type_conversion": false
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          }
                                                        ],
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "member_name": "mul",
                                                        "referencedDeclaration": 73,
                                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "overloadedDeclarations": [
                                                              null
                                                            ],
                                                            "referencedDeclaration": 585,
                                                            "type": "uint256",
                                                            "value": "ethBlocksSinceLastDifficultyPeriod"
                                                          },
                                                          "id": 641,
                                                          "name": "Identifier",
                                                          "src": "9928:34:0"
                                                        }
                                                      ],
                                                      "id": 642,
                                                      "name": "MemberAccess",
                                                      "src": "9928:38:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "313030",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 100",
                                                        "value": "100"
                                                      },
                                                      "id": 643,
                                                      "name": "Literal",
                                                      "src": "9967:3:0"
                                                    }
                                                  ],
                                                  "id": 644,
                                                  "name": "FunctionCall",
                                                  "src": "9928:43:0"
                                                }
                                              ],
                                              "id": 645,
                                              "name": "TupleExpression",
                                              "src": "9927:45:0"
                                            }
                                          ],
                                          "id": 646,
                                          "name": "MemberAccess",
                                          "src": "9927:49:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 596,
                                            "type": "uint256",
                                            "value": "targetEthBlocksPerDiffPeriod"
                                          },
                                          "id": 647,
                                          "name": "Identifier",
                                          "src": "9978:28:0"
                                        }
                                      ],
                                      "id": 648,
                                      "name": "FunctionCall",
                                      "src": "9927:81:0"
                                    }
                                  ],
                                  "id": 649,
                                  "name": "VariableDeclarationStatement",
                                  "src": "9901:107:0"
                                },
                                {
                                  "attributes": {
                                    "assignments": [
                                      651
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "shortage_block_pct_extra",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 650,
                                          "name": "ElementaryTypeName",
                                          "src": "10021:4:0"
                                        }
                                      ],
                                      "id": 651,
                                      "name": "VariableDeclaration",
                                      "src": "10021:29:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1000_by_1",
                                                "typeString": "int_const 1000"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "limitLessThan",
                                            "referencedDeclaration": 114,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "sub",
                                                    "referencedDeclaration": 45,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 640,
                                                        "type": "uint256",
                                                        "value": "shortage_block_pct"
                                                      },
                                                      "id": 652,
                                                      "name": "Identifier",
                                                      "src": "10053:18:0"
                                                    }
                                                  ],
                                                  "id": 653,
                                                  "name": "MemberAccess",
                                                  "src": "10053:22:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "313030",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 100",
                                                    "value": "100"
                                                  },
                                                  "id": 654,
                                                  "name": "Literal",
                                                  "src": "10076:3:0"
                                                }
                                              ],
                                              "id": 655,
                                              "name": "FunctionCall",
                                              "src": "10053:27:0"
                                            }
                                          ],
                                          "id": 656,
                                          "name": "MemberAccess",
                                          "src": "10053:41:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "31303030",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 1000",
                                            "value": "1000"
                                          },
                                          "id": 657,
                                          "name": "Literal",
                                          "src": "10095:4:0"
                                        }
                                      ],
                                      "id": 658,
                                      "name": "FunctionCall",
                                      "src": "10053:47:0"
                                    }
                                  ],
                                  "id": 659,
                                  "name": "VariableDeclarationStatement",
                                  "src": "10021:79:0"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 660,
                                          "name": "Identifier",
                                          "src": "10168:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "add",
                                                "referencedDeclaration": 23,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 300,
                                                    "type": "uint256",
                                                    "value": "miningTarget"
                                                  },
                                                  "id": 661,
                                                  "name": "Identifier",
                                                  "src": "10183:12:0"
                                                }
                                              ],
                                              "id": 662,
                                              "name": "MemberAccess",
                                              "src": "10183:16:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "mul",
                                                    "referencedDeclaration": 73,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "isStructConstructorCall": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                          null
                                                        ],
                                                        "type": "uint256",
                                                        "type_conversion": false
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_2000_by_1",
                                                                "typeString": "int_const 2000"
                                                              }
                                                            ],
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "member_name": "div",
                                                            "referencedDeclaration": 95,
                                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                                          },
                                                          "children": [
                                                            {
                                                              "attributes": {
                                                                "argumentTypes": null,
                                                                "overloadedDeclarations": [
                                                                  null
                                                                ],
                                                                "referencedDeclaration": 300,
                                                                "type": "uint256",
                                                                "value": "miningTarget"
                                                              },
                                                              "id": 663,
                                                              "name": "Identifier",
                                                              "src": "10200:12:0"
                                                            }
                                                          ],
                                                          "id": 664,
                                                          "name": "MemberAccess",
                                                          "src": "10200:16:0"
                                                        },
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "hexvalue": "32303030",
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "subdenomination": null,
                                                            "token": "number",
                                                            "type": "int_const 2000",
                                                            "value": "2000"
                                                          },
                                                          "id": 665,
                                                          "name": "Literal",
                                                          "src": "10217:4:0"
                                                        }
                                                      ],
                                                      "id": 666,
                                                      "name": "FunctionCall",
                                                      "src": "10200:22:0"
                                                    }
                                                  ],
                                                  "id": 667,
                                                  "name": "MemberAccess",
                                                  "src": "10200:26:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 651,
                                                    "type": "uint256",
                                                    "value": "shortage_block_pct_extra"
                                                  },
                                                  "id": 668,
                                                  "name": "Identifier",
                                                  "src": "10227:24:0"
                                                }
                                              ],
                                              "id": 669,
                                              "name": "FunctionCall",
                                              "src": "10200:52:0"
                                            }
                                          ],
                                          "id": 670,
                                          "name": "FunctionCall",
                                          "src": "10183:70:0"
                                        }
                                      ],
                                      "id": 671,
                                      "name": "Assignment",
                                      "src": "10168:85:0"
                                    }
                                  ],
                                  "id": 672,
                                  "name": "ExpressionStatement",
                                  "src": "10168:85:0"
                                }
                              ],
                              "id": 673,
                              "name": "Block",
                              "src": "9889:393:0"
                            }
                          ],
                          "id": 674,
                          "name": "IfStatement",
                          "src": "9300:982:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 283,
                                    "type": "uint256",
                                    "value": "latestDifficultyPeriodStarted"
                                  },
                                  "id": 675,
                                  "name": "Identifier",
                                  "src": "10294:29:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1117,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 676,
                                      "name": "Identifier",
                                      "src": "10326:5:0"
                                    }
                                  ],
                                  "id": 677,
                                  "name": "MemberAccess",
                                  "src": "10326:12:0"
                                }
                              ],
                              "id": 678,
                              "name": "Assignment",
                              "src": "10294:44:0"
                            }
                          ],
                          "id": 679,
                          "name": "ExpressionStatement",
                          "src": "10294:44:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "<",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 680,
                                  "name": "Identifier",
                                  "src": "10352:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 293,
                                    "type": "uint256",
                                    "value": "_MINIMUM_TARGET"
                                  },
                                  "id": 681,
                                  "name": "Identifier",
                                  "src": "10367:15:0"
                                }
                              ],
                              "id": 682,
                              "name": "BinaryOperation",
                              "src": "10352:30:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 683,
                                          "name": "Identifier",
                                          "src": "10421:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 293,
                                            "type": "uint256",
                                            "value": "_MINIMUM_TARGET"
                                          },
                                          "id": 684,
                                          "name": "Identifier",
                                          "src": "10436:15:0"
                                        }
                                      ],
                                      "id": 685,
                                      "name": "Assignment",
                                      "src": "10421:30:0"
                                    }
                                  ],
                                  "id": 686,
                                  "name": "ExpressionStatement",
                                  "src": "10421:30:0"
                                }
                              ],
                              "id": 687,
                              "name": "Block",
                              "src": "10409:53:0"
                            }
                          ],
                          "id": 688,
                          "name": "IfStatement",
                          "src": "10349:113:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 689,
                                  "name": "Identifier",
                                  "src": "10475:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 298,
                                    "type": "uint256",
                                    "value": "_MAXIMUM_TARGET"
                                  },
                                  "id": 690,
                                  "name": "Identifier",
                                  "src": "10490:15:0"
                                }
                              ],
                              "id": 691,
                              "name": "BinaryOperation",
                              "src": "10475:30:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 692,
                                          "name": "Identifier",
                                          "src": "10539:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 298,
                                            "type": "uint256",
                                            "value": "_MAXIMUM_TARGET"
                                          },
                                          "id": 693,
                                          "name": "Identifier",
                                          "src": "10554:15:0"
                                        }
                                      ],
                                      "id": 694,
                                      "name": "Assignment",
                                      "src": "10539:30:0"
                                    }
                                  ],
                                  "id": 695,
                                  "name": "ExpressionStatement",
                                  "src": "10539:30:0"
                                }
                              ],
                              "id": 696,
                              "name": "Block",
                              "src": "10527:53:0"
                            }
                          ],
                          "id": 697,
                          "name": "IfStatement",
                          "src": "10472:108:0"
                        }
                      ],
                      "id": 698,
                      "name": "Block",
                      "src": "8797:1789:0"
                    }
                  ],
                  "id": 699,
                  "name": "FunctionDefinition",
                  "src": "8757:1829:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getChallengeNumber",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 700,
                      "name": "ParameterList",
                      "src": "10705:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 707,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 701,
                              "name": "ElementaryTypeName",
                              "src": "10733:7:0"
                            }
                          ],
                          "id": 702,
                          "name": "VariableDeclaration",
                          "src": "10733:7:0"
                        }
                      ],
                      "id": 703,
                      "name": "ParameterList",
                      "src": "10732:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 703
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 302,
                                "type": "bytes32",
                                "value": "challengeNumber"
                              },
                              "id": 704,
                              "name": "Identifier",
                              "src": "10759:15:0"
                            }
                          ],
                          "id": 705,
                          "name": "Return",
                          "src": "10752:22:0"
                        }
                      ],
                      "id": 706,
                      "name": "Block",
                      "src": "10742:39:0"
                    }
                  ],
                  "id": 707,
                  "name": "FunctionDefinition",
                  "src": "10678:103:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMiningDifficulty",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 708,
                      "name": "ParameterList",
                      "src": "10898:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 718,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 709,
                              "name": "ElementaryTypeName",
                              "src": "10926:4:0"
                            }
                          ],
                          "id": 710,
                          "name": "VariableDeclaration",
                          "src": "10926:4:0"
                        }
                      ],
                      "id": 711,
                      "name": "ParameterList",
                      "src": "10925:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 711
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "div",
                                    "referencedDeclaration": 95,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 298,
                                        "type": "uint256",
                                        "value": "_MAXIMUM_TARGET"
                                      },
                                      "id": 712,
                                      "name": "Identifier",
                                      "src": "10949:15:0"
                                    }
                                  ],
                                  "id": 713,
                                  "name": "MemberAccess",
                                  "src": "10949:19:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 714,
                                  "name": "Identifier",
                                  "src": "10969:12:0"
                                }
                              ],
                              "id": 715,
                              "name": "FunctionCall",
                              "src": "10949:33:0"
                            }
                          ],
                          "id": 716,
                          "name": "Return",
                          "src": "10942:40:0"
                        }
                      ],
                      "id": 717,
                      "name": "Block",
                      "src": "10932:57:0"
                    }
                  ],
                  "id": 718,
                  "name": "FunctionDefinition",
                  "src": "10870:119:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMiningTarget",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 719,
                      "name": "ParameterList",
                      "src": "11019:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 726,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 720,
                              "name": "ElementaryTypeName",
                              "src": "11047:4:0"
                            }
                          ],
                          "id": 721,
                          "name": "VariableDeclaration",
                          "src": "11047:4:0"
                        }
                      ],
                      "id": 722,
                      "name": "ParameterList",
                      "src": "11046:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 722
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 300,
                                "type": "uint256",
                                "value": "miningTarget"
                              },
                              "id": 723,
                              "name": "Identifier",
                              "src": "11069:12:0"
                            }
                          ],
                          "id": 724,
                          "name": "Return",
                          "src": "11062:19:0"
                        }
                      ],
                      "id": 725,
                      "name": "Block",
                      "src": "11053:34:0"
                    }
                  ],
                  "id": 726,
                  "name": "FunctionDefinition",
                  "src": "10995:92:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMiningReward",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 727,
                      "name": "ParameterList",
                      "src": "11225:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 746,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 728,
                              "name": "ElementaryTypeName",
                              "src": "11253:4:0"
                            }
                          ],
                          "id": 729,
                          "name": "VariableDeclaration",
                          "src": "11253:4:0"
                        }
                      ],
                      "id": 730,
                      "name": "ParameterList",
                      "src": "11252:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 730
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "div",
                                    "referencedDeclaration": 95,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "*",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "3530",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 50",
                                                "value": "50"
                                              },
                                              "id": 731,
                                              "name": "Literal",
                                              "src": "11404:2:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "operator": "**",
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "3130",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 10",
                                                    "value": "10"
                                                  },
                                                  "id": 732,
                                                  "name": "Literal",
                                                  "src": "11409:2:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "isStructConstructorCall": false,
                                                    "lValueRequested": false,
                                                    "names": [
                                                      null
                                                    ],
                                                    "type": "uint256",
                                                    "type_conversion": true
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                          }
                                                        ],
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "type": "type(uint256)",
                                                        "value": "uint"
                                                      },
                                                      "id": 733,
                                                      "name": "ElementaryTypeNameExpression",
                                                      "src": "11413:4:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 279,
                                                        "type": "uint8",
                                                        "value": "decimals"
                                                      },
                                                      "id": 734,
                                                      "name": "Identifier",
                                                      "src": "11418:8:0"
                                                    }
                                                  ],
                                                  "id": 735,
                                                  "name": "FunctionCall",
                                                  "src": "11413:14:0"
                                                }
                                              ],
                                              "id": 736,
                                              "name": "BinaryOperation",
                                              "src": "11409:18:0"
                                            }
                                          ],
                                          "id": 737,
                                          "name": "BinaryOperation",
                                          "src": "11404:23:0"
                                        }
                                      ],
                                      "id": 738,
                                      "name": "TupleExpression",
                                      "src": "11403:26:0"
                                    }
                                  ],
                                  "id": 739,
                                  "name": "MemberAccess",
                                  "src": "11403:30:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "**",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "32",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 2",
                                        "value": "2"
                                      },
                                      "id": 740,
                                      "name": "Literal",
                                      "src": "11435:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 304,
                                        "type": "uint256",
                                        "value": "rewardEra"
                                      },
                                      "id": 741,
                                      "name": "Identifier",
                                      "src": "11438:9:0"
                                    }
                                  ],
                                  "id": 742,
                                  "name": "BinaryOperation",
                                  "src": "11435:12:0"
                                }
                              ],
                              "id": 743,
                              "name": "FunctionCall",
                              "src": "11403:46:0"
                            }
                          ],
                          "id": 744,
                          "name": "Return",
                          "src": "11396:53:0"
                        }
                      ],
                      "id": 745,
                      "name": "Block",
                      "src": "11259:199:0"
                    }
                  ],
                  "id": 746,
                  "name": "FunctionDefinition",
                  "src": "11201:257:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMintDigest",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "nonce",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 747,
                              "name": "ElementaryTypeName",
                              "src": "11520:7:0"
                            }
                          ],
                          "id": 748,
                          "name": "VariableDeclaration",
                          "src": "11520:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_digest",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 749,
                              "name": "ElementaryTypeName",
                              "src": "11535:7:0"
                            }
                          ],
                          "id": 750,
                          "name": "VariableDeclaration",
                          "src": "11535:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_number",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 751,
                              "name": "ElementaryTypeName",
                              "src": "11561:7:0"
                            }
                          ],
                          "id": 752,
                          "name": "VariableDeclaration",
                          "src": "11561:24:0"
                        }
                      ],
                      "id": 753,
                      "name": "ParameterList",
                      "src": "11519:67:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "digesttest",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 754,
                              "name": "ElementaryTypeName",
                              "src": "11608:7:0"
                            }
                          ],
                          "id": 755,
                          "name": "VariableDeclaration",
                          "src": "11608:18:0"
                        }
                      ],
                      "id": 756,
                      "name": "ParameterList",
                      "src": "11607:20:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              758
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "digest",
                                "scope": 769,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 757,
                                  "name": "ElementaryTypeName",
                                  "src": "11639:7:0"
                                }
                              ],
                              "id": 758,
                              "name": "VariableDeclaration",
                              "src": "11639:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bytes32",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1119,
                                    "type": "function () pure returns (bytes32)",
                                    "value": "keccak256"
                                  },
                                  "id": 759,
                                  "name": "Identifier",
                                  "src": "11656:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 752,
                                    "type": "bytes32",
                                    "value": "challenge_number"
                                  },
                                  "id": 760,
                                  "name": "Identifier",
                                  "src": "11666:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 761,
                                      "name": "Identifier",
                                      "src": "11683:3:0"
                                    }
                                  ],
                                  "id": 762,
                                  "name": "MemberAccess",
                                  "src": "11683:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 748,
                                    "type": "uint256",
                                    "value": "nonce"
                                  },
                                  "id": 763,
                                  "name": "Identifier",
                                  "src": "11694:5:0"
                                }
                              ],
                              "id": 764,
                              "name": "FunctionCall",
                              "src": "11656:44:0"
                            }
                          ],
                          "id": 765,
                          "name": "VariableDeclarationStatement",
                          "src": "11639:61:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 756
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 758,
                                "type": "bytes32",
                                "value": "digest"
                              },
                              "id": 766,
                              "name": "Identifier",
                              "src": "11718:6:0"
                            }
                          ],
                          "id": 767,
                          "name": "Return",
                          "src": "11711:13:0"
                        }
                      ],
                      "id": 768,
                      "name": "Block",
                      "src": "11628:106:0"
                    }
                  ],
                  "id": 769,
                  "name": "FunctionDefinition",
                  "src": "11497:237:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "checkMintSolution",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "nonce",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 770,
                              "name": "ElementaryTypeName",
                              "src": "11806:7:0"
                            }
                          ],
                          "id": 771,
                          "name": "VariableDeclaration",
                          "src": "11806:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_digest",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 772,
                              "name": "ElementaryTypeName",
                              "src": "11821:7:0"
                            }
                          ],
                          "id": 773,
                          "name": "VariableDeclaration",
                          "src": "11821:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_number",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 774,
                              "name": "ElementaryTypeName",
                              "src": "11847:7:0"
                            }
                          ],
                          "id": 775,
                          "name": "VariableDeclaration",
                          "src": "11847:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "testTarget",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 776,
                              "name": "ElementaryTypeName",
                              "src": "11873:4:0"
                            }
                          ],
                          "id": 777,
                          "name": "VariableDeclaration",
                          "src": "11873:15:0"
                        }
                      ],
                      "id": 778,
                      "name": "ParameterList",
                      "src": "11805:84:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 779,
                              "name": "ElementaryTypeName",
                              "src": "11911:4:0"
                            }
                          ],
                          "id": 780,
                          "name": "VariableDeclaration",
                          "src": "11911:12:0"
                        }
                      ],
                      "id": 781,
                      "name": "ParameterList",
                      "src": "11910:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              783
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "digest",
                                "scope": 806,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 782,
                                  "name": "ElementaryTypeName",
                                  "src": "11938:7:0"
                                }
                              ],
                              "id": 783,
                              "name": "VariableDeclaration",
                              "src": "11938:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bytes32",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1119,
                                    "type": "function () pure returns (bytes32)",
                                    "value": "keccak256"
                                  },
                                  "id": 784,
                                  "name": "Identifier",
                                  "src": "11955:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 775,
                                    "type": "bytes32",
                                    "value": "challenge_number"
                                  },
                                  "id": 785,
                                  "name": "Identifier",
                                  "src": "11965:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 786,
                                      "name": "Identifier",
                                      "src": "11982:3:0"
                                    }
                                  ],
                                  "id": 787,
                                  "name": "MemberAccess",
                                  "src": "11982:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 771,
                                    "type": "uint256",
                                    "value": "nonce"
                                  },
                                  "id": 788,
                                  "name": "Identifier",
                                  "src": "11993:5:0"
                                }
                              ],
                              "id": 789,
                              "name": "FunctionCall",
                              "src": "11955:44:0"
                            }
                          ],
                          "id": 790,
                          "name": "VariableDeclarationStatement",
                          "src": "11938:61:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(uint256)",
                                        "value": "uint256"
                                      },
                                      "id": 791,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "12015:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 783,
                                        "type": "bytes32",
                                        "value": "digest"
                                      },
                                      "id": 792,
                                      "name": "Identifier",
                                      "src": "12023:6:0"
                                    }
                                  ],
                                  "id": 793,
                                  "name": "FunctionCall",
                                  "src": "12015:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 777,
                                    "type": "uint256",
                                    "value": "testTarget"
                                  },
                                  "id": 794,
                                  "name": "Identifier",
                                  "src": "12033:10:0"
                                }
                              ],
                              "id": 795,
                              "name": "BinaryOperation",
                              "src": "12015:28:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1129,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 796,
                                      "name": "Identifier",
                                      "src": "12045:6:0"
                                    }
                                  ],
                                  "id": 797,
                                  "name": "FunctionCall",
                                  "src": "12045:8:0"
                                }
                              ],
                              "id": 798,
                              "name": "ExpressionStatement",
                              "src": "12045:8:0"
                            }
                          ],
                          "id": 799,
                          "name": "IfStatement",
                          "src": "12012:41:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 781
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 783,
                                        "type": "bytes32",
                                        "value": "digest"
                                      },
                                      "id": 800,
                                      "name": "Identifier",
                                      "src": "12074:6:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 773,
                                        "type": "bytes32",
                                        "value": "challenge_digest"
                                      },
                                      "id": 801,
                                      "name": "Identifier",
                                      "src": "12084:16:0"
                                    }
                                  ],
                                  "id": 802,
                                  "name": "BinaryOperation",
                                  "src": "12074:26:0"
                                }
                              ],
                              "id": 803,
                              "name": "TupleExpression",
                              "src": "12073:28:0"
                            }
                          ],
                          "id": 804,
                          "name": "Return",
                          "src": "12066:35:0"
                        }
                      ],
                      "id": 805,
                      "name": "Block",
                      "src": "11925:188:0"
                    }
                  ],
                  "id": 806,
                  "name": "FunctionDefinition",
                  "src": "11779:334:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": 120,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 807,
                      "name": "ParameterList",
                      "src": "12324:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 820,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 808,
                              "name": "ElementaryTypeName",
                              "src": "12352:4:0"
                            }
                          ],
                          "id": 809,
                          "name": "VariableDeclaration",
                          "src": "12352:4:0"
                        }
                      ],
                      "id": 810,
                      "name": "ParameterList",
                      "src": "12351:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 810
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 281,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 811,
                                  "name": "Identifier",
                                  "src": "12376:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 812,
                                      "name": "Identifier",
                                      "src": "12392:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "address",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "type": "type(address)",
                                            "value": "address"
                                          },
                                          "id": 813,
                                          "name": "ElementaryTypeNameExpression",
                                          "src": "12401:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "30",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 0",
                                            "value": "0"
                                          },
                                          "id": 814,
                                          "name": "Literal",
                                          "src": "12409:1:0"
                                        }
                                      ],
                                      "id": 815,
                                      "name": "FunctionCall",
                                      "src": "12401:10:0"
                                    }
                                  ],
                                  "id": 816,
                                  "name": "IndexAccess",
                                  "src": "12392:20:0"
                                }
                              ],
                              "id": 817,
                              "name": "BinaryOperation",
                              "src": "12376:36:0"
                            }
                          ],
                          "id": 818,
                          "name": "Return",
                          "src": "12369:43:0"
                        }
                      ],
                      "id": 819,
                      "name": "Block",
                      "src": "12358:62:0"
                    }
                  ],
                  "id": 820,
                  "name": "FunctionDefinition",
                  "src": "12304:116:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": 127,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 832,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 821,
                              "name": "ElementaryTypeName",
                              "src": "12664:7:0"
                            }
                          ],
                          "id": 822,
                          "name": "VariableDeclaration",
                          "src": "12664:18:0"
                        }
                      ],
                      "id": 823,
                      "name": "ParameterList",
                      "src": "12663:20:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "balance",
                            "scope": 832,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 824,
                              "name": "ElementaryTypeName",
                              "src": "12709:4:0"
                            }
                          ],
                          "id": 825,
                          "name": "VariableDeclaration",
                          "src": "12709:12:0"
                        }
                      ],
                      "id": 826,
                      "name": "ParameterList",
                      "src": "12708:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 826
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 325,
                                    "type": "mapping(address => uint256)",
                                    "value": "balances"
                                  },
                                  "id": 827,
                                  "name": "Identifier",
                                  "src": "12741:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 822,
                                    "type": "address",
                                    "value": "tokenOwner"
                                  },
                                  "id": 828,
                                  "name": "Identifier",
                                  "src": "12750:10:0"
                                }
                              ],
                              "id": 829,
                              "name": "IndexAccess",
                              "src": "12741:20:0"
                            }
                          ],
                          "id": 830,
                          "name": "Return",
                          "src": "12734:27:0"
                        }
                      ],
                      "id": 831,
                      "name": "Block",
                      "src": "12723:46:0"
                    }
                  ],
                  "id": 832,
                  "name": "FunctionDefinition",
                  "src": "12645:124:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transfer",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": 145,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 875,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 833,
                              "name": "ElementaryTypeName",
                              "src": "13136:7:0"
                            }
                          ],
                          "id": 834,
                          "name": "VariableDeclaration",
                          "src": "13136:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 875,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 835,
                              "name": "ElementaryTypeName",
                              "src": "13148:4:0"
                            }
                          ],
                          "id": 836,
                          "name": "VariableDeclaration",
                          "src": "13148:11:0"
                        }
                      ],
                      "id": 837,
                      "name": "ParameterList",
                      "src": "13135:25:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 875,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 838,
                              "name": "ElementaryTypeName",
                              "src": "13177:4:0"
                            }
                          ],
                          "id": 839,
                          "name": "VariableDeclaration",
                          "src": "13177:12:0"
                        }
                      ],
                      "id": 840,
                      "name": "ParameterList",
                      "src": "13176:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 841,
                                      "name": "Identifier",
                                      "src": "13202:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1125,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 842,
                                          "name": "Identifier",
                                          "src": "13211:3:0"
                                        }
                                      ],
                                      "id": 843,
                                      "name": "MemberAccess",
                                      "src": "13211:10:0"
                                    }
                                  ],
                                  "id": 844,
                                  "name": "IndexAccess",
                                  "src": "13202:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 45,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 845,
                                              "name": "Identifier",
                                              "src": "13225:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1125,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 846,
                                                  "name": "Identifier",
                                                  "src": "13234:3:0"
                                                }
                                              ],
                                              "id": 847,
                                              "name": "MemberAccess",
                                              "src": "13234:10:0"
                                            }
                                          ],
                                          "id": 848,
                                          "name": "IndexAccess",
                                          "src": "13225:20:0"
                                        }
                                      ],
                                      "id": 849,
                                      "name": "MemberAccess",
                                      "src": "13225:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 836,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 850,
                                      "name": "Identifier",
                                      "src": "13250:6:0"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "FunctionCall",
                                  "src": "13225:32:0"
                                }
                              ],
                              "id": 852,
                              "name": "Assignment",
                              "src": "13202:55:0"
                            }
                          ],
                          "id": 853,
                          "name": "ExpressionStatement",
                          "src": "13202:55:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 854,
                                      "name": "Identifier",
                                      "src": "13268:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 834,
                                        "type": "address",
                                        "value": "to"
                                      },
                                      "id": 855,
                                      "name": "Identifier",
                                      "src": "13277:2:0"
                                    }
                                  ],
                                  "id": 856,
                                  "name": "IndexAccess",
                                  "src": "13268:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 857,
                                              "name": "Identifier",
                                              "src": "13283:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 834,
                                                "type": "address",
                                                "value": "to"
                                              },
                                              "id": 858,
                                              "name": "Identifier",
                                              "src": "13292:2:0"
                                            }
                                          ],
                                          "id": 859,
                                          "name": "IndexAccess",
                                          "src": "13283:12:0"
                                        }
                                      ],
                                      "id": 860,
                                      "name": "MemberAccess",
                                      "src": "13283:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 836,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 861,
                                      "name": "Identifier",
                                      "src": "13300:6:0"
                                    }
                                  ],
                                  "id": 862,
                                  "name": "FunctionCall",
                                  "src": "13283:24:0"
                                }
                              ],
                              "id": 863,
                              "name": "Assignment",
                              "src": "13268:39:0"
                            }
                          ],
                          "id": 864,
                          "name": "ExpressionStatement",
                          "src": "13268:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 173,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 865,
                                  "name": "Identifier",
                                  "src": "13318:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 866,
                                      "name": "Identifier",
                                      "src": "13327:3:0"
                                    }
                                  ],
                                  "id": 867,
                                  "name": "MemberAccess",
                                  "src": "13327:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 834,
                                    "type": "address",
                                    "value": "to"
                                  },
                                  "id": 868,
                                  "name": "Identifier",
                                  "src": "13339:2:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 836,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 869,
                                  "name": "Identifier",
                                  "src": "13343:6:0"
                                }
                              ],
                              "id": 870,
                              "name": "FunctionCall",
                              "src": "13318:32:0"
                            }
                          ],
                          "id": 871,
                          "name": "ExpressionStatement",
                          "src": "13318:32:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 840
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 872,
                              "name": "Literal",
                              "src": "13368:4:0"
                            }
                          ],
                          "id": 873,
                          "name": "Return",
                          "src": "13361:11:0"
                        }
                      ],
                      "id": 874,
                      "name": "Block",
                      "src": "13191:189:0"
                    }
                  ],
                  "id": 875,
                  "name": "FunctionDefinition",
                  "src": "13118:262:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approve",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": 154,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 903,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 876,
                              "name": "ElementaryTypeName",
                              "src": "13911:7:0"
                            }
                          ],
                          "id": 877,
                          "name": "VariableDeclaration",
                          "src": "13911:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 903,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 878,
                              "name": "ElementaryTypeName",
                              "src": "13928:4:0"
                            }
                          ],
                          "id": 879,
                          "name": "VariableDeclaration",
                          "src": "13928:11:0"
                        }
                      ],
                      "id": 880,
                      "name": "ParameterList",
                      "src": "13910:30:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 903,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 881,
                              "name": "ElementaryTypeName",
                              "src": "13957:4:0"
                            }
                          ],
                          "id": 882,
                          "name": "VariableDeclaration",
                          "src": "13957:12:0"
                        }
                      ],
                      "id": 883,
                      "name": "ParameterList",
                      "src": "13956:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 331,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 884,
                                          "name": "Identifier",
                                          "src": "13982:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1125,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 885,
                                              "name": "Identifier",
                                              "src": "13990:3:0"
                                            }
                                          ],
                                          "id": 886,
                                          "name": "MemberAccess",
                                          "src": "13990:10:0"
                                        }
                                      ],
                                      "id": 888,
                                      "name": "IndexAccess",
                                      "src": "13982:19:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 877,
                                        "type": "address",
                                        "value": "spender"
                                      },
                                      "id": 887,
                                      "name": "Identifier",
                                      "src": "14002:7:0"
                                    }
                                  ],
                                  "id": 889,
                                  "name": "IndexAccess",
                                  "src": "13982:28:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 879,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 890,
                                  "name": "Identifier",
                                  "src": "14013:6:0"
                                }
                              ],
                              "id": 891,
                              "name": "Assignment",
                              "src": "13982:37:0"
                            }
                          ],
                          "id": 892,
                          "name": "ExpressionStatement",
                          "src": "13982:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 181,
                                    "type": "function (address,address,uint256)",
                                    "value": "Approval"
                                  },
                                  "id": 893,
                                  "name": "Identifier",
                                  "src": "14030:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 894,
                                      "name": "Identifier",
                                      "src": "14039:3:0"
                                    }
                                  ],
                                  "id": 895,
                                  "name": "MemberAccess",
                                  "src": "14039:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 877,
                                    "type": "address",
                                    "value": "spender"
                                  },
                                  "id": 896,
                                  "name": "Identifier",
                                  "src": "14051:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 879,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 897,
                                  "name": "Identifier",
                                  "src": "14060:6:0"
                                }
                              ],
                              "id": 898,
                              "name": "FunctionCall",
                              "src": "14030:37:0"
                            }
                          ],
                          "id": 899,
                          "name": "ExpressionStatement",
                          "src": "14030:37:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 883
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 900,
                              "name": "Literal",
                              "src": "14085:4:0"
                            }
                          ],
                          "id": 901,
                          "name": "Return",
                          "src": "14078:11:0"
                        }
                      ],
                      "id": 902,
                      "name": "Block",
                      "src": "13971:126:0"
                    }
                  ],
                  "id": 903,
                  "name": "FunctionDefinition",
                  "src": "13894:203:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": 165,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 904,
                              "name": "ElementaryTypeName",
                              "src": "14660:7:0"
                            }
                          ],
                          "id": 905,
                          "name": "VariableDeclaration",
                          "src": "14660:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 906,
                              "name": "ElementaryTypeName",
                              "src": "14674:7:0"
                            }
                          ],
                          "id": 907,
                          "name": "VariableDeclaration",
                          "src": "14674:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 908,
                              "name": "ElementaryTypeName",
                              "src": "14686:4:0"
                            }
                          ],
                          "id": 909,
                          "name": "VariableDeclaration",
                          "src": "14686:11:0"
                        }
                      ],
                      "id": 910,
                      "name": "ParameterList",
                      "src": "14659:39:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 911,
                              "name": "ElementaryTypeName",
                              "src": "14715:4:0"
                            }
                          ],
                          "id": 912,
                          "name": "VariableDeclaration",
                          "src": "14715:12:0"
                        }
                      ],
                      "id": 913,
                      "name": "ParameterList",
                      "src": "14714:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 914,
                                      "name": "Identifier",
                                      "src": "14740:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 905,
                                        "type": "address",
                                        "value": "from"
                                      },
                                      "id": 915,
                                      "name": "Identifier",
                                      "src": "14749:4:0"
                                    }
                                  ],
                                  "id": 916,
                                  "name": "IndexAccess",
                                  "src": "14740:14:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 45,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 917,
                                              "name": "Identifier",
                                              "src": "14757:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 905,
                                                "type": "address",
                                                "value": "from"
                                              },
                                              "id": 918,
                                              "name": "Identifier",
                                              "src": "14766:4:0"
                                            }
                                          ],
                                          "id": 919,
                                          "name": "IndexAccess",
                                          "src": "14757:14:0"
                                        }
                                      ],
                                      "id": 920,
                                      "name": "MemberAccess",
                                      "src": "14757:18:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 909,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 921,
                                      "name": "Identifier",
                                      "src": "14776:6:0"
                                    }
                                  ],
                                  "id": 922,
                                  "name": "FunctionCall",
                                  "src": "14757:26:0"
                                }
                              ],
                              "id": 923,
                              "name": "Assignment",
                              "src": "14740:43:0"
                            }
                          ],
                          "id": 924,
                          "name": "ExpressionStatement",
                          "src": "14740:43:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 331,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 925,
                                          "name": "Identifier",
                                          "src": "14794:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 905,
                                            "type": "address",
                                            "value": "from"
                                          },
                                          "id": 926,
                                          "name": "Identifier",
                                          "src": "14802:4:0"
                                        }
                                      ],
                                      "id": 929,
                                      "name": "IndexAccess",
                                      "src": "14794:13:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1125,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 927,
                                          "name": "Identifier",
                                          "src": "14808:3:0"
                                        }
                                      ],
                                      "id": 928,
                                      "name": "MemberAccess",
                                      "src": "14808:10:0"
                                    }
                                  ],
                                  "id": 930,
                                  "name": "IndexAccess",
                                  "src": "14794:25:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 45,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "mapping(address => uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 331,
                                                    "type": "mapping(address => mapping(address => uint256))",
                                                    "value": "allowed"
                                                  },
                                                  "id": 931,
                                                  "name": "Identifier",
                                                  "src": "14822:7:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 905,
                                                    "type": "address",
                                                    "value": "from"
                                                  },
                                                  "id": 932,
                                                  "name": "Identifier",
                                                  "src": "14830:4:0"
                                                }
                                              ],
                                              "id": 933,
                                              "name": "IndexAccess",
                                              "src": "14822:13:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1125,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 934,
                                                  "name": "Identifier",
                                                  "src": "14836:3:0"
                                                }
                                              ],
                                              "id": 935,
                                              "name": "MemberAccess",
                                              "src": "14836:10:0"
                                            }
                                          ],
                                          "id": 936,
                                          "name": "IndexAccess",
                                          "src": "14822:25:0"
                                        }
                                      ],
                                      "id": 937,
                                      "name": "MemberAccess",
                                      "src": "14822:29:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 909,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 938,
                                      "name": "Identifier",
                                      "src": "14852:6:0"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "FunctionCall",
                                  "src": "14822:37:0"
                                }
                              ],
                              "id": 940,
                              "name": "Assignment",
                              "src": "14794:65:0"
                            }
                          ],
                          "id": 941,
                          "name": "ExpressionStatement",
                          "src": "14794:65:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 942,
                                      "name": "Identifier",
                                      "src": "14870:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 907,
                                        "type": "address",
                                        "value": "to"
                                      },
                                      "id": 943,
                                      "name": "Identifier",
                                      "src": "14879:2:0"
                                    }
                                  ],
                                  "id": 944,
                                  "name": "IndexAccess",
                                  "src": "14870:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 945,
                                              "name": "Identifier",
                                              "src": "14885:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 907,
                                                "type": "address",
                                                "value": "to"
                                              },
                                              "id": 946,
                                              "name": "Identifier",
                                              "src": "14894:2:0"
                                            }
                                          ],
                                          "id": 947,
                                          "name": "IndexAccess",
                                          "src": "14885:12:0"
                                        }
                                      ],
                                      "id": 948,
                                      "name": "MemberAccess",
                                      "src": "14885:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 909,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 949,
                                      "name": "Identifier",
                                      "src": "14902:6:0"
                                    }
                                  ],
                                  "id": 950,
                                  "name": "FunctionCall",
                                  "src": "14885:24:0"
                                }
                              ],
                              "id": 951,
                              "name": "Assignment",
                              "src": "14870:39:0"
                            }
                          ],
                          "id": 952,
                          "name": "ExpressionStatement",
                          "src": "14870:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 173,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 953,
                                  "name": "Identifier",
                                  "src": "14920:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 905,
                                    "type": "address",
                                    "value": "from"
                                  },
                                  "id": 954,
                                  "name": "Identifier",
                                  "src": "14929:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 907,
                                    "type": "address",
                                    "value": "to"
                                  },
                                  "id": 955,
                                  "name": "Identifier",
                                  "src": "14935:2:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 909,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 956,
                                  "name": "Identifier",
                                  "src": "14939:6:0"
                                }
                              ],
                              "id": 957,
                              "name": "FunctionCall",
                              "src": "14920:26:0"
                            }
                          ],
                          "id": 958,
                          "name": "ExpressionStatement",
                          "src": "14920:26:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 913
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 959,
                              "name": "Literal",
                              "src": "14964:4:0"
                            }
                          ],
                          "id": 960,
                          "name": "Return",
                          "src": "14957:11:0"
                        }
                      ],
                      "id": 961,
                      "name": "Block",
                      "src": "14729:247:0"
                    }
                  ],
                  "id": 962,
                  "name": "FunctionDefinition",
                  "src": "14638:338:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": 136,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 978,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 963,
                              "name": "ElementaryTypeName",
                              "src": "15281:7:0"
                            }
                          ],
                          "id": 964,
                          "name": "VariableDeclaration",
                          "src": "15281:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 978,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 965,
                              "name": "ElementaryTypeName",
                              "src": "15301:7:0"
                            }
                          ],
                          "id": 966,
                          "name": "VariableDeclaration",
                          "src": "15301:15:0"
                        }
                      ],
                      "id": 967,
                      "name": "ParameterList",
                      "src": "15280:37:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "remaining",
                            "scope": 978,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 968,
                              "name": "ElementaryTypeName",
                              "src": "15343:4:0"
                            }
                          ],
                          "id": 969,
                          "name": "VariableDeclaration",
                          "src": "15343:14:0"
                        }
                      ],
                      "id": 970,
                      "name": "ParameterList",
                      "src": "15342:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 970
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "mapping(address => uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 331,
                                        "type": "mapping(address => mapping(address => uint256))",
                                        "value": "allowed"
                                      },
                                      "id": 971,
                                      "name": "Identifier",
                                      "src": "15377:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 964,
                                        "type": "address",
                                        "value": "tokenOwner"
                                      },
                                      "id": 972,
                                      "name": "Identifier",
                                      "src": "15385:10:0"
                                    }
                                  ],
                                  "id": 973,
                                  "name": "IndexAccess",
                                  "src": "15377:19:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 966,
                                    "type": "address",
                                    "value": "spender"
                                  },
                                  "id": 974,
                                  "name": "Identifier",
                                  "src": "15397:7:0"
                                }
                              ],
                              "id": 975,
                              "name": "IndexAccess",
                              "src": "15377:28:0"
                            }
                          ],
                          "id": 976,
                          "name": "Return",
                          "src": "15370:35:0"
                        }
                      ],
                      "id": 977,
                      "name": "Block",
                      "src": "15359:54:0"
                    }
                  ],
                  "id": 978,
                  "name": "FunctionDefinition",
                  "src": "15262:151:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approveAndCall",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 979,
                              "name": "ElementaryTypeName",
                              "src": "15803:7:0"
                            }
                          ],
                          "id": 980,
                          "name": "VariableDeclaration",
                          "src": "15803:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 981,
                              "name": "ElementaryTypeName",
                              "src": "15820:4:0"
                            }
                          ],
                          "id": 982,
                          "name": "VariableDeclaration",
                          "src": "15820:11:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "data",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes memory",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes",
                                "type": "bytes storage pointer"
                              },
                              "id": 983,
                              "name": "ElementaryTypeName",
                              "src": "15833:5:0"
                            }
                          ],
                          "id": 984,
                          "name": "VariableDeclaration",
                          "src": "15833:10:0"
                        }
                      ],
                      "id": 985,
                      "name": "ParameterList",
                      "src": "15802:42:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 986,
                              "name": "ElementaryTypeName",
                              "src": "15861:4:0"
                            }
                          ],
                          "id": 987,
                          "name": "VariableDeclaration",
                          "src": "15861:12:0"
                        }
                      ],
                      "id": 988,
                      "name": "ParameterList",
                      "src": "15860:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 331,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 989,
                                          "name": "Identifier",
                                          "src": "15886:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1125,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 990,
                                              "name": "Identifier",
                                              "src": "15894:3:0"
                                            }
                                          ],
                                          "id": 991,
                                          "name": "MemberAccess",
                                          "src": "15894:10:0"
                                        }
                                      ],
                                      "id": 993,
                                      "name": "IndexAccess",
                                      "src": "15886:19:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 980,
                                        "type": "address",
                                        "value": "spender"
                                      },
                                      "id": 992,
                                      "name": "Identifier",
                                      "src": "15906:7:0"
                                    }
                                  ],
                                  "id": 994,
                                  "name": "IndexAccess",
                                  "src": "15886:28:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 982,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 995,
                                  "name": "Identifier",
                                  "src": "15917:6:0"
                                }
                              ],
                              "id": 996,
                              "name": "Assignment",
                              "src": "15886:37:0"
                            }
                          ],
                          "id": 997,
                          "name": "ExpressionStatement",
                          "src": "15886:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 181,
                                    "type": "function (address,address,uint256)",
                                    "value": "Approval"
                                  },
                                  "id": 998,
                                  "name": "Identifier",
                                  "src": "15934:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 999,
                                      "name": "Identifier",
                                      "src": "15943:3:0"
                                    }
                                  ],
                                  "id": 1000,
                                  "name": "MemberAccess",
                                  "src": "15943:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 980,
                                    "type": "address",
                                    "value": "spender"
                                  },
                                  "id": 1001,
                                  "name": "Identifier",
                                  "src": "15955:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 982,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 1002,
                                  "name": "Identifier",
                                  "src": "15964:6:0"
                                }
                              ],
                              "id": 1003,
                              "name": "FunctionCall",
                              "src": "15934:37:0"
                            }
                          ],
                          "id": 1004,
                          "name": "ExpressionStatement",
                          "src": "15934:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_contract$__0xBitcoinToken_$1113",
                                        "typeString": "contract _0xBitcoinToken"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "receiveApproval",
                                    "referencedDeclaration": 193,
                                    "type": "function (address,uint256,address,bytes memory) external"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "contract ApproveAndCallFallBack",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 194,
                                            "type": "type(contract ApproveAndCallFallBack)",
                                            "value": "ApproveAndCallFallBack"
                                          },
                                          "id": 1005,
                                          "name": "Identifier",
                                          "src": "15982:22:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 980,
                                            "type": "address",
                                            "value": "spender"
                                          },
                                          "id": 1006,
                                          "name": "Identifier",
                                          "src": "16005:7:0"
                                        }
                                      ],
                                      "id": 1007,
                                      "name": "FunctionCall",
                                      "src": "15982:31:0"
                                    }
                                  ],
                                  "id": 1008,
                                  "name": "MemberAccess",
                                  "src": "15982:47:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1009,
                                      "name": "Identifier",
                                      "src": "16030:3:0"
                                    }
                                  ],
                                  "id": 1010,
                                  "name": "MemberAccess",
                                  "src": "16030:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 982,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 1011,
                                  "name": "Identifier",
                                  "src": "16042:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1146,
                                    "type": "contract _0xBitcoinToken",
                                    "value": "this"
                                  },
                                  "id": 1012,
                                  "name": "Identifier",
                                  "src": "16050:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 984,
                                    "type": "bytes memory",
                                    "value": "data"
                                  },
                                  "id": 1013,
                                  "name": "Identifier",
                                  "src": "16056:4:0"
                                }
                              ],
                              "id": 1014,
                              "name": "FunctionCall",
                              "src": "15982:79:0"
                            }
                          ],
                          "id": 1015,
                          "name": "ExpressionStatement",
                          "src": "15982:79:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 988
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 1016,
                              "name": "Literal",
                              "src": "16079:4:0"
                            }
                          ],
                          "id": 1017,
                          "name": "Return",
                          "src": "16072:11:0"
                        }
                      ],
                      "id": 1018,
                      "name": "Block",
                      "src": "15875:216:0"
                    }
                  ],
                  "id": 1019,
                  "name": "FunctionDefinition",
                  "src": "15779:312:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "",
                    "payable": true,
                    "scope": 1113,
                    "stateMutability": "payable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1020,
                      "name": "ParameterList",
                      "src": "16295:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1021,
                      "name": "ParameterList",
                      "src": "16313:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1129,
                                    "type": "function () pure",
                                    "value": "revert"
                                  },
                                  "id": 1022,
                                  "name": "Identifier",
                                  "src": "16324:6:0"
                                }
                              ],
                              "id": 1023,
                              "name": "FunctionCall",
                              "src": "16324:8:0"
                            }
                          ],
                          "id": 1024,
                          "name": "ExpressionStatement",
                          "src": "16324:8:0"
                        }
                      ],
                      "id": 1025,
                      "name": "Block",
                      "src": "16313:27:0"
                    }
                  ],
                  "id": 1026,
                  "name": "FunctionDefinition",
                  "src": "16286:54:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferAnyERC20Token",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenAddress",
                            "scope": 1046,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1027,
                              "name": "ElementaryTypeName",
                              "src": "16607:7:0"
                            }
                          ],
                          "id": 1028,
                          "name": "VariableDeclaration",
                          "src": "16607:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 1046,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1029,
                              "name": "ElementaryTypeName",
                              "src": "16629:4:0"
                            }
                          ],
                          "id": 1030,
                          "name": "VariableDeclaration",
                          "src": "16629:11:0"
                        }
                      ],
                      "id": 1031,
                      "name": "ParameterList",
                      "src": "16606:35:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 1046,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1034,
                              "name": "ElementaryTypeName",
                              "src": "16668:4:0"
                            }
                          ],
                          "id": 1035,
                          "name": "VariableDeclaration",
                          "src": "16668:12:0"
                        }
                      ],
                      "id": 1036,
                      "name": "ParameterList",
                      "src": "16667:14:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 224,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 1032,
                          "name": "Identifier",
                          "src": "16649:9:0"
                        }
                      ],
                      "id": 1033,
                      "name": "ModifierInvocation",
                      "src": "16649:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 1036
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bool",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "transfer",
                                    "referencedDeclaration": 145,
                                    "type": "function (address,uint256) external returns (bool)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "contract ERC20Interface",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 182,
                                            "type": "type(contract ERC20Interface)",
                                            "value": "ERC20Interface"
                                          },
                                          "id": 1037,
                                          "name": "Identifier",
                                          "src": "16700:14:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1028,
                                            "type": "address",
                                            "value": "tokenAddress"
                                          },
                                          "id": 1038,
                                          "name": "Identifier",
                                          "src": "16715:12:0"
                                        }
                                      ],
                                      "id": 1039,
                                      "name": "FunctionCall",
                                      "src": "16700:28:0"
                                    }
                                  ],
                                  "id": 1040,
                                  "name": "MemberAccess",
                                  "src": "16700:37:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 1041,
                                  "name": "Identifier",
                                  "src": "16738:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1030,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 1042,
                                  "name": "Identifier",
                                  "src": "16745:6:0"
                                }
                              ],
                              "id": 1043,
                              "name": "FunctionCall",
                              "src": "16700:52:0"
                            }
                          ],
                          "id": 1044,
                          "name": "Return",
                          "src": "16693:59:0"
                        }
                      ],
                      "id": 1045,
                      "name": "Block",
                      "src": "16682:78:0"
                    }
                  ],
                  "id": 1046,
                  "name": "FunctionDefinition",
                  "src": "16576:184:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "setTokensMinted",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "amt",
                            "scope": 1056,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1047,
                              "name": "ElementaryTypeName",
                              "src": "17013:4:0"
                            }
                          ],
                          "id": 1048,
                          "name": "VariableDeclaration",
                          "src": "17013:8:0"
                        }
                      ],
                      "id": 1049,
                      "name": "ParameterList",
                      "src": "17012:10:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1050,
                      "name": "ParameterList",
                      "src": "17032:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 1051,
                                  "name": "Identifier",
                                  "src": "17042:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1048,
                                    "type": "uint256",
                                    "value": "amt"
                                  },
                                  "id": 1052,
                                  "name": "Identifier",
                                  "src": "17057:3:0"
                                }
                              ],
                              "id": 1053,
                              "name": "Assignment",
                              "src": "17042:18:0"
                            }
                          ],
                          "id": 1054,
                          "name": "ExpressionStatement",
                          "src": "17042:18:0"
                        }
                      ],
                      "id": 1055,
                      "name": "Block",
                      "src": "17032:35:0"
                    }
                  ],
                  "id": 1056,
                  "name": "FunctionDefinition",
                  "src": "16988:79:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mintWithoutPoW",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1057,
                      "name": "ParameterList",
                      "src": "17097:3:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 1112,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1058,
                              "name": "ElementaryTypeName",
                              "src": "17117:4:0"
                            }
                          ],
                          "id": 1059,
                          "name": "VariableDeclaration",
                          "src": "17117:12:0"
                        }
                      ],
                      "id": 1060,
                      "name": "ParameterList",
                      "src": "17116:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              1062
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "reward_amount",
                                "scope": 1112,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 1061,
                                  "name": "ElementaryTypeName",
                                  "src": "17867:4:0"
                                }
                              ],
                              "id": 1062,
                              "name": "VariableDeclaration",
                              "src": "17867:18:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 746,
                                    "type": "function () view returns (uint256)",
                                    "value": "getMiningReward"
                                  },
                                  "id": 1063,
                                  "name": "Identifier",
                                  "src": "17888:15:0"
                                }
                              ],
                              "id": 1064,
                              "name": "FunctionCall",
                              "src": "17888:17:0"
                            }
                          ],
                          "id": 1065,
                          "name": "VariableDeclarationStatement",
                          "src": "17867:38:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 1066,
                                      "name": "Identifier",
                                      "src": "17916:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1125,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 1067,
                                          "name": "Identifier",
                                          "src": "17925:3:0"
                                        }
                                      ],
                                      "id": 1068,
                                      "name": "MemberAccess",
                                      "src": "17925:10:0"
                                    }
                                  ],
                                  "id": 1069,
                                  "name": "IndexAccess",
                                  "src": "17916:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 1070,
                                              "name": "Identifier",
                                              "src": "17939:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1125,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 1071,
                                                  "name": "Identifier",
                                                  "src": "17948:3:0"
                                                }
                                              ],
                                              "id": 1072,
                                              "name": "MemberAccess",
                                              "src": "17948:10:0"
                                            }
                                          ],
                                          "id": 1073,
                                          "name": "IndexAccess",
                                          "src": "17939:20:0"
                                        }
                                      ],
                                      "id": 1074,
                                      "name": "MemberAccess",
                                      "src": "17939:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1062,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 1075,
                                      "name": "Identifier",
                                      "src": "17964:13:0"
                                    }
                                  ],
                                  "id": 1076,
                                  "name": "FunctionCall",
                                  "src": "17939:39:0"
                                }
                              ],
                              "id": 1077,
                              "name": "Assignment",
                              "src": "17916:62:0"
                            }
                          ],
                          "id": 1078,
                          "name": "ExpressionStatement",
                          "src": "17916:62:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 1079,
                                  "name": "Identifier",
                                  "src": "17989:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 321,
                                            "type": "uint256",
                                            "value": "tokensMinted"
                                          },
                                          "id": 1080,
                                          "name": "Identifier",
                                          "src": "18004:12:0"
                                        }
                                      ],
                                      "id": 1081,
                                      "name": "MemberAccess",
                                      "src": "18004:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1062,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 1082,
                                      "name": "Identifier",
                                      "src": "18021:13:0"
                                    }
                                  ],
                                  "id": 1083,
                                  "name": "FunctionCall",
                                  "src": "18004:31:0"
                                }
                              ],
                              "id": 1084,
                              "name": "Assignment",
                              "src": "17989:46:0"
                            }
                          ],
                          "id": 1085,
                          "name": "ExpressionStatement",
                          "src": "17989:46:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1116,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 1086,
                                  "name": "Identifier",
                                  "src": "18096:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 321,
                                        "type": "uint256",
                                        "value": "tokensMinted"
                                      },
                                      "id": 1087,
                                      "name": "Identifier",
                                      "src": "18103:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 306,
                                        "type": "uint256",
                                        "value": "maxSupplyForEra"
                                      },
                                      "id": 1088,
                                      "name": "Identifier",
                                      "src": "18119:15:0"
                                    }
                                  ],
                                  "id": 1089,
                                  "name": "BinaryOperation",
                                  "src": "18103:31:0"
                                }
                              ],
                              "id": 1090,
                              "name": "FunctionCall",
                              "src": "18096:39:0"
                            }
                          ],
                          "id": 1091,
                          "name": "ExpressionStatement",
                          "src": "18096:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 308,
                                    "type": "address",
                                    "value": "lastRewardTo"
                                  },
                                  "id": 1092,
                                  "name": "Identifier",
                                  "src": "18186:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1125,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1093,
                                      "name": "Identifier",
                                      "src": "18201:3:0"
                                    }
                                  ],
                                  "id": 1094,
                                  "name": "MemberAccess",
                                  "src": "18201:10:0"
                                }
                              ],
                              "id": 1095,
                              "name": "Assignment",
                              "src": "18186:25:0"
                            }
                          ],
                          "id": 1096,
                          "name": "ExpressionStatement",
                          "src": "18186:25:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 310,
                                    "type": "uint256",
                                    "value": "lastRewardAmount"
                                  },
                                  "id": 1097,
                                  "name": "Identifier",
                                  "src": "18221:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1062,
                                    "type": "uint256",
                                    "value": "reward_amount"
                                  },
                                  "id": 1098,
                                  "name": "Identifier",
                                  "src": "18240:13:0"
                                }
                              ],
                              "id": 1099,
                              "name": "Assignment",
                              "src": "18221:32:0"
                            }
                          ],
                          "id": 1100,
                          "name": "ExpressionStatement",
                          "src": "18221:32:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 312,
                                    "type": "uint256",
                                    "value": "lastRewardEthBlockNumber"
                                  },
                                  "id": 1101,
                                  "name": "Identifier",
                                  "src": "18263:24:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1117,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 1102,
                                      "name": "Identifier",
                                      "src": "18290:5:0"
                                    }
                                  ],
                                  "id": 1103,
                                  "name": "MemberAccess",
                                  "src": "18290:12:0"
                                }
                              ],
                              "id": 1104,
                              "name": "Assignment",
                              "src": "18263:39:0"
                            }
                          ],
                          "id": 1105,
                          "name": "ExpressionStatement",
                          "src": "18263:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 581,
                                    "type": "function ()",
                                    "value": "_startNewMiningEpoch"
                                  },
                                  "id": 1106,
                                  "name": "Identifier",
                                  "src": "18318:20:0"
                                }
                              ],
                              "id": 1107,
                              "name": "FunctionCall",
                              "src": "18318:22:0"
                            }
                          ],
                          "id": 1108,
                          "name": "ExpressionStatement",
                          "src": "18318:22:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 1060
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 1109,
                              "name": "Literal",
                              "src": "18437:4:0"
                            }
                          ],
                          "id": 1110,
                          "name": "Return",
                          "src": "18430:11:0"
                        }
                      ],
                      "id": 1111,
                      "name": "Block",
                      "src": "17131:1318:0"
                    }
                  ],
                  "id": 1112,
                  "name": "FunctionDefinition",
                  "src": "17074:1375:0"
                }
              ],
              "id": 1113,
              "name": "ContractDefinition",
              "src": "3801:14652:0"
            }
          ],
          "id": 1114,
          "name": "SourceUnit",
          "src": "67:18386:0"
        }
      }
    }
  }
}
