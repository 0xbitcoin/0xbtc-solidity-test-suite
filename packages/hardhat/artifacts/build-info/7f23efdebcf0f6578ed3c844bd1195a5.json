{
  "id": "7f23efdebcf0f6578ed3c844bd1195a5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.4.18",
  "solcLongVersion": "0.4.18+commit.9cf6e910",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/0xBitcoinExtended.sol": {
        "content": "/**\n *Submitted for verification at Etherscan.io on 2018-02-06\n*/\n\npragma solidity ^0.4.18;\n\n\n// ----------------------------------------------------------------------------\n\n// '0xBitcoin Token' contract\n\n// Mineable ERC20 Token using Proof Of Work\n\n//\n\n// Symbol      : 0xBTC\n\n// Name        : 0xBitcoin Token\n\n// Total supply: 21,000,000.00\n\n// Decimals    : 8\n\n//\n\n\n// ----------------------------------------------------------------------------\n\n\n\n// ----------------------------------------------------------------------------\n\n// Safe maths\n\n// ----------------------------------------------------------------------------\n\nlibrary SafeMath {\n\n    function add(uint a, uint b) internal pure returns (uint c) {\n\n        c = a + b;\n\n        require(c >= a);\n\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint c) {\n\n        require(b <= a);\n\n        c = a - b;\n\n    }\n\n    function mul(uint a, uint b) internal pure returns (uint c) {\n\n        c = a * b;\n\n        require(a == 0 || c / a == b);\n\n    }\n\n    function div(uint a, uint b) internal pure returns (uint c) {\n\n        require(b > 0);\n\n        c = a / b;\n\n    }\n\n}\n\n\n\nlibrary ExtendedMath {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\n\n// ----------------------------------------------------------------------------\n\n// ERC Token Standard #20 Interface\n\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n// ----------------------------------------------------------------------------\n\ncontract ERC20Interface {\n\n    function totalSupply() public constant returns (uint);\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n\n    function transfer(address to, uint tokens) public returns (bool success);\n\n    function approve(address spender, uint tokens) public returns (bool success);\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Contract function to receive approval and execute function in one call\n\n//\n\n// Borrowed from MiniMeToken\n\n// ----------------------------------------------------------------------------\n\ncontract ApproveAndCallFallBack {\n\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// Owned contract\n\n// ----------------------------------------------------------------------------\n\ncontract Owned {\n\n    address public owner;\n\n    address public newOwner;\n\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n\n    function Owned() public {\n\n        owner = msg.sender;\n\n    }\n\n\n    modifier onlyOwner {\n\n        require(msg.sender == owner);\n\n        _;\n\n    }\n\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n\n        newOwner = _newOwner;\n\n    }\n\n    function acceptOwnership() public {\n\n        require(msg.sender == newOwner);\n\n        OwnershipTransferred(owner, newOwner);\n\n        owner = newOwner;\n\n        newOwner = address(0);\n\n    }\n\n}\n\n\n\n// ----------------------------------------------------------------------------\n\n// ERC20 Token, with the addition of symbol, name and decimals and an\n\n// initial fixed supply\n\n// ----------------------------------------------------------------------------\n\ncontract _0xBitcoinToken is ERC20Interface, Owned {\n\n    using SafeMath for uint;\n    using ExtendedMath for uint;\n\n\n    string public symbol;\n\n    string public  name;\n\n    uint8 public decimals;\n\n    uint public _totalSupply;\n\n\n\n     uint public latestDifficultyPeriodStarted;\n\n\n\n    uint public epochCount;//number of 'blocks' mined\n\n\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\n\n\n    //a little number\n    uint public  _MINIMUM_TARGET = 2**16;\n\n\n      //a big number is easier ; just find a solution that is smaller\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\n    uint public  _MAXIMUM_TARGET = 2**234;\n\n\n    uint public miningTarget;\n\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\n\n\n\n    uint public rewardEra;\n    uint public maxSupplyForEra;\n\n\n    address public lastRewardTo;\n    uint public lastRewardAmount;\n    uint public lastRewardEthBlockNumber;\n\n    bool locked = false;\n\n    mapping(bytes32 => bytes32) solutionForChallenge;\n\n    uint public tokensMinted;\n\n    mapping(address => uint) balances;\n\n\n    mapping(address => mapping(address => uint)) allowed;\n\n\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n\n    // ------------------------------------------------------------------------\n\n    // Constructor\n\n    // ------------------------------------------------------------------------\n\n    function _0xBitcoinToken() public onlyOwner{\n\n\n\n        symbol = \"0xBTC\";\n\n        name = \"0xBitcoin Token\";\n\n        decimals = 8;\n\n        _totalSupply = 21000000 * 10**uint(decimals);\n\n        if(locked) revert();\n        locked = true;\n\n        tokensMinted = 0;\n\n        rewardEra = 0;\n        maxSupplyForEra = _totalSupply.div(2);\n\n        miningTarget = _MAXIMUM_TARGET;\n\n        latestDifficultyPeriodStarted = block.number;\n\n        _startNewMiningEpoch();\n\n\n        //The owner gets nothing! You must mine this ERC20 token\n        //balances[owner] = _totalSupply;\n        //Transfer(address(0), owner, _totalSupply);\n\n    }\n\n\n\n\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\n\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\n\n            //the challenge digest must match the expected\n            if (digest != challenge_digest) revert();\n\n            //the digest must be smaller than the target\n            if(uint256(digest) > miningTarget) revert();\n\n\n            //only allow one reward for each challenge\n             bytes32 solution = solutionForChallenge[challengeNumber];\n             solutionForChallenge[challengeNumber] = digest;\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\n\n\n            uint reward_amount = getMiningReward();\n\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\n\n            tokensMinted = tokensMinted.add(reward_amount);\n\n\n            //Cannot mint more tokens than there are\n            assert(tokensMinted <= maxSupplyForEra);\n\n            //set readonly diagnostics data\n            lastRewardTo = msg.sender;\n            lastRewardAmount = reward_amount;\n            lastRewardEthBlockNumber = block.number;\n\n\n             _startNewMiningEpoch();\n\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n\n           return true;\n\n        }\n\n\n    //a new 'block' to be mined\n    function _startNewMiningEpoch() internal {\n\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\n\n      //40 is the final reward era, almost all tokens minted\n      //once the final era is reached, more tokens will not be given out because the assert function\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\n      {\n        rewardEra = rewardEra + 1;\n      }\n\n      //set the next minted supply at which the era will change\n      // total supply is 2100000000000000  because of 8 decimal places\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n      epochCount = epochCount.add(1);\n\n      //every so often, readjust difficulty. Dont readjust when deploying\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\n      {\n        _reAdjustDifficulty();\n      }\n\n\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\n      //do this last since this is a protection mechanism in the mint() function\n      challengeNumber = block.blockhash(block.number - 1);\n\n\n\n\n\n\n    }\n\n\n\n\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\n\n    //readjust the target by 5 percent\n    function _reAdjustDifficulty() internal {\n\n\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\n        //assume 360 ethereum blocks per hour\n\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\n\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\n\n        //if there were less eth blocks passed in time than expected\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\n        {\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\n\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\n\n          //make it harder\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\n        }else{\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\n\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\n\n          //make it easier\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\n        }\n\n\n\n        latestDifficultyPeriodStarted = block.number;\n\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\n        {\n          miningTarget = _MINIMUM_TARGET;\n        }\n\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\n        {\n          miningTarget = _MAXIMUM_TARGET;\n        }\n    }\n\n\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\n    function getChallengeNumber() public constant returns (bytes32) {\n        return challengeNumber;\n    }\n\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n     function getMiningDifficulty() public constant returns (uint) {\n        return _MAXIMUM_TARGET.div(miningTarget);\n    }\n\n    function getMiningTarget() public constant returns (uint) {\n       return miningTarget;\n   }\n\n\n\n    //21m coins total\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\n    function getMiningReward() public constant returns (uint) {\n        //once we get half way thru the coins, only get 25 per block\n\n         //every reward era, the reward amount halves.\n\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n    }\n\n    //help debug mining software\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n        return digest;\n\n      }\n\n        //help debug mining software\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\n\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\n\n          if(uint256(digest) > testTarget) revert();\n\n          return (digest == challenge_digest);\n\n        }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Total supply\n\n    // ------------------------------------------------------------------------\n\n    function totalSupply() public constant returns (uint) {\n\n        return _totalSupply  - balances[address(0)];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Get the token balance for account `tokenOwner`\n\n    // ------------------------------------------------------------------------\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n\n        return balances[tokenOwner];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer the balance from token owner's account to `to` account\n\n    // - Owner's account must have sufficient balance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transfer(address to, uint tokens) public returns (bool success) {\n\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(msg.sender, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account\n\n    //\n\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n    // recommends that there are no checks for the approval double-spend attack\n\n    // as this should be implemented in user interfaces\n\n    // ------------------------------------------------------------------------\n\n    function approve(address spender, uint tokens) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer `tokens` from the `from` account to the `to` account\n\n    //\n\n    // The calling account must already have sufficient tokens approve(...)-d\n\n    // for spending from the `from` account and\n\n    // - From account must have sufficient balance to transfer\n\n    // - Spender must have sufficient allowance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n\n        balances[from] = balances[from].sub(tokens);\n\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(from, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Returns the amount of tokens approved by the owner that can be\n\n    // transferred to the spender's account\n\n    // ------------------------------------------------------------------------\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n\n        return allowed[tokenOwner][spender];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account. The `spender` contract function\n\n    // `receiveApproval(...)` is then executed\n\n    // ------------------------------------------------------------------------\n\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        Approval(msg.sender, spender, tokens);\n\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Don't accept ETH\n\n    // ------------------------------------------------------------------------\n\n    function () public payable {\n\n        revert();\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Owner can transfer out any accidentally sent ERC20 tokens\n\n    // ------------------------------------------------------------------------\n\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n\n    }\n\n\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Extension methods just for testing purposes\n\n   \n    // ------------------------------------------------------------------------\n\n    function setTokensMinted(uint amt) public   {\n        tokensMinted = amt;\n    }\n\n\n    function mintWithoutPoW( ) public returns (bool success) {\n\n\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\n\n        //the challenge digest must match the expected\n        //if (digest != challenge_digest) revert();\n\n        //the digest must be smaller than the target\n        //if(uint256(digest) > miningTarget) revert();\n\n\n        //only allow one reward for each challenge\n            //bytes32 solution = solutionForChallenge[challengeNumber];\n            //solutionForChallenge[challengeNumber] = digest;\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\n\n\n        uint reward_amount = getMiningReward();\n\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\n\n        tokensMinted = tokensMinted.add(reward_amount);\n\n\n        //Cannot mint more tokens than there are\n        assert(tokensMinted <= maxSupplyForEra);\n\n        //set readonly diagnostics data\n        lastRewardTo = msg.sender;\n        lastRewardAmount = reward_amount;\n        lastRewardEthBlockNumber = block.number;\n\n\n            _startNewMiningEpoch();\n\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n\n        return true;\n\n    }\n\n\n}"
      },
      "contracts/WETH.sol": {
        "content": "/**\n *Submitted for verification at Etherscan.io on 2017-12-12\n*/\n\n// Copyright (C) 2015, 2016, 2017 Dapphub\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.18;\n\ncontract WETH9 {\n    string public name     = \"Wrapped Ether\";\n    string public symbol   = \"WETH\";\n    uint8  public decimals = 18;\n\n    event  Approval(address indexed src, address indexed guy, uint wad);\n    event  Transfer(address indexed src, address indexed dst, uint wad);\n    event  Deposit(address indexed dst, uint wad);\n    event  Withdrawal(address indexed src, uint wad);\n\n    mapping (address => uint)                       public  balanceOf;\n    mapping (address => mapping (address => uint))  public  allowance;\n\n    function() public payable {\n        deposit();\n    }\n    function deposit() public payable {\n        balanceOf[msg.sender] += msg.value;\n        Deposit(msg.sender, msg.value);\n    }\n    function withdraw(uint wad) public {\n        require(balanceOf[msg.sender] >= wad);\n        balanceOf[msg.sender] -= wad;\n        msg.sender.transfer(wad);\n        Withdrawal(msg.sender, wad);\n    }\n\n    function totalSupply() public view returns (uint) {\n        return this.balance;\n    }\n\n    function approve(address guy, uint wad) public returns (bool) {\n        allowance[msg.sender][guy] = wad;\n        Approval(msg.sender, guy, wad);\n        return true;\n    }\n\n    function transfer(address dst, uint wad) public returns (bool) {\n        return transferFrom(msg.sender, dst, wad);\n    }\n\n    function transferFrom(address src, address dst, uint wad)\n        public\n        returns (bool)\n    {\n        require(balanceOf[src] >= wad);\n\n        if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\n            require(allowance[src][msg.sender] >= wad);\n            allowance[src][msg.sender] -= wad;\n        }\n\n        balanceOf[src] -= wad;\n        balanceOf[dst] += wad;\n\n        Transfer(src, dst, wad);\n\n        return true;\n    }\n}\n\n\n/*\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n*/"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/0xBitcoinExtended.sol": {
        "ApproveAndCallFallBack": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                },
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "ERC20Interface": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "ExtendedMath": {
          "abi": [],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":1148:1357  library ExtendedMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":1148:1357  library ExtendedMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820223f80a625450556967e72003d1e6d5239741c3b6b25f1a288341272938b0f5f0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820223f80a625450556967e72003d1e6d5239741c3b6b25f1a288341272938b0f5f0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x22 0x3f DUP1 0xa6 0x25 GASLIMIT SDIV JUMP SWAP7 PUSH31 0x72003D1E6D5239741C3B6B25F1A288341272938B0F5F002900000000000000 ",
              "sourceMap": "1148:209:0:-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600080fd00a165627a7a72305820223f80a625450556967e72003d1e6d5239741c3b6b25f1a288341272938b0f5f0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x22 0x3f DUP1 0xa6 0x25 GASLIMIT SDIV JUMP SWAP7 PUSH31 0x72003D1E6D5239741C3B6B25F1A288341272938B0F5F002900000000000000 ",
              "sourceMap": "1148:209:0:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "10600",
                "executionCost": "61",
                "totalCost": "10661"
              },
              "internal": {
                "limitLessThan(uint256,uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "MSTORE"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "ISZERO"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "JUMPI"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "DUP1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "REVERT"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "DUP1"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "CODECOPY"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1148,
                  "end": 1357,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820223f80a625450556967e72003d1e6d5239741c3b6b25f1a288341272938b0f5f0029",
                  ".code": [
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1148,
                      "end": 1357,
                      "name": "REVERT"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"ExtendedMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "Owned": {
          "abi": [
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "newOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "_to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":2926:3539  contract Owned {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/0xBitcoinExtended.sol\":3084:3145  function Owned() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/0xBitcoinExtended.sol\":3127:3137  msg.sender */\n  caller\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3124  owner */\n  0x0\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3137  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":2926:3539  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":2926:3539  contract Owned {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x79ba5097\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_2:\n      jumpi(tag_6, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_6:\n      tag_7\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_3:\n      jumpi(tag_9, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_9:\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_4:\n      jumpi(tag_12, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_12:\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_5:\n      jumpi(tag_15, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_15:\n      tag_16\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_8:\n        /* \"contracts/0xBitcoinExtended.sol\":3412:3420  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3408  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3390:3421  require(msg.sender == newOwner) */\n      iszero\n      iszero\n      tag_19\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/0xBitcoinExtended.sol\":3460:3468  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3432:3469  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3453:3458  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3432:3469  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":3488:3496  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3485  owner */\n      0x0\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3496  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":3526:3527  0 */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3507:3515  newOwner */\n      0x1\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3507:3528  newOwner = address(0) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_11:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_17:\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_21:\n        /* \"contracts/0xBitcoinExtended.sol\":3322:3331  _newOwner */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3319  newOwner */\n      0x1\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3331  newOwner = _newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201d39b361ca6348027d4e889f1b2d1378bbb8b9da435fc47cdcc177dec61a01820029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104148061005e6000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806379ba5097146100675780638da5cb5b1461007c578063d4ee1d90146100d1578063f2fde38b14610126575b600080fd5b341561007257600080fd5b61007a61015f565b005b341561008757600080fd5b61008f6102fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100dc57600080fd5b6100e4610323565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561013157600080fd5b61015d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610349565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103a457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058201d39b361ca6348027d4e889f1b2d1378bbb8b9da435fc47cdcc177dec61a01820029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x414 DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1d CODECOPY 0xb3 PUSH2 0xCA63 0x48 MUL PUSH30 0x4E889F1B2D1378BBB8B9DA435FC47CDCC177DEC61A018200290000000000 ",
              "sourceMap": "2926:613:0:-;;;3084:61;;;;;;;;3127:10;3119:5;;:18;;;;;;;;;;;;;;;;;;2926:613;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806379ba5097146100675780638da5cb5b1461007c578063d4ee1d90146100d1578063f2fde38b14610126575b600080fd5b341561007257600080fd5b61007a61015f565b005b341561008757600080fd5b61008f6102fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100dc57600080fd5b6100e4610323565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561013157600080fd5b61015d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610349565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103a457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058201d39b361ca6348027d4e889f1b2d1378bbb8b9da435fc47cdcc177dec61a01820029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1d CODECOPY 0xb3 PUSH2 0xCA63 0x48 MUL PUSH30 0x4E889F1B2D1378BBB8B9DA435FC47CDCC177DEC61A018200290000000000 ",
              "sourceMap": "2926:613:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3345:191;;;;;;;;;;;;;;2948:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2975:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3237:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;3345:191;3412:8;;;;;;;;;;;3398:22;;:10;:22;;;3390:31;;;;;;;;3460:8;;;;;;;;;;;3432:37;;3453:5;;;;;;;;;;;3432:37;;;;;;;;;;;;3488:8;;;;;;;;;;;3480:5;;:16;;;;;;;;;;;;;;;;;;3526:1;3507:8;;:21;;;;;;;;;;;;;;;;;;3345:191::o;2948:20::-;;;;;;;;;;;;;:::o;2975:23::-;;;;;;;;;;;;;:::o;3237:102::-;3204:5;;;;;;;;;;;3190:19;;:10;:19;;;3182:28;;;;;;;;3322:9;3311:8;;:20;;;;;;;;;;;;;;;;;;3237:102;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "208800",
                "executionCost": "20512",
                "totalCost": "229312"
              },
              "external": {
                "acceptOwnership()": "43191",
                "newOwner()": "478",
                "owner()": "456",
                "transferOwnership(address)": "20779"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "MSTORE"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "ISZERO"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "JUMPI"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "DUP1"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "REVERT"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 3084,
                  "end": 3145,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3127,
                  "end": 3137,
                  "name": "CALLER"
                },
                {
                  "begin": 3119,
                  "end": 3124,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3119,
                  "end": 3124,
                  "name": "DUP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "EXP"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP2"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SLOAD"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP2"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "MUL"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "NOT"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP4"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "MUL"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "OR"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SSTORE"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "POP"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "DUP1"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "CODECOPY"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 2926,
                  "end": 3539,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a723058201d39b361ca6348027d4e889f1b2d1378bbb8b9da435fc47cdcc177dec61a01820029",
                  ".code": [
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "LT"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DIV"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "AND"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "79BA5097"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "D4EE1D90"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "EQ"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "tag",
                      "value": "1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2926,
                      "end": 3539,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "STOP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ADD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "POP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "POP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SUB"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "13"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "14"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "13"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "ADD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "POP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "POP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SUB"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "AND"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "ADD"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "16"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "STOP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "EXP"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "DIV"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3408,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "EQ"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "EXP"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "DIV"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "AND"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "EXP"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "DIV"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SUB"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "LOG3"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "EXP"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "DIV"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3485,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3480,
                      "end": 3485,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "EXP"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "MUL"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "NOT"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "MUL"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "OR"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "POP"
                    },
                    {
                      "begin": 3526,
                      "end": 3527,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3507,
                      "end": 3515,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3507,
                      "end": 3515,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "EXP"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "MUL"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "NOT"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "MUL"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "OR"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "POP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "EXP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DIV"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "14"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "EXP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DIV"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "EXP"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DIV"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3200,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "EQ"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3322,
                      "end": 3331,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3319,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3311,
                      "end": 3319,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "EXP"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "MUL"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "NOT"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "MUL"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "OR"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "newOwner()": "d4ee1d90",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"Owned\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":630:1144  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":630:1144  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582044e11991bca6bbad91ba0148d06bbf3594c4eecd1fa219a9982958f9e5352a4f0029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582044e11991bca6bbad91ba0148d06bbf3594c4eecd1fa219a9982958f9e5352a4f0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIFFICULTY 0xe1 NOT SWAP2 0xbc 0xa6 0xbb 0xad SWAP2 0xba ADD 0x48 0xd0 PUSH12 0xBF3594C4EECD1FA219A99829 PC 0xf9 0xe5 CALLDATALOAD 0x2a 0x4f STOP 0x29 ",
              "sourceMap": "630:514:0:-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600080fd00a165627a7a7230582044e11991bca6bbad91ba0148d06bbf3594c4eecd1fa219a9982958f9e5352a4f0029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIFFICULTY 0xe1 NOT SWAP2 0xbc 0xa6 0xbb 0xad SWAP2 0xba ADD 0x48 0xd0 PUSH12 0xBF3594C4EECD1FA219A99829 PC 0xf9 0xe5 CALLDATALOAD 0x2a 0x4f STOP 0x29 ",
              "sourceMap": "630:514:0:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "10600",
                "executionCost": "61",
                "totalCost": "10661"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "MSTORE"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "ISZERO"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "JUMPI"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "DUP1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "REVERT"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "DUP1"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "CODECOPY"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 630,
                  "end": 1144,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a7230582044e11991bca6bbad91ba0148d06bbf3594c4eecd1fa219a9982958f9e5352a4f0029",
                  ".code": [
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "DUP1"
                    },
                    {
                      "begin": 630,
                      "end": 1144,
                      "name": "REVERT"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "_0xBitcoinToken": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "lastRewardEthBlockNumber",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getMiningDifficulty",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "challenge_digest",
                  "type": "bytes32"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "from",
                  "type": "address"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "rewardEra",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "name": "",
                  "type": "uint8"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getMiningTarget",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getMiningReward",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getChallengeNumber",
              "outputs": [
                {
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "maxSupplyForEra",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "mintWithoutPoW",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "amt",
                  "type": "uint256"
                }
              ],
              "name": "setTokensMinted",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "tokensMinted",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "lastRewardTo",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "challenge_digest",
                  "type": "bytes32"
                },
                {
                  "name": "challenge_number",
                  "type": "bytes32"
                },
                {
                  "name": "testTarget",
                  "type": "uint256"
                }
              ],
              "name": "checkMintSolution",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "epochCount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_MAXIMUM_TARGET",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "miningTarget",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "challengeNumber",
              "outputs": [
                {
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "challenge_digest",
                  "type": "bytes32"
                },
                {
                  "name": "challenge_number",
                  "type": "bytes32"
                }
              ],
              "name": "getMintDigest",
              "outputs": [
                {
                  "name": "digesttest",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_BLOCKS_PER_READJUSTMENT",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "lastRewardAmount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                },
                {
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "latestDifficultyPeriodStarted",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "newOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "transferAnyERC20Token",
              "outputs": [
                {
                  "name": "success",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "_MINIMUM_TARGET",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "remaining",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "payable": true,
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "reward_amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "epochCount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "newChallengeNumber",
                  "type": "bytes32"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "_to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "tokenOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/0xBitcoinExtended.sol\":4182:4186  1024 */\n  0x400\n    /* \"contracts/0xBitcoinExtended.sol\":4143:4186  uint public _BLOCKS_PER_READJUSTMENT = 1024 */\n  0x8\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":4247:4252  2**16 */\n  0x10000\n    /* \"contracts/0xBitcoinExtended.sol\":4216:4252  uint public  _MINIMUM_TARGET = 2**16 */\n  0x9\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":4424:4430  2**234 */\n  0x40000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/0xBitcoinExtended.sol\":4393:4430  uint public  _MAXIMUM_TARGET = 2**234 */\n  0xa\n  sstore\n    /* \"contracts/0xBitcoinExtended.sol\":4745:4750  false */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":4731:4750  bool locked = false */\n  0x12\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5230:5865  function _0xBitcoinToken() public onlyOwner{... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/0xBitcoinExtended.sol\":3127:3137  msg.sender */\n  caller\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3124  owner */\n  0x0\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":3119:3137  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n  0x0\n  dup1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n  caller\n    /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n  iszero\n  iszero\n  tag_6\n  jumpi\n  0x0\n  dup1\n  revert\ntag_6:\n    /* \"contracts/0xBitcoinExtended.sol\":5286:5302  symbol = \"0xBTC\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x5\n  dup2\n  mstore\n  0x20\n  add\n  0x3078425443000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5286:5292  symbol */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":5286:5302  symbol = \"0xBTC\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_9)\ntag_8:\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5313:5337  name = \"0xBitcoin Token\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xf\n  dup2\n  mstore\n  0x20\n  add\n  0x3078426974636f696e20546f6b656e0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5313:5317  name */\n  0x3\n    /* \"contracts/0xBitcoinExtended.sol\":5313:5337  name = \"0xBitcoin Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_9)\ntag_10:\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5359:5360  8 */\n  0x8\n    /* \"contracts/0xBitcoinExtended.sol\":5348:5356  decimals */\n  0x4\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":5348:5360  decimals = 8 */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5406:5414  decimals */\n  0x4\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5401:5415  uint(decimals) */\n  0xff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5397:5399  10 */\n  0xa\n    /* \"contracts/0xBitcoinExtended.sol\":5397:5415  10**uint(decimals) */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":5386:5394  21000000 */\n  0x1406f40\n    /* \"contracts/0xBitcoinExtended.sol\":5386:5415  21000000 * 10**uint(decimals) */\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":5371:5383  _totalSupply */\n  0x5\n    /* \"contracts/0xBitcoinExtended.sol\":5371:5415  _totalSupply = 21000000 * 10**uint(decimals) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5429:5435  locked */\n  0x12\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":5426:5445  if(locked) revert() */\n  iszero\n  tag_11\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":5437:5445  revert() */\n  0x0\n  dup1\n  revert\n    /* \"contracts/0xBitcoinExtended.sol\":5426:5445  if(locked) revert() */\ntag_11:\n    /* \"contracts/0xBitcoinExtended.sol\":5464:5468  true */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":5455:5461  locked */\n  0x12\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":5455:5468  locked = true */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5494:5495  0 */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":5479:5491  tokensMinted */\n  0x14\n    /* \"contracts/0xBitcoinExtended.sol\":5479:5495  tokensMinted = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5518:5519  0 */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":5506:5515  rewardEra */\n  0xd\n    /* \"contracts/0xBitcoinExtended.sol\":5506:5519  rewardEra = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5566  _totalSupply.div(2) */\n  tag_12\n    /* \"contracts/0xBitcoinExtended.sol\":5564:5565  2 */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5559  _totalSupply */\n  sload(0x5)\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5563  _totalSupply.div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":5547:5566  _totalSupply.div(2) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/0xBitcoinExtended.sol\":5529:5544  maxSupplyForEra */\n  0xe\n    /* \"contracts/0xBitcoinExtended.sol\":5529:5566  maxSupplyForEra = _totalSupply.div(2) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5592:5607  _MAXIMUM_TARGET */\n  sload(0xa)\n    /* \"contracts/0xBitcoinExtended.sol\":5577:5589  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":5577:5607  miningTarget = _MAXIMUM_TARGET */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5650:5662  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":5618:5647  latestDifficultyPeriodStarted */\n  0x6\n    /* \"contracts/0xBitcoinExtended.sol\":5618:5662  latestDifficultyPeriodStarted = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":5673:5695  _startNewMiningEpoch() */\n  tag_14\n    /* \"contracts/0xBitcoinExtended.sol\":5673:5693  _startNewMiningEpoch */\n  or(tag_0_181, mul(0x100000000, tag_15))\n    /* \"contracts/0xBitcoinExtended.sol\":5673:5695  _startNewMiningEpoch() */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_14:\n    /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\n  jump(tag_16)\n    /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\ntag_13:\n    /* \"contracts/0xBitcoinExtended.sol\":1080:1086  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":1111:1112  0 */\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":1107:1108  b */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":1107:1112  b > 0 */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":1099:1113  require(b > 0) */\n  iszero\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup1\n  revert\ntag_18:\n    /* \"contracts/0xBitcoinExtended.sol\":1132:1133  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1128:1129  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":1128:1133  a / b */\n  dup2\n  iszero\n  iszero\n  tag_19\n  jumpi\n  invalid\ntag_19:\n  div\n    /* \"contracts/0xBitcoinExtended.sol\":1124:1133  c = a / b */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\ntag_15:\n    /* \"contracts/0xBitcoinExtended.sol\":7749:7764  maxSupplyForEra */\n  sload(0xe)\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n  tag_21\n    /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n  tag_22\n    /* \"contracts/0xBitcoinExtended.sol\":7728:7743  getMiningReward */\n  or(tag_0_81, mul(0x100000000, tag_23))\n    /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_22:\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7723  tokensMinted */\n  sload(0x14)\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7727  tokensMinted.add */\n  or(tag_0_177, mul(0x100000000, tag_24))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_21:\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7764  tokensMinted.add(getMiningReward()) > maxSupplyForEra */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\n  dup1\n  iszero\n  tag_25\n  jumpi\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":7780:7782  39 */\n  0x27\n    /* \"contracts/0xBitcoinExtended.sol\":7768:7777  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":7768:7782  rewardEra < 39 */\n  lt\n    /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\ntag_25:\n    /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\n  iszero\n  tag_26\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":7824:7825  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":7812:7821  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":7812:7825  rewardEra + 1 */\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":7800:7809  rewardEra */\n  0xd\n    /* \"contracts/0xBitcoinExtended.sol\":7800:7825  rewardEra = rewardEra + 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\ntag_26:\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n  tag_27\n    /* \"contracts/0xBitcoinExtended.sol\":8044:8045  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":8032:8041  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":8032:8045  rewardEra + 1 */\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":8028:8029  2 */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":8028:8046  2**(rewardEra + 1) */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8022  _totalSupply */\n  sload(0x5)\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8026  _totalSupply.div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_27:\n    /* \"contracts/0xBitcoinExtended.sol\":7995:8007  _totalSupply */\n  sload(0x5)\n    /* \"contracts/0xBitcoinExtended.sol\":7995:8047  _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n  sub\n    /* \"contracts/0xBitcoinExtended.sol\":7977:7992  maxSupplyForEra */\n  0xe\n    /* \"contracts/0xBitcoinExtended.sol\":7977:8047  maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n  tag_28\n    /* \"contracts/0xBitcoinExtended.sol\":8084:8085  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8079  epochCount */\n  sload(0x7)\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8083  epochCount.add */\n  or(tag_0_177, mul(0x100000000, tag_24))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_28:\n    /* \"contracts/0xBitcoinExtended.sol\":8056:8066  epochCount */\n  0x7\n    /* \"contracts/0xBitcoinExtended.sol\":8056:8086  epochCount = epochCount.add(1) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":8213:8214  0 */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":8185:8209  _BLOCKS_PER_READJUSTMENT */\n  sload(0x8)\n    /* \"contracts/0xBitcoinExtended.sol\":8172:8182  epochCount */\n  sload(0x7)\n    /* \"contracts/0xBitcoinExtended.sol\":8172:8209  epochCount % _BLOCKS_PER_READJUSTMENT */\n  dup2\n  iszero\n  iszero\n  tag_29\n  jumpi\n  invalid\ntag_29:\n  mod\n    /* \"contracts/0xBitcoinExtended.sol\":8172:8214  epochCount % _BLOCKS_PER_READJUSTMENT == 0 */\n  eq\n    /* \"contracts/0xBitcoinExtended.sol\":8169:8262  if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)... */\n  iszero\n  tag_30\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n  tag_31\n    /* \"contracts/0xBitcoinExtended.sol\":8232:8251  _reAdjustDifficulty */\n  or(tag_0_242, mul(0x100000000, tag_32))\n    /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_31:\n    /* \"contracts/0xBitcoinExtended.sol\":8169:8262  if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)... */\ntag_30:\n    /* \"contracts/0xBitcoinExtended.sol\":8518:8519  1 */\n  0x1\n    /* \"contracts/0xBitcoinExtended.sol\":8503:8515  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":8503:8519  block.number - 1 */\n  sub\n    /* \"contracts/0xBitcoinExtended.sol\":8487:8520  block.blockhash(block.number - 1) */\n  blockhash\n    /* \"contracts/0xBitcoinExtended.sol\":8469:8484  challengeNumber */\n  0xc\n    /* \"contracts/0xBitcoinExtended.sol\":8469:8520  challengeNumber = block.blockhash(block.number - 1) */\n  dup2\n  not(0x0)\n  and\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\ntag_23:\n    /* \"contracts/0xBitcoinExtended.sol\":11253:11257  uint */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n  tag_34\n    /* \"contracts/0xBitcoinExtended.sol\":11438:11447  rewardEra */\n  sload(0xd)\n    /* \"contracts/0xBitcoinExtended.sol\":11435:11436  2 */\n  0x2\n    /* \"contracts/0xBitcoinExtended.sol\":11435:11447  2**rewardEra */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":11418:11426  decimals */\n  0x4\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":11413:11427  uint(decimals) */\n  0xff\n  and\n    /* \"contracts/0xBitcoinExtended.sol\":11409:11411  10 */\n  0xa\n    /* \"contracts/0xBitcoinExtended.sol\":11409:11427  10**uint(decimals) */\n  exp\n    /* \"contracts/0xBitcoinExtended.sol\":11404:11406  50 */\n  0x32\n    /* \"contracts/0xBitcoinExtended.sol\":11404:11427  50 * 10**uint(decimals) */\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":11403:11433  (50 * 10**uint(decimals) ).div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_34:\n    /* \"contracts/0xBitcoinExtended.sol\":11396:11449  return (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\ntag_24:\n    /* \"contracts/0xBitcoinExtended.sol\":706:712  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":733:734  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":729:730  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":729:734  a + b */\n  add\n    /* \"contracts/0xBitcoinExtended.sol\":725:734  c = a + b */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":758:759  a */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":753:754  c */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":753:759  c >= a */\n  lt\n  iszero\n    /* \"contracts/0xBitcoinExtended.sol\":745:760  require(c >= a) */\n  iszero\n  iszero\n  tag_36\n  jumpi\n  0x0\n  dup1\n  revert\ntag_36:\n    /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\ntag_32:\n    /* \"contracts/0xBitcoinExtended.sol\":8809:8848  uint ethBlocksSinceLastDifficultyPeriod */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":9066:9082  uint epochsMined */\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":9126:9159  uint targetEthBlocksPerDiffPeriod */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":9392:9413  uint excess_block_pct */\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":9510:9537  uint excess_block_pct_extra */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":9901:9924  uint shortage_block_pct */\n  dup1\n    /* \"contracts/0xBitcoinExtended.sol\":10021:10050  uint shortage_block_pct_extra */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":8866:8895  latestDifficultyPeriodStarted */\n  sload(0x6)\n    /* \"contracts/0xBitcoinExtended.sol\":8851:8863  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":8851:8895  block.number - latestDifficultyPeriodStarted */\n  sub\n    /* \"contracts/0xBitcoinExtended.sol\":8809:8895  uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted */\n  swap7\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9085:9109  _BLOCKS_PER_READJUSTMENT */\n  sload(0x8)\n    /* \"contracts/0xBitcoinExtended.sol\":9066:9109  uint epochsMined = _BLOCKS_PER_READJUSTMENT */\n  swap6\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9176:9178  60 */\n  0x3c\n    /* \"contracts/0xBitcoinExtended.sol\":9162:9173  epochsMined */\n  dup7\n    /* \"contracts/0xBitcoinExtended.sol\":9162:9178  epochsMined * 60 */\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":9126:9178  uint targetEthBlocksPerDiffPeriod = epochsMined * 60 */\n  swap5\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9341:9369  targetEthBlocksPerDiffPeriod */\n  dup5\n    /* \"contracts/0xBitcoinExtended.sol\":9304:9338  ethBlocksSinceLastDifficultyPeriod */\n  dup8\n    /* \"contracts/0xBitcoinExtended.sol\":9304:9369  ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod */\n  lt\n    /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n  iszero\n  tag_38\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  tag_39\n    /* \"contracts/0xBitcoinExtended.sol\":9461:9495  ethBlocksSinceLastDifficultyPeriod */\n  dup8\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n  tag_40\n    /* \"contracts/0xBitcoinExtended.sol\":9450:9453  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9445  targetEthBlocksPerDiffPeriod */\n  dup9\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9449  targetEthBlocksPerDiffPeriod.mul */\n  or(tag_0_249, mul(0x100000000, tag_41))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_40:\n    /* \"contracts/0xBitcoinExtended.sol\":9416:9459  (targetEthBlocksPerDiffPeriod.mul(100)).div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_39:\n    /* \"contracts/0xBitcoinExtended.sol\":9392:9497  uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n  swap4\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n  tag_42\n    /* \"contracts/0xBitcoinExtended.sol\":9580:9584  1000 */\n  0x3e8\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n  tag_43\n    /* \"contracts/0xBitcoinExtended.sol\":9561:9564  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9556  excess_block_pct */\n  dup8\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9560  excess_block_pct.sub */\n  or(tag_0_185, mul(0x100000000, tag_44))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_43:\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9579  excess_block_pct.sub(100).limitLessThan */\n  or(tag_0_252, mul(0x100000000, tag_45))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_42:\n    /* \"contracts/0xBitcoinExtended.sol\":9510:9585  uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000) */\n  swap3\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n  tag_46\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n  tag_47\n    /* \"contracts/0xBitcoinExtended.sol\":9832:9854  excess_block_pct_extra */\n  dup5\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n  tag_48\n    /* \"contracts/0xBitcoinExtended.sol\":9822:9826  2000 */\n  0x7d0\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9817  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9821  miningTarget.div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_48:\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9831  miningTarget.div(2000).mul */\n  or(tag_0_249, mul(0x100000000, tag_41))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_47:\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9800  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9804  miningTarget.sub */\n  or(tag_0_185, mul(0x100000000, tag_44))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_46:\n    /* \"contracts/0xBitcoinExtended.sol\":9773:9785  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":9773:9856  miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n  jump(tag_49)\ntag_38:\n    /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n  tag_50\n    /* \"contracts/0xBitcoinExtended.sol\":9978:10006  targetEthBlocksPerDiffPeriod */\n  dup6\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n  tag_51\n    /* \"contracts/0xBitcoinExtended.sol\":9967:9970  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9962  ethBlocksSinceLastDifficultyPeriod */\n  dup11\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9966  ethBlocksSinceLastDifficultyPeriod.mul */\n  or(tag_0_249, mul(0x100000000, tag_41))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_51:\n    /* \"contracts/0xBitcoinExtended.sol\":9927:9976  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_50:\n    /* \"contracts/0xBitcoinExtended.sol\":9901:10008  uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n  swap2\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n  tag_52\n    /* \"contracts/0xBitcoinExtended.sol\":10095:10099  1000 */\n  0x3e8\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n  tag_53\n    /* \"contracts/0xBitcoinExtended.sol\":10076:10079  100 */\n  0x64\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10071  shortage_block_pct */\n  dup6\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10075  shortage_block_pct.sub */\n  or(tag_0_185, mul(0x100000000, tag_44))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_53:\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10094  shortage_block_pct.sub(100).limitLessThan */\n  or(tag_0_252, mul(0x100000000, tag_45))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_52:\n    /* \"contracts/0xBitcoinExtended.sol\":10021:10100  uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000) */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n  tag_54\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n  tag_55\n    /* \"contracts/0xBitcoinExtended.sol\":10227:10251  shortage_block_pct_extra */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n  tag_56\n    /* \"contracts/0xBitcoinExtended.sol\":10217:10221  2000 */\n  0x7d0\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10212  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10216  miningTarget.div */\n  or(tag_0_170, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_56:\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10226  miningTarget.div(2000).mul */\n  or(tag_0_249, mul(0x100000000, tag_41))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_55:\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10195  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10199  miningTarget.add */\n  or(tag_0_177, mul(0x100000000, tag_24))\n  swap1\n    /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_54:\n    /* \"contracts/0xBitcoinExtended.sol\":10168:10180  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":10168:10253  miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\ntag_49:\n    /* \"contracts/0xBitcoinExtended.sol\":10326:10338  block.number */\n  number\n    /* \"contracts/0xBitcoinExtended.sol\":10294:10323  latestDifficultyPeriodStarted */\n  0x6\n    /* \"contracts/0xBitcoinExtended.sol\":10294:10338  latestDifficultyPeriodStarted = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10367:10382  _MINIMUM_TARGET */\n  sload(0x9)\n    /* \"contracts/0xBitcoinExtended.sol\":10352:10364  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10352:10382  miningTarget < _MINIMUM_TARGET */\n  lt\n    /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\n  iszero\n  tag_57\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":10436:10451  _MINIMUM_TARGET */\n  sload(0x9)\n    /* \"contracts/0xBitcoinExtended.sol\":10421:10433  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":10421:10451  miningTarget = _MINIMUM_TARGET */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\ntag_57:\n    /* \"contracts/0xBitcoinExtended.sol\":10490:10505  _MAXIMUM_TARGET */\n  sload(0xa)\n    /* \"contracts/0xBitcoinExtended.sol\":10475:10487  miningTarget */\n  sload(0xb)\n    /* \"contracts/0xBitcoinExtended.sol\":10475:10505  miningTarget > _MAXIMUM_TARGET */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\n  iszero\n  tag_58\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":10554:10569  _MAXIMUM_TARGET */\n  sload(0xa)\n    /* \"contracts/0xBitcoinExtended.sol\":10539:10551  miningTarget */\n  0xb\n    /* \"contracts/0xBitcoinExtended.sol\":10539:10569  miningTarget = _MAXIMUM_TARGET */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\ntag_58:\n    /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":894:1022  function mul(uint a, uint b) internal pure returns (uint c) {... */\ntag_41:\n    /* \"contracts/0xBitcoinExtended.sol\":946:952  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":973:974  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":969:970  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":969:974  a * b */\n  mul\n    /* \"contracts/0xBitcoinExtended.sol\":965:974  c = a * b */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":998:999  0 */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":993:994  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":993:999  a == 0 */\n  eq\n    /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\n  dup1\n  tag_60\n  jumpi\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":1012:1013  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1007:1008  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":1003:1004  c */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":1003:1008  c / a */\n  dup2\n  iszero\n  iszero\n  tag_61\n  jumpi\n  invalid\ntag_61:\n  div\n    /* \"contracts/0xBitcoinExtended.sol\":1003:1013  c / a == b */\n  eq\n    /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\ntag_60:\n    /* \"contracts/0xBitcoinExtended.sol\":985:1014  require(a == 0 || c / a == b) */\n  iszero\n  iszero\n  tag_62\n  jumpi\n  0x0\n  dup1\n  revert\ntag_62:\n    /* \"contracts/0xBitcoinExtended.sol\":894:1022  function mul(uint a, uint b) internal pure returns (uint c) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\ntag_44:\n    /* \"contracts/0xBitcoinExtended.sol\":826:832  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":858:859  a */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":853:854  b */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":853:859  b <= a */\n  gt\n  iszero\n    /* \"contracts/0xBitcoinExtended.sol\":845:860  require(b <= a) */\n  iszero\n  iszero\n  tag_64\n  jumpi\n  0x0\n  dup1\n  revert\ntag_64:\n    /* \"contracts/0xBitcoinExtended.sol\":879:880  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":875:876  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":875:880  a - b */\n  sub\n    /* \"contracts/0xBitcoinExtended.sol\":871:880  c = a - b */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\ntag_45:\n    /* \"contracts/0xBitcoinExtended.sol\":1291:1297  uint c */\n  0x0\n    /* \"contracts/0xBitcoinExtended.sol\":1317:1318  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1313:1314  a */\n  dup4\n    /* \"contracts/0xBitcoinExtended.sol\":1313:1318  a > b */\n  gt\n    /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\n  iszero\n  tag_66\n  jumpi\n    /* \"contracts/0xBitcoinExtended.sol\":1327:1328  b */\n  dup2\n    /* \"contracts/0xBitcoinExtended.sol\":1320:1328  return b */\n  swap1\n  pop\n  jump(tag_65)\n    /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\ntag_66:\n    /* \"contracts/0xBitcoinExtended.sol\":1346:1347  a */\n  dup3\n    /* \"contracts/0xBitcoinExtended.sol\":1339:1347  return a */\n  swap1\n  pop\n    /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\ntag_65:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_68\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_67)\ntag_68:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_67\n  jumpi\n  swap2\n  dup3\n  add\ntag_69:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_70\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_69)\ntag_70:\ntag_67:\n  pop\n  swap1\n  pop\n  tag_71\n  swap2\n  swap1\n  jump\t// in(tag_72)\ntag_71:\n  pop\n  swap1\n  jump\t// out\ntag_72:\n  tag_73\n  swap2\n  swap1\ntag_74:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_75\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_74)\ntag_75:\n  pop\n  swap1\n  jump\ntag_73:\n  swap1\n  jump\t// out\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/0xBitcoinExtended.sol\":3801:18453  contract _0xBitcoinToken is ERC20Interface, Owned {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x163aa00d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17da485f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1801fbe5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2d38bf7a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32e99708\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x490203a7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4ef37628\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4fa972e1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5515a1ea\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5ce7e030\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6de9f32b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6fd396d6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x81269a56\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x829965cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x87a2a9d6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8a769d35\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8ae0368b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x97566aa0\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb5ade81b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xbafedcaa\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xcb9ae707\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xdc39d06d\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xdc6e9cf9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_39\n      jumpi\n    tag_1:\n        /* \"contracts/0xBitcoinExtended.sol\":16324:16332  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":3949:3968  string public  name */\n    tag_2:\n      jumpi(tag_42, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_42:\n      tag_43\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_45:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_45)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":13894:14097  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_3:\n      jumpi(tag_49, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_49:\n      tag_50\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4688:4724  uint public lastRewardEthBlockNumber */\n    tag_4:\n      jumpi(tag_52, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_52:\n      tag_53\n      jump(tag_54)\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":10870:10989  function getMiningDifficulty() public constant returns (uint) {... */\n    tag_5:\n      jumpi(tag_55, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_55:\n      tag_56\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":5878:7343  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {... */\n    tag_6:\n      jumpi(tag_58, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_58:\n      tag_59\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_60)\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":12304:12420  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_61, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_61:\n      tag_62\n      jump(tag_63)\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":14638:14976  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n    tag_8:\n      jumpi(tag_64, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_64:\n      tag_65\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_66)\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4559:4580  uint public rewardEra */\n    tag_9:\n      jumpi(tag_67, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_67:\n      tag_68\n      jump(tag_69)\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":3975:3996  uint8 public decimals */\n    tag_10:\n      jumpi(tag_70, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_70:\n      tag_71\n      jump(tag_72)\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":10995:11087  function getMiningTarget() public constant returns (uint) {... */\n    tag_11:\n      jumpi(tag_73, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_73:\n      tag_74\n      jump(tag_75)\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4003:4027  uint public _totalSupply */\n    tag_12:\n      jumpi(tag_76, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_76:\n      tag_77\n      jump(tag_78)\n    tag_77:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\n    tag_13:\n      jumpi(tag_79, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_79:\n      tag_80\n      jump(tag_81)\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":10678:10781  function getChallengeNumber() public constant returns (bytes32) {... */\n    tag_14:\n      jumpi(tag_82, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_82:\n      tag_83\n      jump(tag_84)\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4586:4613  uint public maxSupplyForEra */\n    tag_15:\n      jumpi(tag_85, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_85:\n      tag_86\n      jump(tag_87)\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":17074:18449  function mintWithoutPoW( ) public returns (bool success) {... */\n    tag_16:\n      jumpi(tag_88, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_88:\n      tag_89\n      jump(tag_90)\n    tag_89:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":16988:17067  function setTokensMinted(uint amt) public   {... */\n    tag_17:\n      jumpi(tag_91, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_91:\n      tag_92\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_93)\n    tag_92:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":4812:4836  uint public tokensMinted */\n    tag_18:\n      jumpi(tag_94, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_94:\n      tag_95\n      jump(tag_96)\n    tag_95:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4621:4648  address public lastRewardTo */\n    tag_19:\n      jumpi(tag_97, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_97:\n      tag_98\n      jump(tag_99)\n    tag_98:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":12645:12769  function balanceOf(address tokenOwner) public constant returns (uint balance) {... */\n    tag_20:\n      jumpi(tag_100, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_100:\n      tag_101\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_102)\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_21:\n      jumpi(tag_103, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_103:\n      tag_104\n      jump(tag_105)\n    tag_104:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":11779:12113  function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {... */\n    tag_22:\n      jumpi(tag_106, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_106:\n      tag_107\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_108)\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4087:4109  uint public epochCount */\n    tag_23:\n      jumpi(tag_109, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_109:\n      tag_110\n      jump(tag_111)\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4393:4430  uint public  _MAXIMUM_TARGET = 2**234 */\n    tag_24:\n      jumpi(tag_112, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_112:\n      tag_113\n      jump(tag_114)\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4438:4462  uint public miningTarget */\n    tag_25:\n      jumpi(tag_115, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_115:\n      tag_116\n      jump(tag_117)\n    tag_116:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4469:4499  bytes32 public challengeNumber */\n    tag_26:\n      jumpi(tag_118, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_118:\n      tag_119\n      jump(tag_120)\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_27:\n      jumpi(tag_121, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_121:\n      tag_122\n      jump(tag_123)\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":3922:3942  string public symbol */\n    tag_28:\n      jumpi(tag_124, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_124:\n      tag_125\n      jump(tag_126)\n    tag_125:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_127:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_128\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_127)\n    tag_128:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_130:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":11497:11734  function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {... */\n    tag_29:\n      jumpi(tag_131, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_131:\n      tag_132\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_133)\n    tag_132:\n      mload(0x40)\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":13118:13380  function transfer(address to, uint tokens) public returns (bool success) {... */\n    tag_30:\n      jumpi(tag_134, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_134:\n      tag_135\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_136)\n    tag_135:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4143:4186  uint public _BLOCKS_PER_READJUSTMENT = 1024 */\n    tag_31:\n      jumpi(tag_137, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_137:\n      tag_138\n      jump(tag_139)\n    tag_138:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4654:4682  uint public lastRewardAmount */\n    tag_32:\n      jumpi(tag_140, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_140:\n      tag_141\n      jump(tag_142)\n    tag_141:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":15779:16091  function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {... */\n    tag_33:\n      jumpi(tag_143, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_143:\n      tag_144\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_145)\n    tag_144:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4037:4078  uint public latestDifficultyPeriodStarted */\n    tag_34:\n      jumpi(tag_146, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_146:\n      tag_147\n      jump(tag_148)\n    tag_147:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_35:\n      jumpi(tag_149, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_149:\n      tag_150\n      jump(tag_151)\n    tag_150:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":16576:16760  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {... */\n    tag_36:\n      jumpi(tag_152, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_152:\n      tag_153\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_154)\n    tag_153:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":4216:4252  uint public  _MINIMUM_TARGET = 2**16 */\n    tag_37:\n      jumpi(tag_155, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_155:\n      tag_156\n      jump(tag_157)\n    tag_156:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":15262:15413  function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {... */\n    tag_38:\n      jumpi(tag_158, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_158:\n      tag_159\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_160)\n    tag_159:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_39:\n      jumpi(tag_161, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_161:\n      tag_162\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_163)\n    tag_162:\n      stop\n        /* \"contracts/0xBitcoinExtended.sol\":3949:3968  string public  name */\n    tag_44:\n      0x3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":13894:14097  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_51:\n        /* \"contracts/0xBitcoinExtended.sol\":13957:13969  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14013:14019  tokens */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":13982:13989  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14001  allowed[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13990:14000  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14001  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14010  allowed[msg.sender][spender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14002:14009  spender */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14010  allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13982:14019  allowed[msg.sender][spender] = tokens */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14051:14058  spender */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":14030:14067  Approval(msg.sender, spender, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":14039:14049  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":14030:14067  Approval(msg.sender, spender, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/0xBitcoinExtended.sol\":14060:14066  tokens */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":14030:14067  Approval(msg.sender, spender, tokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":14085:14089  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":14078:14089  return true */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":13894:14097  function approve(address spender, uint tokens) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4688:4724  uint public lastRewardEthBlockNumber */\n    tag_54:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":10870:10989  function getMiningDifficulty() public constant returns (uint) {... */\n    tag_57:\n        /* \"contracts/0xBitcoinExtended.sol\":10926:10930  uint */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10982  _MAXIMUM_TARGET.div(miningTarget) */\n      tag_169\n        /* \"contracts/0xBitcoinExtended.sol\":10969:10981  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10964  _MAXIMUM_TARGET */\n      sload(0xa)\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10968  _MAXIMUM_TARGET.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10949:10982  _MAXIMUM_TARGET.div(miningTarget) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/0xBitcoinExtended.sol\":10942:10982  return _MAXIMUM_TARGET.div(miningTarget) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10870:10989  function getMiningDifficulty() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":5878:7343  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {... */\n    tag_60:\n        /* \"contracts/0xBitcoinExtended.sol\":5949:5961  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6134:6148  bytes32 digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":6499:6515  bytes32 solution */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6722:6740  uint reward_amount */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":6162:6177  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":6179:6189  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":6191:6196  nonce */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":6152:6198  keccak256(challengeNumber, msg.sender, nonce ) */\n      mload(0x40)\n      dup1\n      dup5\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":6134:6198  bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce ) */\n      swap3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6286:6302  challenge_digest */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":6276:6302  digest != challenge_digest */\n      not(0x0)\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":6276:6282  digest */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":6276:6302  digest != challenge_digest */\n      not(0x0)\n      and\n      eq\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":6272:6312  if (digest != challenge_digest) revert() */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":6304:6312  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":6272:6312  if (digest != challenge_digest) revert() */\n    tag_172:\n        /* \"contracts/0xBitcoinExtended.sol\":6405:6417  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":6395:6401  digest */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":6387:6402  uint256(digest) */\n      0x1\n      swap1\n      div\n        /* \"contracts/0xBitcoinExtended.sol\":6387:6417  uint256(digest) > miningTarget */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":6384:6427  if(uint256(digest) > miningTarget) revert() */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":6419:6427  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":6384:6427  if(uint256(digest) > miningTarget) revert() */\n    tag_173:\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6538  solutionForChallenge */\n      0x13\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6555  solutionForChallenge[challengeNumber] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6539:6554  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":6518:6555  solutionForChallenge[challengeNumber] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":6499:6555  bytes32 solution = solutionForChallenge[challengeNumber] */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6610:6616  digest */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":6570:6590  solutionForChallenge */\n      0x13\n        /* \"contracts/0xBitcoinExtended.sol\":6570:6607  solutionForChallenge[challengeNumber] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6591:6606  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":6570:6607  solutionForChallenge[challengeNumber] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":6570:6616  solutionForChallenge[challengeNumber] = digest */\n      dup2\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6646:6649  0x0 */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6634:6649  solution != 0x0 */\n      0x1\n      mul\n        /* \"contracts/0xBitcoinExtended.sol\":6634:6642  solution */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":6634:6649  solution != 0x0 */\n      not(0x0)\n      and\n      eq\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":6631:6659  if(solution != 0x0) revert() */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":6651:6659  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":6631:6659  if(solution != 0x0) revert() */\n    tag_174:\n        /* \"contracts/0xBitcoinExtended.sol\":6743:6760  getMiningReward() */\n      tag_175\n        /* \"contracts/0xBitcoinExtended.sol\":6743:6758  getMiningReward */\n      tag_81\n        /* \"contracts/0xBitcoinExtended.sol\":6743:6760  getMiningReward() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/0xBitcoinExtended.sol\":6722:6760  uint reward_amount = getMiningReward() */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6837  balances[msg.sender].add(reward_amount) */\n      tag_176\n        /* \"contracts/0xBitcoinExtended.sol\":6823:6836  reward_amount */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6806  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6818  balances[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6807:6817  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6818  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6822  balances[msg.sender].add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":6798:6837  balances[msg.sender].add(reward_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6783  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6795  balances[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":6784:6794  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6795  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":6775:6837  balances[msg.sender] = balances[msg.sender].add(reward_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6898  tokensMinted.add(reward_amount) */\n      tag_178\n        /* \"contracts/0xBitcoinExtended.sol\":6884:6897  reward_amount */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6879  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6883  tokensMinted.add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":6867:6898  tokensMinted.add(reward_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/0xBitcoinExtended.sol\":6852:6864  tokensMinted */\n      0x14\n        /* \"contracts/0xBitcoinExtended.sol\":6852:6898  tokensMinted = tokensMinted.add(reward_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":6990:7005  maxSupplyForEra */\n      sload(0xe)\n        /* \"contracts/0xBitcoinExtended.sol\":6974:6986  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":6974:7005  tokensMinted <= maxSupplyForEra */\n      gt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":6967:7006  assert(tokensMinted <= maxSupplyForEra) */\n      iszero\n      iszero\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n        /* \"contracts/0xBitcoinExtended.sol\":7080:7090  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":7065:7077  lastRewardTo */\n      0xf\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":7065:7090  lastRewardTo = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7123:7136  reward_amount */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":7104:7120  lastRewardAmount */\n      0x10\n        /* \"contracts/0xBitcoinExtended.sol\":7104:7136  lastRewardAmount = reward_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7177:7189  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":7150:7174  lastRewardEthBlockNumber */\n      0x11\n        /* \"contracts/0xBitcoinExtended.sol\":7150:7189  lastRewardEthBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7206:7228  _startNewMiningEpoch() */\n      tag_180\n        /* \"contracts/0xBitcoinExtended.sol\":7206:7226  _startNewMiningEpoch */\n      tag_181\n        /* \"contracts/0xBitcoinExtended.sol\":7206:7228  _startNewMiningEpoch() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/0xBitcoinExtended.sol\":7250:7260  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":7245:7306  Mint(msg.sender, reward_amount, epochCount, challengeNumber ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d\n        /* \"contracts/0xBitcoinExtended.sol\":7262:7275  reward_amount */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":7277:7287  epochCount */\n      sload(0x7)\n        /* \"contracts/0xBitcoinExtended.sol\":7289:7304  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":7245:7306  Mint(msg.sender, reward_amount, epochCount, challengeNumber ) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/0xBitcoinExtended.sol\":7327:7331  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":7320:7331  return true */\n      swap4\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":5878:7343  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":12304:12420  function totalSupply() public constant returns (uint) {... */\n    tag_63:\n        /* \"contracts/0xBitcoinExtended.sol\":12352:12356  uint */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":12392:12400  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":12392:12412  balances[address(0)] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":12409:12410  0 */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":12392:12412  balances[address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":12376:12388  _totalSupply */\n      sload(0x5)\n        /* \"contracts/0xBitcoinExtended.sol\":12376:12412  _totalSupply  - balances[address(0)] */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":12369:12412  return _totalSupply  - balances[address(0)] */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":12304:12420  function totalSupply() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":14638:14976  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n    tag_66:\n        /* \"contracts/0xBitcoinExtended.sol\":14715:14727  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14783  balances[from].sub(tokens) */\n      tag_184\n        /* \"contracts/0xBitcoinExtended.sol\":14776:14782  tokens */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14765  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14771  balances[from] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14766:14770  from */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14771  balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14775  balances[from].sub */\n      tag_185\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14757:14783  balances[from].sub(tokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14748  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14754  balances[from] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14749:14753  from */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14754  balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14740:14783  balances[from] = balances[from].sub(tokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14859  allowed[from][msg.sender].sub(tokens) */\n      tag_186\n        /* \"contracts/0xBitcoinExtended.sol\":14852:14858  tokens */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14829  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14835  allowed[from] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14830:14834  from */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14835  allowed[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14847  allowed[from][msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14836:14846  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14847  allowed[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14851  allowed[from][msg.sender].sub */\n      tag_185\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14822:14859  allowed[from][msg.sender].sub(tokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14801  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14807  allowed[from] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14802:14806  from */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14807  allowed[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14819  allowed[from][msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14808:14818  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14819  allowed[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14794:14859  allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14909  balances[to].add(tokens) */\n      tag_187\n        /* \"contracts/0xBitcoinExtended.sol\":14902:14908  tokens */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14893  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14897  balances[to] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14894:14896  to */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14897  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14901  balances[to].add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":14885:14909  balances[to].add(tokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14878  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14882  balances[to] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":14879:14881  to */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14882  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":14870:14909  balances[to] = balances[to].add(tokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14935:14937  to */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":14920:14946  Transfer(from, to, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":14929:14933  from */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":14920:14946  Transfer(from, to, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/0xBitcoinExtended.sol\":14939:14945  tokens */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":14920:14946  Transfer(from, to, tokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":14964:14968  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":14957:14968  return true */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":14638:14976  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4559:4580  uint public rewardEra */\n    tag_69:\n      sload(0xd)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3975:3996  uint8 public decimals */\n    tag_72:\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":10995:11087  function getMiningTarget() public constant returns (uint) {... */\n    tag_75:\n        /* \"contracts/0xBitcoinExtended.sol\":11047:11051  uint */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":11069:11081  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":11062:11081  return miningTarget */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10995:11087  function getMiningTarget() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4003:4027  uint public _totalSupply */\n    tag_78:\n      sload(0x5)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\n    tag_81:\n        /* \"contracts/0xBitcoinExtended.sol\":11253:11257  uint */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n      tag_190\n        /* \"contracts/0xBitcoinExtended.sol\":11438:11447  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":11435:11436  2 */\n      0x2\n        /* \"contracts/0xBitcoinExtended.sol\":11435:11447  2**rewardEra */\n      exp\n        /* \"contracts/0xBitcoinExtended.sol\":11418:11426  decimals */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":11413:11427  uint(decimals) */\n      0xff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":11409:11411  10 */\n      0xa\n        /* \"contracts/0xBitcoinExtended.sol\":11409:11427  10**uint(decimals) */\n      exp\n        /* \"contracts/0xBitcoinExtended.sol\":11404:11406  50 */\n      0x32\n        /* \"contracts/0xBitcoinExtended.sol\":11404:11427  50 * 10**uint(decimals) */\n      mul\n        /* \"contracts/0xBitcoinExtended.sol\":11403:11433  (50 * 10**uint(decimals) ).div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":11403:11449  (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/0xBitcoinExtended.sol\":11396:11449  return (50 * 10**uint(decimals) ).div( 2**rewardEra ) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":11201:11458  function getMiningReward() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":10678:10781  function getChallengeNumber() public constant returns (bytes32) {... */\n    tag_84:\n        /* \"contracts/0xBitcoinExtended.sol\":10733:10740  bytes32 */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":10759:10774  challengeNumber */\n      sload(0xc)\n        /* \"contracts/0xBitcoinExtended.sol\":10752:10774  return challengeNumber */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10678:10781  function getChallengeNumber() public constant returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4586:4613  uint public maxSupplyForEra */\n    tag_87:\n      sload(0xe)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":17074:18449  function mintWithoutPoW( ) public returns (bool success) {... */\n    tag_90:\n        /* \"contracts/0xBitcoinExtended.sol\":17117:17129  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":17867:17885  uint reward_amount */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":17888:17905  getMiningReward() */\n      tag_193\n        /* \"contracts/0xBitcoinExtended.sol\":17888:17903  getMiningReward */\n      tag_81\n        /* \"contracts/0xBitcoinExtended.sol\":17888:17905  getMiningReward() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/0xBitcoinExtended.sol\":17867:17905  uint reward_amount = getMiningReward() */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17978  balances[msg.sender].add(reward_amount) */\n      tag_194\n        /* \"contracts/0xBitcoinExtended.sol\":17964:17977  reward_amount */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17947  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17959  balances[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":17948:17958  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17959  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17963  balances[msg.sender].add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":17939:17978  balances[msg.sender].add(reward_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17924  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17936  balances[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":17925:17935  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17936  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":17916:17978  balances[msg.sender] = balances[msg.sender].add(reward_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18035  tokensMinted.add(reward_amount) */\n      tag_195\n        /* \"contracts/0xBitcoinExtended.sol\":18021:18034  reward_amount */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18016  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18020  tokensMinted.add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":18004:18035  tokensMinted.add(reward_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/0xBitcoinExtended.sol\":17989:18001  tokensMinted */\n      0x14\n        /* \"contracts/0xBitcoinExtended.sol\":17989:18035  tokensMinted = tokensMinted.add(reward_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":18119:18134  maxSupplyForEra */\n      sload(0xe)\n        /* \"contracts/0xBitcoinExtended.sol\":18103:18115  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":18103:18134  tokensMinted <= maxSupplyForEra */\n      gt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":18096:18135  assert(tokensMinted <= maxSupplyForEra) */\n      iszero\n      iszero\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n        /* \"contracts/0xBitcoinExtended.sol\":18201:18211  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":18186:18198  lastRewardTo */\n      0xf\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":18186:18211  lastRewardTo = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":18240:18253  reward_amount */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":18221:18237  lastRewardAmount */\n      0x10\n        /* \"contracts/0xBitcoinExtended.sol\":18221:18253  lastRewardAmount = reward_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":18290:18302  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":18263:18287  lastRewardEthBlockNumber */\n      0x11\n        /* \"contracts/0xBitcoinExtended.sol\":18263:18302  lastRewardEthBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":18318:18340  _startNewMiningEpoch() */\n      tag_197\n        /* \"contracts/0xBitcoinExtended.sol\":18318:18338  _startNewMiningEpoch */\n      tag_181\n        /* \"contracts/0xBitcoinExtended.sol\":18318:18340  _startNewMiningEpoch() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/0xBitcoinExtended.sol\":18437:18441  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":18430:18441  return true */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":17074:18449  function mintWithoutPoW( ) public returns (bool success) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":16988:17067  function setTokensMinted(uint amt) public   {... */\n    tag_93:\n        /* \"contracts/0xBitcoinExtended.sol\":17057:17060  amt */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":17042:17054  tokensMinted */\n      0x14\n        /* \"contracts/0xBitcoinExtended.sol\":17042:17060  tokensMinted = amt */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":16988:17067  function setTokensMinted(uint amt) public   {... */\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4812:4836  uint public tokensMinted */\n    tag_96:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4621:4648  address public lastRewardTo */\n    tag_99:\n      0xf\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":12645:12769  function balanceOf(address tokenOwner) public constant returns (uint balance) {... */\n    tag_102:\n        /* \"contracts/0xBitcoinExtended.sol\":12709:12721  uint balance */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12749  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12761  balances[tokenOwner] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":12750:12760  tokenOwner */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":12741:12761  balances[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":12734:12761  return balances[tokenOwner] */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":12645:12769  function balanceOf(address tokenOwner) public constant returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n    tag_105:\n        /* \"contracts/0xBitcoinExtended.sol\":3412:3420  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3408  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":3398:3420  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3390:3421  require(msg.sender == newOwner) */\n      iszero\n      iszero\n      tag_201\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_201:\n        /* \"contracts/0xBitcoinExtended.sol\":3460:3468  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3432:3469  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3453:3458  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3432:3469  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":3488:3496  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3485  owner */\n      0x0\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":3480:3496  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":3526:3527  0 */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3507:3515  newOwner */\n      0x1\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3507:3528  newOwner = address(0) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":3345:3536  function acceptOwnership() public {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":11779:12113  function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {... */\n    tag_108:\n        /* \"contracts/0xBitcoinExtended.sol\":11911:11923  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":11938:11952  bytes32 digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":11965:11981  challenge_number */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":11982:11992  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":11993:11998  nonce */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":11955:11999  keccak256(challenge_number,msg.sender,nonce) */\n      mload(0x40)\n      dup1\n      dup5\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":11938:11999  bytes32 digest = keccak256(challenge_number,msg.sender,nonce) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":12033:12043  testTarget */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":12023:12029  digest */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":12015:12030  uint256(digest) */\n      0x1\n      swap1\n      div\n        /* \"contracts/0xBitcoinExtended.sol\":12015:12043  uint256(digest) > testTarget */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":12012:12053  if(uint256(digest) > testTarget) revert() */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":12045:12053  revert() */\n      0x0\n      dup1\n      revert\n        /* \"contracts/0xBitcoinExtended.sol\":12012:12053  if(uint256(digest) > testTarget) revert() */\n    tag_203:\n        /* \"contracts/0xBitcoinExtended.sol\":12084:12100  challenge_digest */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":12074:12100  digest == challenge_digest */\n      not(0x0)\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":12074:12080  digest */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":12074:12100  digest == challenge_digest */\n      not(0x0)\n      and\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":12066:12101  return (digest == challenge_digest) */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":11779:12113  function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {... */\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4087:4109  uint public epochCount */\n    tag_111:\n      sload(0x7)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4393:4430  uint public  _MAXIMUM_TARGET = 2**234 */\n    tag_114:\n      sload(0xa)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4438:4462  uint public miningTarget */\n    tag_117:\n      sload(0xb)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4469:4499  bytes32 public challengeNumber */\n    tag_120:\n      sload(0xc)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2948:2968  address public owner */\n    tag_123:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3922:3942  string public symbol */\n    tag_126:\n      0x2\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_205\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_204)\n    tag_205:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_206:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_206\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":11497:11734  function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {... */\n    tag_133:\n        /* \"contracts/0xBitcoinExtended.sol\":11608:11626  bytes32 digesttest */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":11639:11653  bytes32 digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":11666:11682  challenge_number */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":11683:11693  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":11694:11699  nonce */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":11656:11700  keccak256(challenge_number,msg.sender,nonce) */\n      mload(0x40)\n      dup1\n      dup5\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":11639:11700  bytes32 digest = keccak256(challenge_number,msg.sender,nonce) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":11718:11724  digest */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":11711:11724  return digest */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":11497:11734  function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":13118:13380  function transfer(address to, uint tokens) public returns (bool success) {... */\n    tag_136:\n        /* \"contracts/0xBitcoinExtended.sol\":13177:13189  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13257  balances[msg.sender].sub(tokens) */\n      tag_209\n        /* \"contracts/0xBitcoinExtended.sol\":13250:13256  tokens */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13233  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13245  balances[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13234:13244  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13245  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13249  balances[msg.sender].sub */\n      tag_185\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":13225:13257  balances[msg.sender].sub(tokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13210  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13222  balances[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13211:13221  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13222  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13202:13257  balances[msg.sender] = balances[msg.sender].sub(tokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13307  balances[to].add(tokens) */\n      tag_210\n        /* \"contracts/0xBitcoinExtended.sol\":13300:13306  tokens */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13291  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13295  balances[to] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13292:13294  to */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13295  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13299  balances[to].add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":13283:13307  balances[to].add(tokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13276  balances */\n      0x15\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13280  balances[to] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":13277:13279  to */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13280  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":13268:13307  balances[to] = balances[to].add(tokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":13339:13341  to */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":13318:13350  Transfer(msg.sender, to, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":13327:13337  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":13318:13350  Transfer(msg.sender, to, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/0xBitcoinExtended.sol\":13343:13349  tokens */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":13318:13350  Transfer(msg.sender, to, tokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":13368:13372  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":13361:13372  return true */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":13118:13380  function transfer(address to, uint tokens) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4143:4186  uint public _BLOCKS_PER_READJUSTMENT = 1024 */\n    tag_139:\n      sload(0x8)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4654:4682  uint public lastRewardAmount */\n    tag_142:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":15779:16091  function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {... */\n    tag_145:\n        /* \"contracts/0xBitcoinExtended.sol\":15861:15873  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15917:15923  tokens */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15893  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15905  allowed[msg.sender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15894:15904  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15905  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15914  allowed[msg.sender][spender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15906:15913  spender */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15914  allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":15886:15923  allowed[msg.sender][spender] = tokens */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":15955:15962  spender */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":15934:15971  Approval(msg.sender, spender, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":15943:15953  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":15934:15971  Approval(msg.sender, spender, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/0xBitcoinExtended.sol\":15964:15970  tokens */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":15934:15971  Approval(msg.sender, spender, tokens) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/0xBitcoinExtended.sol\":16005:16012  spender */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":15982:16029  ApproveAndCallFallBack(spender).receiveApproval */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8f4ffcb1\n        /* \"contracts/0xBitcoinExtended.sol\":16030:16040  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":16042:16048  tokens */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":16050:16054  this */\n      address\n        /* \"contracts/0xBitcoinExtended.sol\":16056:16060  data */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":15982:16061  ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_212:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_212)\n    tag_213:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_215:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_217\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_217:\n      pop\n      pop\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":16079:16083  true */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":16072:16083  return true */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":15779:16091  function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4037:4078  uint public latestDifficultyPeriodStarted */\n    tag_148:\n      sload(0x6)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":2975:2998  address public newOwner */\n    tag_151:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":16576:16760  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {... */\n    tag_154:\n        /* \"contracts/0xBitcoinExtended.sol\":16668:16680  bool success */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/0xBitcoinExtended.sol\":16715:16727  tokenAddress */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":16700:16737  ERC20Interface(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/0xBitcoinExtended.sol\":16738:16743  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":16745:16751  tokens */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":16700:16752  ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_221\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_221:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":16693:16752  return ERC20Interface(tokenAddress).transfer(owner, tokens) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":16576:16760  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":4216:4252  uint public  _MINIMUM_TARGET = 2**16 */\n    tag_157:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":15262:15413  function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {... */\n    tag_160:\n        /* \"contracts/0xBitcoinExtended.sol\":15343:15357  uint remaining */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15384  allowed */\n      0x16\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15396  allowed[tokenOwner] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15385:15395  tokenOwner */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15396  allowed[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15405  allowed[tokenOwner][spender] */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":15397:15404  spender */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":15377:15405  allowed[tokenOwner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/0xBitcoinExtended.sol\":15370:15405  return allowed[tokenOwner][spender] */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":15262:15413  function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_163:\n        /* \"contracts/0xBitcoinExtended.sol\":3204:3209  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3200  msg.sender */\n      caller\n        /* \"contracts/0xBitcoinExtended.sol\":3190:3209  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":3182:3210  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_225\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_225:\n        /* \"contracts/0xBitcoinExtended.sol\":3322:3331  _newOwner */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3319  newOwner */\n      0x1\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":3311:3331  newOwner = _newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":3237:3339  function transferOwnership(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\n    tag_170:\n        /* \"contracts/0xBitcoinExtended.sol\":1080:1086  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":1111:1112  0 */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":1107:1108  b */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":1107:1112  b > 0 */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":1099:1113  require(b > 0) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/0xBitcoinExtended.sol\":1132:1133  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1128:1129  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":1128:1133  a / b */\n      dup2\n      iszero\n      iszero\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      div\n        /* \"contracts/0xBitcoinExtended.sol\":1124:1133  c = a / b */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":1028:1141  function div(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\n    tag_177:\n        /* \"contracts/0xBitcoinExtended.sol\":706:712  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":733:734  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":729:730  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":729:734  a + b */\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":725:734  c = a + b */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":758:759  a */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":753:754  c */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":753:759  c >= a */\n      lt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":745:760  require(c >= a) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/0xBitcoinExtended.sol\":654:768  function add(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\n    tag_181:\n        /* \"contracts/0xBitcoinExtended.sol\":7749:7764  maxSupplyForEra */\n      sload(0xe)\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n      tag_233\n        /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n      tag_234\n        /* \"contracts/0xBitcoinExtended.sol\":7728:7743  getMiningReward */\n      tag_81\n        /* \"contracts/0xBitcoinExtended.sol\":7728:7745  getMiningReward() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7723  tokensMinted */\n      sload(0x14)\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7727  tokensMinted.add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7746  tokensMinted.add(getMiningReward()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7764  tokensMinted.add(getMiningReward()) > maxSupplyForEra */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7780:7782  39 */\n      0x27\n        /* \"contracts/0xBitcoinExtended.sol\":7768:7777  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":7768:7782  rewardEra < 39 */\n      lt\n        /* \"contracts/0xBitcoinExtended.sol\":7711:7782  tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39 */\n    tag_235:\n        /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":7824:7825  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":7812:7821  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":7812:7825  rewardEra + 1 */\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":7800:7809  rewardEra */\n      0xd\n        /* \"contracts/0xBitcoinExtended.sol\":7800:7825  rewardEra = rewardEra + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7707:7834  if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)... */\n    tag_236:\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n      tag_237\n        /* \"contracts/0xBitcoinExtended.sol\":8044:8045  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":8032:8041  rewardEra */\n      sload(0xd)\n        /* \"contracts/0xBitcoinExtended.sol\":8032:8045  rewardEra + 1 */\n      add\n        /* \"contracts/0xBitcoinExtended.sol\":8028:8029  2 */\n      0x2\n        /* \"contracts/0xBitcoinExtended.sol\":8028:8046  2**(rewardEra + 1) */\n      exp\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8022  _totalSupply */\n      sload(0x5)\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8026  _totalSupply.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":8010:8047  _totalSupply.div( 2**(rewardEra + 1)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/0xBitcoinExtended.sol\":7995:8007  _totalSupply */\n      sload(0x5)\n        /* \"contracts/0xBitcoinExtended.sol\":7995:8047  _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":7977:7992  maxSupplyForEra */\n      0xe\n        /* \"contracts/0xBitcoinExtended.sol\":7977:8047  maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n      tag_238\n        /* \"contracts/0xBitcoinExtended.sol\":8084:8085  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8079  epochCount */\n      sload(0x7)\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8083  epochCount.add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":8069:8086  epochCount.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/0xBitcoinExtended.sol\":8056:8066  epochCount */\n      0x7\n        /* \"contracts/0xBitcoinExtended.sol\":8056:8086  epochCount = epochCount.add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":8213:8214  0 */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":8185:8209  _BLOCKS_PER_READJUSTMENT */\n      sload(0x8)\n        /* \"contracts/0xBitcoinExtended.sol\":8172:8182  epochCount */\n      sload(0x7)\n        /* \"contracts/0xBitcoinExtended.sol\":8172:8209  epochCount % _BLOCKS_PER_READJUSTMENT */\n      dup2\n      iszero\n      iszero\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      mod\n        /* \"contracts/0xBitcoinExtended.sol\":8172:8214  epochCount % _BLOCKS_PER_READJUSTMENT == 0 */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":8169:8262  if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n      tag_241\n        /* \"contracts/0xBitcoinExtended.sol\":8232:8251  _reAdjustDifficulty */\n      tag_242\n        /* \"contracts/0xBitcoinExtended.sol\":8232:8253  _reAdjustDifficulty() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/0xBitcoinExtended.sol\":8169:8262  if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)... */\n    tag_240:\n        /* \"contracts/0xBitcoinExtended.sol\":8518:8519  1 */\n      0x1\n        /* \"contracts/0xBitcoinExtended.sol\":8503:8515  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":8503:8519  block.number - 1 */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":8487:8520  block.blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/0xBitcoinExtended.sol\":8469:8484  challengeNumber */\n      0xc\n        /* \"contracts/0xBitcoinExtended.sol\":8469:8520  challengeNumber = block.blockhash(block.number - 1) */\n      dup2\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":7382:8533  function _startNewMiningEpoch() internal {... */\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\n    tag_185:\n        /* \"contracts/0xBitcoinExtended.sol\":826:832  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":858:859  a */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":853:854  b */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":853:859  b <= a */\n      gt\n      iszero\n        /* \"contracts/0xBitcoinExtended.sol\":845:860  require(b <= a) */\n      iszero\n      iszero\n      tag_244\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_244:\n        /* \"contracts/0xBitcoinExtended.sol\":879:880  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":875:876  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":875:880  a - b */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":871:880  c = a - b */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":774:888  function sub(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\n    tag_242:\n        /* \"contracts/0xBitcoinExtended.sol\":8809:8848  uint ethBlocksSinceLastDifficultyPeriod */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":9066:9082  uint epochsMined */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":9126:9159  uint targetEthBlocksPerDiffPeriod */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":9392:9413  uint excess_block_pct */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":9510:9537  uint excess_block_pct_extra */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":9901:9924  uint shortage_block_pct */\n      dup1\n        /* \"contracts/0xBitcoinExtended.sol\":10021:10050  uint shortage_block_pct_extra */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":8866:8895  latestDifficultyPeriodStarted */\n      sload(0x6)\n        /* \"contracts/0xBitcoinExtended.sol\":8851:8863  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":8851:8895  block.number - latestDifficultyPeriodStarted */\n      sub\n        /* \"contracts/0xBitcoinExtended.sol\":8809:8895  uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted */\n      swap7\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9085:9109  _BLOCKS_PER_READJUSTMENT */\n      sload(0x8)\n        /* \"contracts/0xBitcoinExtended.sol\":9066:9109  uint epochsMined = _BLOCKS_PER_READJUSTMENT */\n      swap6\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9176:9178  60 */\n      0x3c\n        /* \"contracts/0xBitcoinExtended.sol\":9162:9173  epochsMined */\n      dup7\n        /* \"contracts/0xBitcoinExtended.sol\":9162:9178  epochsMined * 60 */\n      mul\n        /* \"contracts/0xBitcoinExtended.sol\":9126:9178  uint targetEthBlocksPerDiffPeriod = epochsMined * 60 */\n      swap5\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9341:9369  targetEthBlocksPerDiffPeriod */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":9304:9338  ethBlocksSinceLastDifficultyPeriod */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":9304:9369  ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod */\n      lt\n        /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      tag_247\n        /* \"contracts/0xBitcoinExtended.sol\":9461:9495  ethBlocksSinceLastDifficultyPeriod */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n      tag_248\n        /* \"contracts/0xBitcoinExtended.sol\":9450:9453  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9445  targetEthBlocksPerDiffPeriod */\n      dup9\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9449  targetEthBlocksPerDiffPeriod.mul */\n      tag_249\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9417:9454  targetEthBlocksPerDiffPeriod.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9459  (targetEthBlocksPerDiffPeriod.mul(100)).div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9416:9497  (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/0xBitcoinExtended.sol\":9392:9497  uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod ) */\n      swap4\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n      tag_250\n        /* \"contracts/0xBitcoinExtended.sol\":9580:9584  1000 */\n      0x3e8\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n      tag_251\n        /* \"contracts/0xBitcoinExtended.sol\":9561:9564  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9556  excess_block_pct */\n      dup8\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9560  excess_block_pct.sub */\n      tag_185\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9565  excess_block_pct.sub(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9579  excess_block_pct.sub(100).limitLessThan */\n      tag_252\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9540:9585  excess_block_pct.sub(100).limitLessThan(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/0xBitcoinExtended.sol\":9510:9585  uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000) */\n      swap3\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      tag_253\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n      tag_254\n        /* \"contracts/0xBitcoinExtended.sol\":9832:9854  excess_block_pct_extra */\n      dup5\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n      tag_255\n        /* \"contracts/0xBitcoinExtended.sol\":9822:9826  2000 */\n      0x7d0\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9817  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9821  miningTarget.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9827  miningTarget.div(2000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9831  miningTarget.div(2000).mul */\n      tag_249\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9805:9855  miningTarget.div(2000).mul(excess_block_pct_extra) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9800  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9804  miningTarget.sub */\n      tag_185\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9788:9856  miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/0xBitcoinExtended.sol\":9773:9785  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":9773:9856  miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n      jump(tag_256)\n    tag_246:\n        /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n      tag_257\n        /* \"contracts/0xBitcoinExtended.sol\":9978:10006  targetEthBlocksPerDiffPeriod */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n      tag_258\n        /* \"contracts/0xBitcoinExtended.sol\":9967:9970  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9962  ethBlocksSinceLastDifficultyPeriod */\n      dup11\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9966  ethBlocksSinceLastDifficultyPeriod.mul */\n      tag_249\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9928:9971  ethBlocksSinceLastDifficultyPeriod.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"contracts/0xBitcoinExtended.sol\":9927:9976  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":9927:10008  (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/0xBitcoinExtended.sol\":9901:10008  uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod ) */\n      swap2\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n      tag_259\n        /* \"contracts/0xBitcoinExtended.sol\":10095:10099  1000 */\n      0x3e8\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n      tag_260\n        /* \"contracts/0xBitcoinExtended.sol\":10076:10079  100 */\n      0x64\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10071  shortage_block_pct */\n      dup6\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10075  shortage_block_pct.sub */\n      tag_185\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10080  shortage_block_pct.sub(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10094  shortage_block_pct.sub(100).limitLessThan */\n      tag_252\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10053:10100  shortage_block_pct.sub(100).limitLessThan(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/0xBitcoinExtended.sol\":10021:10100  uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000) */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      tag_261\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n      tag_262\n        /* \"contracts/0xBitcoinExtended.sol\":10227:10251  shortage_block_pct_extra */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n      tag_263\n        /* \"contracts/0xBitcoinExtended.sol\":10217:10221  2000 */\n      0x7d0\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10212  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10216  miningTarget.div */\n      tag_170\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10222  miningTarget.div(2000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10226  miningTarget.div(2000).mul */\n      tag_249\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10200:10252  miningTarget.div(2000).mul(shortage_block_pct_extra) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10195  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10199  miningTarget.add */\n      tag_177\n      swap1\n        /* \"contracts/0xBitcoinExtended.sol\":10183:10253  miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"contracts/0xBitcoinExtended.sol\":10168:10180  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":10168:10253  miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":9300:10282  if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )... */\n    tag_256:\n        /* \"contracts/0xBitcoinExtended.sol\":10326:10338  block.number */\n      number\n        /* \"contracts/0xBitcoinExtended.sol\":10294:10323  latestDifficultyPeriodStarted */\n      0x6\n        /* \"contracts/0xBitcoinExtended.sol\":10294:10338  latestDifficultyPeriodStarted = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10367:10382  _MINIMUM_TARGET */\n      sload(0x9)\n        /* \"contracts/0xBitcoinExtended.sol\":10352:10364  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10352:10382  miningTarget < _MINIMUM_TARGET */\n      lt\n        /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":10436:10451  _MINIMUM_TARGET */\n      sload(0x9)\n        /* \"contracts/0xBitcoinExtended.sol\":10421:10433  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":10421:10451  miningTarget = _MINIMUM_TARGET */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10349:10462  if(miningTarget < _MINIMUM_TARGET) //very difficult... */\n    tag_264:\n        /* \"contracts/0xBitcoinExtended.sol\":10490:10505  _MAXIMUM_TARGET */\n      sload(0xa)\n        /* \"contracts/0xBitcoinExtended.sol\":10475:10487  miningTarget */\n      sload(0xb)\n        /* \"contracts/0xBitcoinExtended.sol\":10475:10505  miningTarget > _MAXIMUM_TARGET */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":10554:10569  _MAXIMUM_TARGET */\n      sload(0xa)\n        /* \"contracts/0xBitcoinExtended.sol\":10539:10551  miningTarget */\n      0xb\n        /* \"contracts/0xBitcoinExtended.sol\":10539:10569  miningTarget = _MAXIMUM_TARGET */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":10472:10580  if(miningTarget > _MAXIMUM_TARGET) //very easy... */\n    tag_265:\n        /* \"contracts/0xBitcoinExtended.sol\":8757:10586  function _reAdjustDifficulty() internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":894:1022  function mul(uint a, uint b) internal pure returns (uint c) {... */\n    tag_249:\n        /* \"contracts/0xBitcoinExtended.sol\":946:952  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":973:974  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":969:970  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":969:974  a * b */\n      mul\n        /* \"contracts/0xBitcoinExtended.sol\":965:974  c = a * b */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":998:999  0 */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":993:994  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":993:999  a == 0 */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\n      dup1\n      tag_267\n      jumpi\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":1012:1013  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1007:1008  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":1003:1004  c */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":1003:1008  c / a */\n      dup2\n      iszero\n      iszero\n      tag_268\n      jumpi\n      invalid\n    tag_268:\n      div\n        /* \"contracts/0xBitcoinExtended.sol\":1003:1013  c / a == b */\n      eq\n        /* \"contracts/0xBitcoinExtended.sol\":993:1013  a == 0 || c / a == b */\n    tag_267:\n        /* \"contracts/0xBitcoinExtended.sol\":985:1014  require(a == 0 || c / a == b) */\n      iszero\n      iszero\n      tag_269\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_269:\n        /* \"contracts/0xBitcoinExtended.sol\":894:1022  function mul(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\n    tag_252:\n        /* \"contracts/0xBitcoinExtended.sol\":1291:1297  uint c */\n      0x0\n        /* \"contracts/0xBitcoinExtended.sol\":1317:1318  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1313:1314  a */\n      dup4\n        /* \"contracts/0xBitcoinExtended.sol\":1313:1318  a > b */\n      gt\n        /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/0xBitcoinExtended.sol\":1327:1328  b */\n      dup2\n        /* \"contracts/0xBitcoinExtended.sol\":1320:1328  return b */\n      swap1\n      pop\n      jump(tag_270)\n        /* \"contracts/0xBitcoinExtended.sol\":1310:1328  if(a > b) return b */\n    tag_271:\n        /* \"contracts/0xBitcoinExtended.sol\":1346:1347  a */\n      dup3\n        /* \"contracts/0xBitcoinExtended.sol\":1339:1347  return a */\n      swap1\n      pop\n        /* \"contracts/0xBitcoinExtended.sol\":1229:1355  function limitLessThan(uint a, uint b) internal pure returns (uint c) {... */\n    tag_270:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820378a2814ff16d98526eee2390febba1110f7e47bbf0e39cb4231866e968ceb490029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH2 0x400 PUSH1 0x8 SSTORE PUSH3 0x10000 PUSH1 0x9 SSTORE PUSH30 0x40000000000000000000000000000000000000000000000000000000000 PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0x12 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE ISZERO PUSH3 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH3 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078425443000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x143 SWAP3 SWAP2 SWAP1 PUSH3 0x6F9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078426974636F696E20546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x191 SWAP3 SWAP2 SWAP1 PUSH3 0x6F9 JUMP JUMPDEST POP PUSH1 0x8 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0x1406F40 MUL PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x12 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x14 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH3 0x23C PUSH1 0x2 PUSH1 0x5 SLOAD PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x270 PUSH3 0x29C PUSH5 0x100000000 MUL PUSH3 0x1F45 OR PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x7A8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH3 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH3 0x293 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH3 0x2E1 PUSH3 0x2C1 PUSH3 0x3B1 PUSH5 0x100000000 MUL PUSH3 0x12F6 OR PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH3 0x3F8 PUSH5 0x100000000 MUL PUSH3 0x1F29 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST GT DUP1 ISZERO PUSH3 0x2F1 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH3 0x304 JUMPI PUSH1 0x1 PUSH1 0xD SLOAD ADD PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH3 0x331 PUSH1 0x1 PUSH1 0xD SLOAD ADD PUSH1 0x2 EXP PUSH1 0x5 SLOAD PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x5 SLOAD SUB PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH3 0x361 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH3 0x3F8 PUSH5 0x100000000 MUL PUSH3 0x1F29 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP2 ISZERO ISZERO PUSH3 0x379 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH3 0x3A0 JUMPI PUSH3 0x39F PUSH3 0x415 PUSH5 0x100000000 MUL PUSH3 0x2016 OR PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST JUMPDEST PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0xC DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F3 PUSH1 0xD SLOAD PUSH1 0x2 EXP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x32 MUL PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SLOAD NUMBER SUB SWAP7 POP PUSH1 0x8 SLOAD SWAP6 POP PUSH1 0x3C DUP7 MUL SWAP5 POP DUP5 DUP8 LT ISZERO PUSH3 0x546 JUMPI PUSH3 0x481 DUP8 PUSH3 0x464 PUSH1 0x64 DUP9 PUSH3 0x68A PUSH5 0x100000000 MUL PUSH3 0x21A7 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST SWAP4 POP PUSH3 0x4CB PUSH2 0x3E8 PUSH3 0x4AE PUSH1 0x64 DUP8 PUSH3 0x6BE PUSH5 0x100000000 MUL PUSH3 0x1FFA OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x6DB PUSH5 0x100000000 MUL PUSH3 0x21D8 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST SWAP3 POP PUSH3 0x53A PUSH3 0x51A DUP5 PUSH3 0x4FD PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x68A PUSH5 0x100000000 MUL PUSH3 0x21A7 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0xB SLOAD PUSH3 0x6BE PUSH5 0x100000000 MUL PUSH3 0x1FFA OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH3 0x64C JUMP JUMPDEST PUSH3 0x58C DUP6 PUSH3 0x56F PUSH1 0x64 DUP11 PUSH3 0x68A PUSH5 0x100000000 MUL PUSH3 0x21A7 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST SWAP2 POP PUSH3 0x5D6 PUSH2 0x3E8 PUSH3 0x5B9 PUSH1 0x64 DUP6 PUSH3 0x6BE PUSH5 0x100000000 MUL PUSH3 0x1FFA OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x6DB PUSH5 0x100000000 MUL PUSH3 0x21D8 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST SWAP1 POP PUSH3 0x645 PUSH3 0x625 DUP3 PUSH3 0x608 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH3 0x276 PUSH5 0x100000000 MUL PUSH3 0x1F05 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x68A PUSH5 0x100000000 MUL PUSH3 0x21A7 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0xB SLOAD PUSH3 0x3F8 PUSH5 0x100000000 MUL PUSH3 0x1F29 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH3 0x66A JUMPI PUSH1 0x9 SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH3 0x681 JUMPI PUSH1 0xA SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 MUL SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH3 0x6AC JUMPI POP DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH3 0x6A9 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH3 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH3 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH3 0x6EF JUMPI DUP2 SWAP1 POP PUSH3 0x6F3 JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x73C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x76D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x76D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x76C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x74F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x77C SWAP2 SWAP1 PUSH3 0x780 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x7A5 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x7A1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x787 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2220 DUP1 PUSH3 0x7B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x163AA00D EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x5515A1EA EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x5CE7E030 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x6FD396D6 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x84B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x8FE JUMPI DUP1 PUSH4 0xBAFEDCAA EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x950 JUMPI DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0xA6B JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0xAC5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xAEE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F0 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x230 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x215 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x301 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x372 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x414 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43D PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x495 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BE PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E7 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x518 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x541 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1469 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x591 PUSH2 0x1473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5BA PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x633 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65C PUSH2 0x14E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CF PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F8 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x721 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74A PUSH2 0x172E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77B PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D0 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x810 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x886 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x17F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x911 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93A PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D3 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA00 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAAB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD8 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB44 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E66 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC29 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC0C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x16 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD42 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC SLOAD CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP3 POP DUP5 PUSH1 0x0 NOT AND DUP4 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP4 PUSH1 0x1 SWAP1 DIV GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP3 PUSH1 0x13 PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 MUL DUP3 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE47 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH2 0xE9B DUP2 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEF3 DUP2 PUSH1 0x14 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x14 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0xF09 JUMPI INVALID JUMPDEST CALLER PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0xF60 PUSH2 0x1F45 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D DUP3 PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1076 DUP3 PUSH1 0x15 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1148 DUP3 PUSH1 0x16 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x121A DUP3 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 PUSH1 0xD SLOAD PUSH1 0x2 EXP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x32 MUL PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1348 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x139C DUP2 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13F4 DUP2 PUSH1 0x14 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x14 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x140A JUMPI INVALID JUMPDEST CALLER PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0x1461 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x14 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x1 SWAP1 DIV GT ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x0 NOT AND DUP2 PUSH1 0x0 NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x17EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP3 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1959 DUP3 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x16 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F4FFCB1 CALLER DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BD9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C21 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1DC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x1F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x1F20 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1F64 PUSH2 0x1F53 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1F73 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x1 PUSH1 0xD SLOAD ADD PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1FA2 PUSH1 0x1 PUSH1 0xD SLOAD ADD PUSH1 0x2 EXP PUSH1 0x5 SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SUB PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1FC2 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1FD9 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1FE9 JUMPI PUSH2 0x1FE8 PUSH2 0x2016 JUMP JUMPDEST JUMPDEST PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0xC DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x200B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SLOAD NUMBER SUB SWAP7 POP PUSH1 0x8 SLOAD SWAP6 POP PUSH1 0x3C DUP7 MUL SWAP5 POP DUP5 DUP8 LT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x2061 DUP8 PUSH2 0x2053 PUSH1 0x64 DUP9 PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x208B PUSH2 0x3E8 PUSH2 0x207D PUSH1 0x64 DUP8 PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x20CA PUSH2 0x20B9 DUP5 PUSH2 0x20AB PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x216B JUMP JUMPDEST PUSH2 0x20FB DUP6 PUSH2 0x20ED PUSH1 0x64 DUP11 PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2125 PUSH2 0x3E8 PUSH2 0x2117 PUSH1 0x64 DUP6 PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2164 PUSH2 0x2153 DUP3 PUSH2 0x2145 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH2 0x2188 JUMPI PUSH1 0x9 SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x219E JUMPI PUSH1 0xA SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 MUL SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x21C7 JUMPI POP DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH2 0x21C4 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x21EA JUMPI DUP2 SWAP1 POP PUSH2 0x21EE JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATACOPY DUP11 0x28 EQ SELFDESTRUCT AND 0xd9 DUP6 0x26 0xee 0xe2 CODECOPY 0xf 0xeb 0xba GT LT 0xf7 0xe4 PUSH28 0xBF0E39CB4231866E968CEB4900290000000000000000000000000000 ",
              "sourceMap": "3801:14652:0:-;;;4182:4;4143:43;;4247:5;4216:36;;4424:6;4393:37;;4745:5;4731:19;;;;;;;;;;;;;;;;;;;;5230:635;;;;;;;;3127:10;3119:5;;:18;;;;;;;;;;;;;;;;;;3204:5;;;;;;;;;;;3190:19;;:10;:19;;;3182:28;;;;;;;;5286:16;;;;;;;;;;;;;;;;;;:6;:16;;;;;;;;;;;;:::i;:::-;;5313:24;;;;;;;;;;;;;;;;;;:4;:24;;;;;;;;;;;;:::i;:::-;;5359:1;5348:8;;:12;;;;;;;;;;;;;;;;;;5406:8;;;;;;;;;;;5401:14;;5397:2;:18;5386:8;:29;5371:12;:44;;;;5429:6;;;;;;;;;;;5426:19;;;5437:8;;;5426:19;5464:4;5455:6;;:13;;;;;;;;;;;;;;;;;;5494:1;5479:12;:16;;;;5518:1;5506:9;:13;;;;5547:19;5564:1;5547:12;;:16;;;;;;:19;;;;;:::i;:::-;5529:15;:37;;;;5592:15;;5577:12;:30;;;;5650:12;5618:29;:44;;;;5673:22;:20;;;;;:22;;;:::i;:::-;3801:14652;;1028:113;1080:6;1111:1;1107;:5;1099:14;;;;;;;;1132:1;1128;:5;;;;;;;;1124:9;;1028:113;;;;:::o;7382:1151::-;7749:15;;7711:35;7728:17;:15;;;;;:17;;;:::i;:::-;7711:12;;:16;;;;;;:35;;;;;:::i;:::-;:53;:71;;;;;7780:2;7768:9;;:14;7711:71;7707:127;;;7824:1;7812:9;;:13;7800:9;:25;;;;7707:127;8010:37;8044:1;8032:9;;:13;8028:1;:18;8010:12;;:16;;;;;;:37;;;;;:::i;:::-;7995:12;;:52;7977:15;:70;;;;8069:17;8084:1;8069:10;;:14;;;;;;:17;;;;;:::i;:::-;8056:10;:30;;;;8213:1;8185:24;;8172:10;;:37;;;;;;;;:42;8169:93;;;8232:21;:19;;;;;:21;;;:::i;:::-;8169:93;8518:1;8503:12;:16;8487:33;8469:15;:51;;;;;;;7382:1151::o;11201:257::-;11253:4;11403:46;11438:9;;11435:1;:12;11418:8;;;;;;;;;;;11413:14;;11409:2;:18;11404:2;:23;11403:30;;;;;;:46;;;;;:::i;:::-;11396:53;;11201:257;:::o;654:114::-;706:6;733:1;729;:5;725:9;;758:1;753;:6;;745:15;;;;;;;;654:114;;;;:::o;8757:1829::-;8809:39;9066:16;9126:33;9392:21;9510:27;9901:23;10021:29;8866;;8851:12;:44;8809:86;;9085:24;;9066:43;;9176:2;9162:11;:16;9126:52;;9341:28;9304:34;:65;9300:982;;;9416:81;9461:34;9417:37;9450:3;9417:28;:32;;;;;;:37;;;;;:::i;:::-;9416:43;;;;;;:81;;;;;:::i;:::-;9392:105;;9540:45;9580:4;9540:25;9561:3;9540:16;:20;;;;;;:25;;;;;:::i;:::-;:39;;;;;;:45;;;;;:::i;:::-;9510:75;;9788:68;9805:50;9832:22;9805;9822:4;9805:12;;:16;;;;;;:22;;;;;:::i;:::-;:26;;;;;;:50;;;;;:::i;:::-;9788:12;;:16;;;;;;:68;;;;;:::i;:::-;9773:12;:83;;;;9300:982;;;9927:81;9978:28;9928:43;9967:3;9928:34;:38;;;;;;:43;;;;;:::i;:::-;9927:49;;;;;;:81;;;;;:::i;:::-;9901:107;;10053:47;10095:4;10053:27;10076:3;10053:18;:22;;;;;;:27;;;;;:::i;:::-;:41;;;;;;:47;;;;;:::i;:::-;10021:79;;10183:70;10200:52;10227:24;10200:22;10217:4;10200:12;;:16;;;;;;:22;;;;;:::i;:::-;:26;;;;;;:52;;;;;:::i;:::-;10183:12;;:16;;;;;;:70;;;;;:::i;:::-;10168:12;:85;;;;9300:982;10326:12;10294:29;:44;;;;10367:15;;10352:12;;:30;10349:113;;;10436:15;;10421:12;:30;;;;10349:113;10490:15;;10475:12;;:30;10472:108;;;10554:15;;10539:12;:30;;;;10472:108;8757:1829;;;;;;;:::o;894:128::-;946:6;973:1;969;:5;965:9;;998:1;993;:6;:20;;;;1012:1;1007;1003;:5;;;;;;;;:10;993:20;985:29;;;;;;;;894:128;;;;:::o;774:114::-;826:6;858:1;853;:6;;845:15;;;;;;;;879:1;875;:5;871:9;;774:114;;;;:::o;1229:126::-;1291:6;1317:1;1313;:5;1310:18;;;1327:1;1320:8;;;;1310:18;1346:1;1339:8;;1229:126;;;;;:::o;3801:14652::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600436106101d8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101dd578063095ea7b31461026b578063163aa00d146102c557806317da485f146102ee5780631801fbe51461031757806318160ddd1461035f57806323b872dd146103885780632d38bf7a14610401578063313ce5671461042a57806332e99708146104595780633eaaf86b14610482578063490203a7146104ab5780634ef37628146104d45780634fa972e1146105055780635515a1ea1461052e5780635ce7e0301461055b5780636de9f32b1461057e5780636fd396d6146105a757806370a08231146105fc57806379ba50971461064957806381269a561461065e578063829965cc146106bc57806387a2a9d6146106e55780638a769d351461070e5780638ae0368b146107375780638da5cb5b1461076857806395d89b41146107bd57806397566aa01461084b578063a9059cbb146108a4578063b5ade81b146108fe578063bafedcaa14610927578063cae9ca5114610950578063cb9ae707146109ed578063d4ee1d9014610a16578063dc39d06d14610a6b578063dc6e9cf914610ac5578063dd62ed3e14610aee578063f2fde38b14610b5a575b600080fd5b34156101e857600080fd5b6101f0610b93565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610230578082015181840152602081019050610215565b50505050905090810190601f16801561025d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027657600080fd5b6102ab600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c31565b604051808215151515815260200191505060405180910390f35b34156102d057600080fd5b6102d8610d23565b6040518082815260200191505060405180910390f35b34156102f957600080fd5b610301610d29565b6040518082815260200191505060405180910390f35b341561032257600080fd5b610345600480803590602001909190803560001916906020019091905050610d47565b604051808215151515815260200191505060405180910390f35b341561036a57600080fd5b610372610fd7565b6040518082815260200191505060405180910390f35b341561039357600080fd5b6103e7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611022565b604051808215151515815260200191505060405180910390f35b341561040c57600080fd5b6104146112cd565b6040518082815260200191505060405180910390f35b341561043557600080fd5b61043d6112d3565b604051808260ff1660ff16815260200191505060405180910390f35b341561046457600080fd5b61046c6112e6565b6040518082815260200191505060405180910390f35b341561048d57600080fd5b6104956112f0565b6040518082815260200191505060405180910390f35b34156104b657600080fd5b6104be6112f6565b6040518082815260200191505060405180910390f35b34156104df57600080fd5b6104e761132d565b60405180826000191660001916815260200191505060405180910390f35b341561051057600080fd5b610518611337565b6040518082815260200191505060405180910390f35b341561053957600080fd5b61054161133d565b604051808215151515815260200191505060405180910390f35b341561056657600080fd5b61057c6004808035906020019091905050611469565b005b341561058957600080fd5b610591611473565b6040518082815260200191505060405180910390f35b34156105b257600080fd5b6105ba611479565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561060757600080fd5b610633600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061149f565b6040518082815260200191505060405180910390f35b341561065457600080fd5b61065c6114e8565b005b341561066957600080fd5b6106a260048080359060200190919080356000191690602001909190803560001916906020019091908035906020019091905050611687565b604051808215151515815260200191505060405180910390f35b34156106c757600080fd5b6106cf61171c565b6040518082815260200191505060405180910390f35b34156106f057600080fd5b6106f8611722565b6040518082815260200191505060405180910390f35b341561071957600080fd5b610721611728565b6040518082815260200191505060405180910390f35b341561074257600080fd5b61074a61172e565b60405180826000191660001916815260200191505060405180910390f35b341561077357600080fd5b61077b611734565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107c857600080fd5b6107d0611759565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108105780820151818401526020810190506107f5565b50505050905090810190601f16801561083d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561085657600080fd5b610886600480803590602001909190803560001916906020019091908035600019169060200190919050506117f7565b60405180826000191660001916815260200191505060405180910390f35b34156108af57600080fd5b6108e4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611870565b604051808215151515815260200191505060405180910390f35b341561090957600080fd5b610911611a0b565b6040518082815260200191505060405180910390f35b341561093257600080fd5b61093a611a11565b6040518082815260200191505060405180910390f35b341561095b57600080fd5b6109d3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611a17565b604051808215151515815260200191505060405180910390f35b34156109f857600080fd5b610a00611c61565b6040518082815260200191505060405180910390f35b3415610a2157600080fd5b610a29611c67565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a7657600080fd5b610aab600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611c8d565b604051808215151515815260200191505060405180910390f35b3415610ad057600080fd5b610ad8611dd9565b6040518082815260200191505060405180910390f35b3415610af957600080fd5b610b44600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611ddf565b6040518082815260200191505060405180910390f35b3415610b6557600080fd5b610b91600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e66565b005b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c295780601f10610bfe57610100808354040283529160200191610c29565b820191906000526020600020905b815481529060010190602001808311610c0c57829003601f168201915b505050505081565b600081601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60115481565b6000610d42600b54600a54611f0590919063ffffffff16565b905090565b600080600080600c5433876040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040518091039020925084600019168360001916141515610dd057600080fd5b600b5483600190041115610de357600080fd5b60136000600c54600019166000191681526020019081526020016000205491508260136000600c5460001916600019168152602001908152602001600020816000191690555060006001028260001916141515610e3f57600080fd5b610e476112f6565b9050610e9b81601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f2990919063ffffffff16565b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ef381601454611f2990919063ffffffff16565b601481905550600e5460145411151515610f0957fe5b33600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060108190555043601181905550610f60611f45565b3373ffffffffffffffffffffffffffffffffffffffff167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d82600754600c54604051808481526020018381526020018260001916600019168152602001935050505060405180910390a26001935050505092915050565b6000601560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460055403905090565b600061107682601560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ffa90919063ffffffff16565b601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061114882601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ffa90919063ffffffff16565b601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061121a82601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f2990919063ffffffff16565b601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600d5481565b600460009054906101000a900460ff1681565b6000600b54905090565b60055481565b6000611328600d5460020a600460009054906101000a900460ff1660ff16600a0a603202611f0590919063ffffffff16565b905090565b6000600c54905090565b600e5481565b6000806113486112f6565b905061139c81601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f2990919063ffffffff16565b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113f481601454611f2990919063ffffffff16565b601481905550600e546014541115151561140a57fe5b33600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060108190555043601181905550611461611f45565b600191505090565b8060148190555050565b60145481565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561154457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000808333876040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001935050505060405180910390209050828160019004111561170657600080fd5b8460001916816000191614915050949350505050565b60075481565b600a5481565b600b5481565b600c5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117ef5780601f106117c4576101008083540402835291602001916117ef565b820191906000526020600020905b8154815290600101906020018083116117d257829003601f168201915b505050505081565b6000808233866040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001935050505060405180910390209050809150509392505050565b60006118c482601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ffa90919063ffffffff16565b601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061195982601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f2990919063ffffffff16565b601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60085481565b60105481565b600082601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611bf4578082015181840152602081019050611bd9565b50505050905090810190601f168015611c215780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515611c4257600080fd5b6102c65a03f11515611c5357600080fd5b505050600190509392505050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cea57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611db657600080fd5b6102c65a03f11515611dc757600080fd5b50505060405180519050905092915050565b60095481565b6000601660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ec157600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082111515611f1557600080fd5b8183811515611f2057fe5b04905092915050565b60008183019050828110151515611f3f57600080fd5b92915050565b600e54611f64611f536112f6565b601454611f2990919063ffffffff16565b118015611f7357506027600d54105b15611f85576001600d5401600d819055505b611fa26001600d540160020a600554611f0590919063ffffffff16565b60055403600e81905550611fc26001600754611f2990919063ffffffff16565b6007819055506000600854600754811515611fd957fe5b061415611fe957611fe8612016565b5b6001430340600c8160001916905550565b600082821115151561200b57600080fd5b818303905092915050565b6000806000806000806000600654430396506008549550603c86029450848710156120d557612061876120536064886121a790919063ffffffff16565b611f0590919063ffffffff16565b935061208b6103e861207d606487611ffa90919063ffffffff16565b6121d890919063ffffffff16565b92506120ca6120b9846120ab6107d0600b54611f0590919063ffffffff16565b6121a790919063ffffffff16565b600b54611ffa90919063ffffffff16565b600b8190555061216b565b6120fb856120ed60648a6121a790919063ffffffff16565b611f0590919063ffffffff16565b91506121256103e8612117606485611ffa90919063ffffffff16565b6121d890919063ffffffff16565b9050612164612153826121456107d0600b54611f0590919063ffffffff16565b6121a790919063ffffffff16565b600b54611f2990919063ffffffff16565b600b819055505b43600681905550600954600b54101561218857600954600b819055505b600a54600b54111561219e57600a54600b819055505b50505050505050565b6000818302905060008314806121c757508183828115156121c457fe5b04145b15156121d257600080fd5b92915050565b6000818311156121ea578190506121ee565b8290505b929150505600a165627a7a72305820378a2814ff16d98526eee2390febba1110f7e47bbf0e39cb4231866e968ceb490029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x163AA00D EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x5515A1EA EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x5CE7E030 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x6FD396D6 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x84B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x8FE JUMPI DUP1 PUSH4 0xBAFEDCAA EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x950 JUMPI DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0xA6B JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0xAC5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xAEE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F0 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x230 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x215 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x301 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x372 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x414 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43D PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x495 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BE PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E7 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x518 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x541 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1469 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x591 PUSH2 0x1473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5BA PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x633 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65C PUSH2 0x14E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CF PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F8 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x721 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74A PUSH2 0x172E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77B PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D0 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x810 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x886 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x17F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x911 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93A PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D3 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA00 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAAB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD8 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB44 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E66 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC29 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC0C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x16 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD42 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC SLOAD CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP3 POP DUP5 PUSH1 0x0 NOT AND DUP4 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP4 PUSH1 0x1 SWAP1 DIV GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP3 PUSH1 0x13 PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 MUL DUP3 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE47 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH2 0xE9B DUP2 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEF3 DUP2 PUSH1 0x14 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x14 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0xF09 JUMPI INVALID JUMPDEST CALLER PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0xF60 PUSH2 0x1F45 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D DUP3 PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 SLOAD SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1076 DUP3 PUSH1 0x15 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1148 DUP3 PUSH1 0x16 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x121A DUP3 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 PUSH1 0xD SLOAD PUSH1 0x2 EXP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x32 MUL PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1348 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x139C DUP2 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13F4 DUP2 PUSH1 0x14 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x14 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x140A JUMPI INVALID JUMPDEST CALLER PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0x1461 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x14 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x1 SWAP1 DIV GT ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x0 NOT AND DUP2 PUSH1 0x0 NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x17EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP3 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1959 DUP3 PUSH1 0x15 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x16 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F4FFCB1 CALLER DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BD9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C21 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1DC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x1F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x1F20 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1F64 PUSH2 0x1F53 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1F73 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x1 PUSH1 0xD SLOAD ADD PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1FA2 PUSH1 0x1 PUSH1 0xD SLOAD ADD PUSH1 0x2 EXP PUSH1 0x5 SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SUB PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1FC2 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP2 ISZERO ISZERO PUSH2 0x1FD9 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1FE9 JUMPI PUSH2 0x1FE8 PUSH2 0x2016 JUMP JUMPDEST JUMPDEST PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0xC DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x200B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SLOAD NUMBER SUB SWAP7 POP PUSH1 0x8 SLOAD SWAP6 POP PUSH1 0x3C DUP7 MUL SWAP5 POP DUP5 DUP8 LT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x2061 DUP8 PUSH2 0x2053 PUSH1 0x64 DUP9 PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x208B PUSH2 0x3E8 PUSH2 0x207D PUSH1 0x64 DUP8 PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x20CA PUSH2 0x20B9 DUP5 PUSH2 0x20AB PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x216B JUMP JUMPDEST PUSH2 0x20FB DUP6 PUSH2 0x20ED PUSH1 0x64 DUP11 PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2125 PUSH2 0x3E8 PUSH2 0x2117 PUSH1 0x64 DUP6 PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2164 PUSH2 0x2153 DUP3 PUSH2 0x2145 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1F29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST NUMBER PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH2 0x2188 JUMPI PUSH1 0x9 SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x219E JUMPI PUSH1 0xA SLOAD PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 MUL SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x21C7 JUMPI POP DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH2 0x21C4 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x21EA JUMPI DUP2 SWAP1 POP PUSH2 0x21EE JUMP JUMPDEST DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATACOPY DUP11 0x28 EQ SELFDESTRUCT AND 0xd9 DUP6 0x26 0xee 0xe2 CODECOPY 0xf 0xeb 0xba GT LT 0xf7 0xe4 PUSH28 0xBF0E39CB4231866E968CEB4900290000000000000000000000000000 ",
              "sourceMap": "3801:14652:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16324:8;;;3949:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13894:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10870:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5878:1465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12304:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14638:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4559:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3975;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10995:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4003:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11201:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10678:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4586:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17074:1375;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16988:79;;;;;;;;;;;;;;;;;;;;;;;;;;4812:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4621:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12645:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3345:191;;;;;;;;;;;;;;11779:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4087:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4393:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4438:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4469:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3922;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11497:237:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4143:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4654:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15779:312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4037:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2975:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16576:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15262:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3237:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;3949:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13894:203::-;13957:12;14013:6;13982:7;:19;13990:10;13982:19;;;;;;;;;;;;;;;:28;14002:7;13982:28;;;;;;;;;;;;;;;:37;;;;14051:7;14030:37;;14039:10;14030:37;;;14060:6;14030:37;;;;;;;;;;;;;;;;;;14085:4;14078:11;;13894:203;;;;:::o;4688:36::-;;;;:::o;10870:119::-;10926:4;10949:33;10969:12;;10949:15;;:19;;:33;;;;:::i;:::-;10942:40;;10870:119;:::o;5878:1465::-;5949:12;6134:14;6499:16;6722:18;6162:15;;6179:10;6191:5;6152:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6134:64;;6286:16;6276:26;;;:6;:26;;;;;6272:40;;;6304:8;;;6272:40;6405:12;;6395:6;6387:15;;;:30;6384:43;;;6419:8;;;6384:43;6518:20;:37;6539:15;;6518:37;;;;;;;;;;;;;;;;;;6499:56;;6610:6;6570:20;:37;6591:15;;6570:37;;;;;;;;;;;;;;;;;:46;;;;;;;6646:3;6634:15;;:8;:15;;;;;6631:28;;;6651:8;;;6631:28;6743:17;:15;:17::i;:::-;6722:38;;6798:39;6823:13;6798:8;:20;6807:10;6798:20;;;;;;;;;;;;;;;;:24;;:39;;;;:::i;:::-;6775:8;:20;6784:10;6775:20;;;;;;;;;;;;;;;:62;;;;6867:31;6884:13;6867:12;;:16;;:31;;;;:::i;:::-;6852:12;:46;;;;6990:15;;6974:12;;:31;;6967:39;;;;;;7080:10;7065:12;;:25;;;;;;;;;;;;;;;;;;7123:13;7104:16;:32;;;;7177:12;7150:24;:39;;;;7206:22;:20;:22::i;:::-;7250:10;7245:61;;;7262:13;7277:10;;7289:15;;7245:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7327:4;7320:11;;5878:1465;;;;;;;:::o;12304:116::-;12352:4;12392:8;:20;12409:1;12392:20;;;;;;;;;;;;;;;;12376:12;;:36;12369:43;;12304:116;:::o;14638:338::-;14715:12;14757:26;14776:6;14757:8;:14;14766:4;14757:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;14740:8;:14;14749:4;14740:14;;;;;;;;;;;;;;;:43;;;;14822:37;14852:6;14822:7;:13;14830:4;14822:13;;;;;;;;;;;;;;;:25;14836:10;14822:25;;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;14794:7;:13;14802:4;14794:13;;;;;;;;;;;;;;;:25;14808:10;14794:25;;;;;;;;;;;;;;;:65;;;;14885:24;14902:6;14885:8;:12;14894:2;14885:12;;;;;;;;;;;;;;;;:16;;:24;;;;:::i;:::-;14870:8;:12;14879:2;14870:12;;;;;;;;;;;;;;;:39;;;;14935:2;14920:26;;14929:4;14920:26;;;14939:6;14920:26;;;;;;;;;;;;;;;;;;14964:4;14957:11;;14638:338;;;;;:::o;4559:21::-;;;;:::o;3975:::-;;;;;;;;;;;;;:::o;10995:92::-;11047:4;11069:12;;11062:19;;10995:92;:::o;4003:24::-;;;;:::o;11201:257::-;11253:4;11403:46;11438:9;;11435:1;:12;11418:8;;;;;;;;;;;11413:14;;11409:2;:18;11404:2;:23;11403:30;;:46;;;;:::i;:::-;11396:53;;11201:257;:::o;10678:103::-;10733:7;10759:15;;10752:22;;10678:103;:::o;4586:27::-;;;;:::o;17074:1375::-;17117:12;17867:18;17888:17;:15;:17::i;:::-;17867:38;;17939:39;17964:13;17939:8;:20;17948:10;17939:20;;;;;;;;;;;;;;;;:24;;:39;;;;:::i;:::-;17916:8;:20;17925:10;17916:20;;;;;;;;;;;;;;;:62;;;;18004:31;18021:13;18004:12;;:16;;:31;;;;:::i;:::-;17989:12;:46;;;;18119:15;;18103:12;;:31;;18096:39;;;;;;18201:10;18186:12;;:25;;;;;;;;;;;;;;;;;;18240:13;18221:16;:32;;;;18290:12;18263:24;:39;;;;18318:22;:20;:22::i;:::-;18437:4;18430:11;;17074:1375;;:::o;16988:79::-;17057:3;17042:12;:18;;;;16988:79;:::o;4812:24::-;;;;:::o;4621:27::-;;;;;;;;;;;;;:::o;12645:124::-;12709:12;12741:8;:20;12750:10;12741:20;;;;;;;;;;;;;;;;12734:27;;12645:124;;;:::o;3345:191::-;3412:8;;;;;;;;;;;3398:22;;:10;:22;;;3390:31;;;;;;;;3460:8;;;;;;;;;;;3432:37;;3453:5;;;;;;;;;;;3432:37;;;;;;;;;;;;3488:8;;;;;;;;;;;3480:5;;:16;;;;;;;;;;;;;;;;;;3526:1;3507:8;;:21;;;;;;;;;;;;;;;;;;3345:191::o;11779:334::-;11911:12;11938:14;11965:16;11982:10;11993:5;11955:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11938:61;;12033:10;12023:6;12015:15;;;:28;12012:41;;;12045:8;;;12012:41;12084:16;12074:26;;;:6;:26;;;;12066:35;;11779:334;;;;;;;:::o;4087:22::-;;;;:::o;4393:37::-;;;;:::o;4438:24::-;;;;:::o;4469:30::-;;;;:::o;2948:20::-;;;;;;;;;;;;;:::o;3922:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11497:237::-;11608:18;11639:14;11666:16;11683:10;11694:5;11656:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11639:61;;11718:6;11711:13;;11497:237;;;;;;:::o;13118:262::-;13177:12;13225:32;13250:6;13225:8;:20;13234:10;13225:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;13202:8;:20;13211:10;13202:20;;;;;;;;;;;;;;;:55;;;;13283:24;13300:6;13283:8;:12;13292:2;13283:12;;;;;;;;;;;;;;;;:16;;:24;;;;:::i;:::-;13268:8;:12;13277:2;13268:12;;;;;;;;;;;;;;;:39;;;;13339:2;13318:32;;13327:10;13318:32;;;13343:6;13318:32;;;;;;;;;;;;;;;;;;13368:4;13361:11;;13118:262;;;;:::o;4143:43::-;;;;:::o;4654:28::-;;;;:::o;15779:312::-;15861:12;15917:6;15886:7;:19;15894:10;15886:19;;;;;;;;;;;;;;;:28;15906:7;15886:28;;;;;;;;;;;;;;;:37;;;;15955:7;15934:37;;15943:10;15934:37;;;15964:6;15934:37;;;;;;;;;;;;;;;;;;16005:7;15982:47;;;16030:10;16042:6;16050:4;16056;15982:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16079:4:0;16072:11;;15779:312;;;;;:::o;4037:41::-;;;;:::o;2975:23::-;;;;;;;;;;;;;:::o;16576:184::-;16668:12;3204:5;;;;;;;;;;;3190:19;;:10;:19;;;3182:28;;;;;;;;16715:12;16700:37;;;16738:5;;;;;;;;;;;16745:6;16700:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16693:59;;16576:184;;;;:::o;4216:36::-;;;;:::o;15262:151::-;15343:14;15377:7;:19;15385:10;15377:19;;;;;;;;;;;;;;;:28;15397:7;15377:28;;;;;;;;;;;;;;;;15370:35;;15262:151;;;;:::o;3237:102::-;3204:5;;;;;;;;;;;3190:19;;:10;:19;;;3182:28;;;;;;;;3322:9;3311:8;;:20;;;;;;;;;;;;;;;;;;3237:102;:::o;1028:113::-;1080:6;1111:1;1107;:5;1099:14;;;;;;;;1132:1;1128;:5;;;;;;;;1124:9;;1028:113;;;;:::o;654:114::-;706:6;733:1;729;:5;725:9;;758:1;753;:6;;745:15;;;;;;;;654:114;;;;:::o;7382:1151::-;7749:15;;7711:35;7728:17;:15;:17::i;:::-;7711:12;;:16;;:35;;;;:::i;:::-;:53;:71;;;;;7780:2;7768:9;;:14;7711:71;7707:127;;;7824:1;7812:9;;:13;7800:9;:25;;;;7707:127;8010:37;8044:1;8032:9;;:13;8028:1;:18;8010:12;;:16;;:37;;;;:::i;:::-;7995:12;;:52;7977:15;:70;;;;8069:17;8084:1;8069:10;;:14;;:17;;;;:::i;:::-;8056:10;:30;;;;8213:1;8185:24;;8172:10;;:37;;;;;;;;:42;8169:93;;;8232:21;:19;:21::i;:::-;8169:93;8518:1;8503:12;:16;8487:33;8469:15;:51;;;;;;;7382:1151::o;774:114::-;826:6;858:1;853;:6;;845:15;;;;;;;;879:1;875;:5;871:9;;774:114;;;;:::o;8757:1829::-;8809:39;9066:16;9126:33;9392:21;9510:27;9901:23;10021:29;8866;;8851:12;:44;8809:86;;9085:24;;9066:43;;9176:2;9162:11;:16;9126:52;;9341:28;9304:34;:65;9300:982;;;9416:81;9461:34;9417:37;9450:3;9417:28;:32;;:37;;;;:::i;:::-;9416:43;;:81;;;;:::i;:::-;9392:105;;9540:45;9580:4;9540:25;9561:3;9540:16;:20;;:25;;;;:::i;:::-;:39;;:45;;;;:::i;:::-;9510:75;;9788:68;9805:50;9832:22;9805;9822:4;9805:12;;:16;;:22;;;;:::i;:::-;:26;;:50;;;;:::i;:::-;9788:12;;:16;;:68;;;;:::i;:::-;9773:12;:83;;;;9300:982;;;9927:81;9978:28;9928:43;9967:3;9928:34;:38;;:43;;;;:::i;:::-;9927:49;;:81;;;;:::i;:::-;9901:107;;10053:47;10095:4;10053:27;10076:3;10053:18;:22;;:27;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;10021:79;;10183:70;10200:52;10227:24;10200:22;10217:4;10200:12;;:16;;:22;;;;:::i;:::-;:26;;:52;;;;:::i;:::-;10183:12;;:16;;:70;;;;:::i;:::-;10168:12;:85;;;;9300:982;10326:12;10294:29;:44;;;;10367:15;;10352:12;;:30;10349:113;;;10436:15;;10421:12;:30;;;;10349:113;10490:15;;10475:12;;:30;10472:108;;;10554:15;;10539:12;:30;;;;10472:108;8757:1829;;;;;;;:::o;894:128::-;946:6;973:1;969;:5;965:9;;998:1;993;:6;:20;;;;1012:1;1007;1003;:5;;;;;;;;:10;993:20;985:29;;;;;;;;894:128;;;;:::o;1229:126::-;1291:6;1317:1;1313;:5;1310:18;;;1327:1;1320:8;;;;1310:18;1346:1;1339:8;;1229:126;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1747200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "905",
                "_BLOCKS_PER_READJUSTMENT()": "1024",
                "_MAXIMUM_TARGET()": "870",
                "_MINIMUM_TARGET()": "1156",
                "_totalSupply()": "606",
                "acceptOwnership()": "43609",
                "allowance(address,address)": "1443",
                "approve(address,uint256)": "22320",
                "approveAndCall(address,uint256,bytes)": "infinite",
                "balanceOf(address)": "925",
                "challengeNumber()": "932",
                "checkMintSolution(uint256,bytes32,bytes32,uint256)": "1035",
                "decimals()": "610",
                "epochCount()": "848",
                "getChallengeNumber()": "676",
                "getMiningDifficulty()": "infinite",
                "getMiningReward()": "infinite",
                "getMiningTarget()": "592",
                "getMintDigest(uint256,bytes32,bytes32)": "1108",
                "lastRewardAmount()": "1046",
                "lastRewardEthBlockNumber()": "430",
                "lastRewardTo()": "808",
                "latestDifficultyPeriodStarted()": "1090",
                "maxSupplyForEra()": "672",
                "miningTarget()": "892",
                "mint(uint256,bytes32)": "infinite",
                "mintWithoutPoW()": "infinite",
                "name()": "infinite",
                "newOwner()": "1160",
                "owner()": "984",
                "rewardEra()": "540",
                "setTokensMinted(uint256)": "20508",
                "symbol()": "infinite",
                "tokensMinted()": "738",
                "totalSupply()": "800",
                "transfer(address,uint256)": "infinite",
                "transferAnyERC20Token(address,uint256)": "infinite",
                "transferFrom(address,address,uint256)": "infinite",
                "transferOwnership(address)": "21527"
              },
              "internal": {
                "_reAdjustDifficulty()": "infinite",
                "_startNewMiningEpoch()": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MSTORE"
                },
                {
                  "begin": 4182,
                  "end": 4186,
                  "name": "PUSH",
                  "value": "400"
                },
                {
                  "begin": 4143,
                  "end": 4186,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 4143,
                  "end": 4186,
                  "name": "SSTORE"
                },
                {
                  "begin": 4247,
                  "end": 4252,
                  "name": "PUSH",
                  "value": "10000"
                },
                {
                  "begin": 4216,
                  "end": 4252,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 4216,
                  "end": 4252,
                  "name": "SSTORE"
                },
                {
                  "begin": 4424,
                  "end": 4430,
                  "name": "PUSH",
                  "value": "40000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 4393,
                  "end": 4430,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 4393,
                  "end": 4430,
                  "name": "SSTORE"
                },
                {
                  "begin": 4745,
                  "end": 4750,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "EXP"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "DUP2"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SLOAD"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "DUP2"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "MUL"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "NOT"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "AND"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SWAP1"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "DUP4"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "ISZERO"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "ISZERO"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "MUL"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "OR"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SWAP1"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "SSTORE"
                },
                {
                  "begin": 4731,
                  "end": 4750,
                  "name": "POP"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "ISZERO"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "JUMPI"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "DUP1"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "REVERT"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 5230,
                  "end": 5865,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3127,
                  "end": 3137,
                  "name": "CALLER"
                },
                {
                  "begin": 3119,
                  "end": 3124,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3119,
                  "end": 3124,
                  "name": "DUP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "EXP"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP2"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SLOAD"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP2"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "MUL"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "NOT"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "DUP4"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "AND"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "MUL"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "OR"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SWAP1"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "SSTORE"
                },
                {
                  "begin": 3119,
                  "end": 3137,
                  "name": "POP"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "DUP1"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SWAP1"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SLOAD"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SWAP1"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "EXP"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "SWAP1"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "DIV"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3204,
                  "end": 3209,
                  "name": "AND"
                },
                {
                  "begin": 3190,
                  "end": 3209,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3190,
                  "end": 3209,
                  "name": "AND"
                },
                {
                  "begin": 3190,
                  "end": 3200,
                  "name": "CALLER"
                },
                {
                  "begin": 3190,
                  "end": 3209,
                  "name": "PUSH",
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 3190,
                  "end": 3209,
                  "name": "AND"
                },
                {
                  "begin": 3190,
                  "end": 3209,
                  "name": "EQ"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "ISZERO"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "ISZERO"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "PUSH [tag]",
                  "value": "6"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "JUMPI"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "DUP1"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "REVERT"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "tag",
                  "value": "6"
                },
                {
                  "begin": 3182,
                  "end": 3210,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MLOAD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "ADD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MSTORE"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MSTORE"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "ADD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "3078425443000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MSTORE"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "POP"
                },
                {
                  "begin": 5286,
                  "end": 5292,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "DUP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "MLOAD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "ADD"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH [tag]",
                  "value": "8"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP3"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP2"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "SWAP1"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "PUSH [tag]",
                  "value": "9"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "tag",
                  "value": "8"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5286,
                  "end": 5302,
                  "name": "POP"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MLOAD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "ADD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MSTORE"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "F"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MSTORE"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "ADD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "3078426974636F696E20546F6B656E0000000000000000000000000000000000"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MSTORE"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "POP"
                },
                {
                  "begin": 5313,
                  "end": 5317,
                  "name": "PUSH",
                  "value": "3"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "DUP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "MLOAD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "ADD"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH [tag]",
                  "value": "10"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP3"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP2"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "SWAP1"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "PUSH [tag]",
                  "value": "9"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "tag",
                  "value": "10"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5313,
                  "end": 5337,
                  "name": "POP"
                },
                {
                  "begin": 5359,
                  "end": 5360,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 5348,
                  "end": 5356,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 5348,
                  "end": 5356,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "EXP"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "DUP2"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SLOAD"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "DUP2"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "MUL"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "NOT"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "AND"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SWAP1"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "DUP4"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "AND"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "MUL"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "OR"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SWAP1"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "SSTORE"
                },
                {
                  "begin": 5348,
                  "end": 5360,
                  "name": "POP"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "SWAP1"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "SLOAD"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "SWAP1"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "EXP"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "SWAP1"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "DIV"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5406,
                  "end": 5414,
                  "name": "AND"
                },
                {
                  "begin": 5401,
                  "end": 5415,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5401,
                  "end": 5415,
                  "name": "AND"
                },
                {
                  "begin": 5397,
                  "end": 5399,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 5397,
                  "end": 5415,
                  "name": "EXP"
                },
                {
                  "begin": 5386,
                  "end": 5394,
                  "name": "PUSH",
                  "value": "1406F40"
                },
                {
                  "begin": 5386,
                  "end": 5415,
                  "name": "MUL"
                },
                {
                  "begin": 5371,
                  "end": 5383,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 5371,
                  "end": 5415,
                  "name": "DUP2"
                },
                {
                  "begin": 5371,
                  "end": 5415,
                  "name": "SWAP1"
                },
                {
                  "begin": 5371,
                  "end": 5415,
                  "name": "SSTORE"
                },
                {
                  "begin": 5371,
                  "end": 5415,
                  "name": "POP"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "SWAP1"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "SLOAD"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "SWAP1"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "EXP"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "SWAP1"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "DIV"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5429,
                  "end": 5435,
                  "name": "AND"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "ISZERO"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "PUSH [tag]",
                  "value": "11"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "JUMPI"
                },
                {
                  "begin": 5437,
                  "end": 5445,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5437,
                  "end": 5445,
                  "name": "DUP1"
                },
                {
                  "begin": 5437,
                  "end": 5445,
                  "name": "REVERT"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "tag",
                  "value": "11"
                },
                {
                  "begin": 5426,
                  "end": 5445,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5464,
                  "end": 5468,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 5455,
                  "end": 5461,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 5455,
                  "end": 5461,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "EXP"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "DUP2"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SLOAD"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "DUP2"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "MUL"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "NOT"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "AND"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SWAP1"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "DUP4"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "ISZERO"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "ISZERO"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "MUL"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "OR"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SWAP1"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "SSTORE"
                },
                {
                  "begin": 5455,
                  "end": 5468,
                  "name": "POP"
                },
                {
                  "begin": 5494,
                  "end": 5495,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5479,
                  "end": 5491,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "DUP2"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "SWAP1"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "SSTORE"
                },
                {
                  "begin": 5479,
                  "end": 5495,
                  "name": "POP"
                },
                {
                  "begin": 5518,
                  "end": 5519,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 5506,
                  "end": 5515,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 5506,
                  "end": 5519,
                  "name": "DUP2"
                },
                {
                  "begin": 5506,
                  "end": 5519,
                  "name": "SWAP1"
                },
                {
                  "begin": 5506,
                  "end": 5519,
                  "name": "SSTORE"
                },
                {
                  "begin": 5506,
                  "end": 5519,
                  "name": "POP"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "PUSH [tag]",
                  "value": "12"
                },
                {
                  "begin": 5564,
                  "end": 5565,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 5547,
                  "end": 5559,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 5547,
                  "end": 5559,
                  "name": "SLOAD"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "MUL"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "OR"
                },
                {
                  "begin": 5547,
                  "end": 5563,
                  "name": "SWAP1"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "SWAP2"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "SWAP1"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "SWAP1"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "DIV"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "tag",
                  "value": "12"
                },
                {
                  "begin": 5547,
                  "end": 5566,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 5529,
                  "end": 5544,
                  "name": "PUSH",
                  "value": "E"
                },
                {
                  "begin": 5529,
                  "end": 5566,
                  "name": "DUP2"
                },
                {
                  "begin": 5529,
                  "end": 5566,
                  "name": "SWAP1"
                },
                {
                  "begin": 5529,
                  "end": 5566,
                  "name": "SSTORE"
                },
                {
                  "begin": 5529,
                  "end": 5566,
                  "name": "POP"
                },
                {
                  "begin": 5592,
                  "end": 5607,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 5592,
                  "end": 5607,
                  "name": "SLOAD"
                },
                {
                  "begin": 5577,
                  "end": 5589,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 5577,
                  "end": 5607,
                  "name": "DUP2"
                },
                {
                  "begin": 5577,
                  "end": 5607,
                  "name": "SWAP1"
                },
                {
                  "begin": 5577,
                  "end": 5607,
                  "name": "SSTORE"
                },
                {
                  "begin": 5577,
                  "end": 5607,
                  "name": "POP"
                },
                {
                  "begin": 5650,
                  "end": 5662,
                  "name": "NUMBER"
                },
                {
                  "begin": 5618,
                  "end": 5647,
                  "name": "PUSH",
                  "value": "6"
                },
                {
                  "begin": 5618,
                  "end": 5662,
                  "name": "DUP2"
                },
                {
                  "begin": 5618,
                  "end": 5662,
                  "name": "SWAP1"
                },
                {
                  "begin": 5618,
                  "end": 5662,
                  "name": "SSTORE"
                },
                {
                  "begin": 5618,
                  "end": 5662,
                  "name": "POP"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "PUSH [tag]",
                  "value": "14"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "PUSH [tag]",
                  "value": "15"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "MUL"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551797"
                },
                {
                  "begin": 5673,
                  "end": 5693,
                  "name": "OR"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "SWAP1"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "DIV"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "tag",
                  "value": "14"
                },
                {
                  "begin": 5673,
                  "end": 5695,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "16"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "tag",
                  "value": "13"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1080,
                  "end": 1086,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1111,
                  "end": 1112,
                  "name": "DUP1"
                },
                {
                  "begin": 1107,
                  "end": 1108,
                  "name": "DUP3"
                },
                {
                  "begin": 1107,
                  "end": 1112,
                  "name": "GT"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "ISZERO"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "ISZERO"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "PUSH [tag]",
                  "value": "18"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "JUMPI"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "DUP1"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "REVERT"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "tag",
                  "value": "18"
                },
                {
                  "begin": 1099,
                  "end": 1113,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1132,
                  "end": 1133,
                  "name": "DUP2"
                },
                {
                  "begin": 1128,
                  "end": 1129,
                  "name": "DUP4"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "DUP2"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "ISZERO"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "ISZERO"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "PUSH [tag]",
                  "value": "19"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "JUMPI"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "INVALID"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "tag",
                  "value": "19"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1128,
                  "end": 1133,
                  "name": "DIV"
                },
                {
                  "begin": 1124,
                  "end": 1133,
                  "name": "SWAP1"
                },
                {
                  "begin": 1124,
                  "end": 1133,
                  "name": "POP"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "SWAP3"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "SWAP2"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "POP"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "POP"
                },
                {
                  "begin": 1028,
                  "end": 1141,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 7382,
                  "end": 8533,
                  "name": "tag",
                  "value": "15"
                },
                {
                  "begin": 7382,
                  "end": 8533,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7749,
                  "end": 7764,
                  "name": "PUSH",
                  "value": "E"
                },
                {
                  "begin": 7749,
                  "end": 7764,
                  "name": "SLOAD"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "PUSH [tag]",
                  "value": "21"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "PUSH [tag]",
                  "value": "22"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "PUSH [tag]",
                  "value": "23"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "MUL"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551697"
                },
                {
                  "begin": 7728,
                  "end": 7743,
                  "name": "OR"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "SWAP1"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "DIV"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "tag",
                  "value": "22"
                },
                {
                  "begin": 7728,
                  "end": 7745,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7711,
                  "end": 7723,
                  "name": "PUSH",
                  "value": "14"
                },
                {
                  "begin": 7711,
                  "end": 7723,
                  "name": "SLOAD"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "PUSH [tag]",
                  "value": "24"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "MUL"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551793"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "OR"
                },
                {
                  "begin": 7711,
                  "end": 7727,
                  "name": "SWAP1"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "SWAP2"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "SWAP1"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "SWAP1"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "DIV"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "tag",
                  "value": "21"
                },
                {
                  "begin": 7711,
                  "end": 7746,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7711,
                  "end": 7764,
                  "name": "GT"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "DUP1"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "ISZERO"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "PUSH [tag]",
                  "value": "25"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "JUMPI"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "POP"
                },
                {
                  "begin": 7780,
                  "end": 7782,
                  "name": "PUSH",
                  "value": "27"
                },
                {
                  "begin": 7768,
                  "end": 7777,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 7768,
                  "end": 7777,
                  "name": "SLOAD"
                },
                {
                  "begin": 7768,
                  "end": 7782,
                  "name": "LT"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "tag",
                  "value": "25"
                },
                {
                  "begin": 7711,
                  "end": 7782,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "ISZERO"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "PUSH [tag]",
                  "value": "26"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "JUMPI"
                },
                {
                  "begin": 7824,
                  "end": 7825,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 7812,
                  "end": 7821,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 7812,
                  "end": 7821,
                  "name": "SLOAD"
                },
                {
                  "begin": 7812,
                  "end": 7825,
                  "name": "ADD"
                },
                {
                  "begin": 7800,
                  "end": 7809,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 7800,
                  "end": 7825,
                  "name": "DUP2"
                },
                {
                  "begin": 7800,
                  "end": 7825,
                  "name": "SWAP1"
                },
                {
                  "begin": 7800,
                  "end": 7825,
                  "name": "SSTORE"
                },
                {
                  "begin": 7800,
                  "end": 7825,
                  "name": "POP"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "tag",
                  "value": "26"
                },
                {
                  "begin": 7707,
                  "end": 7834,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "PUSH [tag]",
                  "value": "27"
                },
                {
                  "begin": 8044,
                  "end": 8045,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 8032,
                  "end": 8041,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 8032,
                  "end": 8041,
                  "name": "SLOAD"
                },
                {
                  "begin": 8032,
                  "end": 8045,
                  "name": "ADD"
                },
                {
                  "begin": 8028,
                  "end": 8029,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 8028,
                  "end": 8046,
                  "name": "EXP"
                },
                {
                  "begin": 8010,
                  "end": 8022,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 8010,
                  "end": 8022,
                  "name": "SLOAD"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "MUL"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "OR"
                },
                {
                  "begin": 8010,
                  "end": 8026,
                  "name": "SWAP1"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "SWAP2"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "SWAP1"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "SWAP1"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "DIV"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "tag",
                  "value": "27"
                },
                {
                  "begin": 8010,
                  "end": 8047,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 7995,
                  "end": 8007,
                  "name": "PUSH",
                  "value": "5"
                },
                {
                  "begin": 7995,
                  "end": 8007,
                  "name": "SLOAD"
                },
                {
                  "begin": 7995,
                  "end": 8047,
                  "name": "SUB"
                },
                {
                  "begin": 7977,
                  "end": 7992,
                  "name": "PUSH",
                  "value": "E"
                },
                {
                  "begin": 7977,
                  "end": 8047,
                  "name": "DUP2"
                },
                {
                  "begin": 7977,
                  "end": 8047,
                  "name": "SWAP1"
                },
                {
                  "begin": 7977,
                  "end": 8047,
                  "name": "SSTORE"
                },
                {
                  "begin": 7977,
                  "end": 8047,
                  "name": "POP"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "PUSH [tag]",
                  "value": "28"
                },
                {
                  "begin": 8084,
                  "end": 8085,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 8069,
                  "end": 8079,
                  "name": "PUSH",
                  "value": "7"
                },
                {
                  "begin": 8069,
                  "end": 8079,
                  "name": "SLOAD"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "PUSH [tag]",
                  "value": "24"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "MUL"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551793"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "OR"
                },
                {
                  "begin": 8069,
                  "end": 8083,
                  "name": "SWAP1"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "SWAP2"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "SWAP1"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "SWAP1"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "DIV"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "tag",
                  "value": "28"
                },
                {
                  "begin": 8069,
                  "end": 8086,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8056,
                  "end": 8066,
                  "name": "PUSH",
                  "value": "7"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "DUP2"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "SWAP1"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "SSTORE"
                },
                {
                  "begin": 8056,
                  "end": 8086,
                  "name": "POP"
                },
                {
                  "begin": 8213,
                  "end": 8214,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 8185,
                  "end": 8209,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 8185,
                  "end": 8209,
                  "name": "SLOAD"
                },
                {
                  "begin": 8172,
                  "end": 8182,
                  "name": "PUSH",
                  "value": "7"
                },
                {
                  "begin": 8172,
                  "end": 8182,
                  "name": "SLOAD"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "DUP2"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "ISZERO"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "ISZERO"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "PUSH [tag]",
                  "value": "29"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "JUMPI"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "INVALID"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "tag",
                  "value": "29"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8172,
                  "end": 8209,
                  "name": "MOD"
                },
                {
                  "begin": 8172,
                  "end": 8214,
                  "name": "EQ"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "ISZERO"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "PUSH [tag]",
                  "value": "30"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "JUMPI"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "PUSH [tag]",
                  "value": "31"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "PUSH [tag]",
                  "value": "32"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "MUL"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551858"
                },
                {
                  "begin": 8232,
                  "end": 8251,
                  "name": "OR"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "SWAP1"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "DIV"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "tag",
                  "value": "31"
                },
                {
                  "begin": 8232,
                  "end": 8253,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "tag",
                  "value": "30"
                },
                {
                  "begin": 8169,
                  "end": 8262,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8518,
                  "end": 8519,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 8503,
                  "end": 8515,
                  "name": "NUMBER"
                },
                {
                  "begin": 8503,
                  "end": 8519,
                  "name": "SUB"
                },
                {
                  "begin": 8487,
                  "end": 8520,
                  "name": "BLOCKHASH"
                },
                {
                  "begin": 8469,
                  "end": 8484,
                  "name": "PUSH",
                  "value": "C"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "DUP2"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "NOT"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "AND"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "SWAP1"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "SSTORE"
                },
                {
                  "begin": 8469,
                  "end": 8520,
                  "name": "POP"
                },
                {
                  "begin": 7382,
                  "end": 8533,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "tag",
                  "value": "23"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 11253,
                  "end": 11257,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "PUSH [tag]",
                  "value": "34"
                },
                {
                  "begin": 11438,
                  "end": 11447,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 11438,
                  "end": 11447,
                  "name": "SLOAD"
                },
                {
                  "begin": 11435,
                  "end": 11436,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 11435,
                  "end": 11447,
                  "name": "EXP"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "SWAP1"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "SLOAD"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "SWAP1"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "EXP"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "SWAP1"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "DIV"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 11418,
                  "end": 11426,
                  "name": "AND"
                },
                {
                  "begin": 11413,
                  "end": 11427,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 11413,
                  "end": 11427,
                  "name": "AND"
                },
                {
                  "begin": 11409,
                  "end": 11411,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 11409,
                  "end": 11427,
                  "name": "EXP"
                },
                {
                  "begin": 11404,
                  "end": 11406,
                  "name": "PUSH",
                  "value": "32"
                },
                {
                  "begin": 11404,
                  "end": 11427,
                  "name": "MUL"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "MUL"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "OR"
                },
                {
                  "begin": 11403,
                  "end": 11433,
                  "name": "SWAP1"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "SWAP2"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "SWAP1"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "SWAP1"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "DIV"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "tag",
                  "value": "34"
                },
                {
                  "begin": 11403,
                  "end": 11449,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 11396,
                  "end": 11449,
                  "name": "SWAP1"
                },
                {
                  "begin": 11396,
                  "end": 11449,
                  "name": "POP"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "SWAP1"
                },
                {
                  "begin": 11201,
                  "end": 11458,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "tag",
                  "value": "24"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 706,
                  "end": 712,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 733,
                  "end": 734,
                  "name": "DUP2"
                },
                {
                  "begin": 729,
                  "end": 730,
                  "name": "DUP4"
                },
                {
                  "begin": 729,
                  "end": 734,
                  "name": "ADD"
                },
                {
                  "begin": 725,
                  "end": 734,
                  "name": "SWAP1"
                },
                {
                  "begin": 725,
                  "end": 734,
                  "name": "POP"
                },
                {
                  "begin": 758,
                  "end": 759,
                  "name": "DUP3"
                },
                {
                  "begin": 753,
                  "end": 754,
                  "name": "DUP2"
                },
                {
                  "begin": 753,
                  "end": 759,
                  "name": "LT"
                },
                {
                  "begin": 753,
                  "end": 759,
                  "name": "ISZERO"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "ISZERO"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "ISZERO"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "PUSH [tag]",
                  "value": "36"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "JUMPI"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "DUP1"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "REVERT"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "tag",
                  "value": "36"
                },
                {
                  "begin": 745,
                  "end": 760,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "SWAP3"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "SWAP2"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "POP"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "POP"
                },
                {
                  "begin": 654,
                  "end": 768,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "tag",
                  "value": "32"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8809,
                  "end": 8848,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9066,
                  "end": 9082,
                  "name": "DUP1"
                },
                {
                  "begin": 9126,
                  "end": 9159,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9392,
                  "end": 9413,
                  "name": "DUP1"
                },
                {
                  "begin": 9510,
                  "end": 9537,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 9901,
                  "end": 9924,
                  "name": "DUP1"
                },
                {
                  "begin": 10021,
                  "end": 10050,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 8866,
                  "end": 8895,
                  "name": "PUSH",
                  "value": "6"
                },
                {
                  "begin": 8866,
                  "end": 8895,
                  "name": "SLOAD"
                },
                {
                  "begin": 8851,
                  "end": 8863,
                  "name": "NUMBER"
                },
                {
                  "begin": 8851,
                  "end": 8895,
                  "name": "SUB"
                },
                {
                  "begin": 8809,
                  "end": 8895,
                  "name": "SWAP7"
                },
                {
                  "begin": 8809,
                  "end": 8895,
                  "name": "POP"
                },
                {
                  "begin": 9085,
                  "end": 9109,
                  "name": "PUSH",
                  "value": "8"
                },
                {
                  "begin": 9085,
                  "end": 9109,
                  "name": "SLOAD"
                },
                {
                  "begin": 9066,
                  "end": 9109,
                  "name": "SWAP6"
                },
                {
                  "begin": 9066,
                  "end": 9109,
                  "name": "POP"
                },
                {
                  "begin": 9176,
                  "end": 9178,
                  "name": "PUSH",
                  "value": "3C"
                },
                {
                  "begin": 9162,
                  "end": 9173,
                  "name": "DUP7"
                },
                {
                  "begin": 9162,
                  "end": 9178,
                  "name": "MUL"
                },
                {
                  "begin": 9126,
                  "end": 9178,
                  "name": "SWAP5"
                },
                {
                  "begin": 9126,
                  "end": 9178,
                  "name": "POP"
                },
                {
                  "begin": 9341,
                  "end": 9369,
                  "name": "DUP5"
                },
                {
                  "begin": 9304,
                  "end": 9338,
                  "name": "DUP8"
                },
                {
                  "begin": 9304,
                  "end": 9369,
                  "name": "LT"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "ISZERO"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "PUSH [tag]",
                  "value": "38"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMPI"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "PUSH [tag]",
                  "value": "39"
                },
                {
                  "begin": 9461,
                  "end": 9495,
                  "name": "DUP8"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "PUSH [tag]",
                  "value": "40"
                },
                {
                  "begin": 9450,
                  "end": 9453,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 9417,
                  "end": 9445,
                  "name": "DUP9"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "MUL"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "OR"
                },
                {
                  "begin": 9417,
                  "end": 9449,
                  "name": "SWAP1"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "SWAP2"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "SWAP1"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "SWAP1"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "DIV"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "tag",
                  "value": "40"
                },
                {
                  "begin": 9417,
                  "end": 9454,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "MUL"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "OR"
                },
                {
                  "begin": 9416,
                  "end": 9459,
                  "name": "SWAP1"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "SWAP2"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "SWAP1"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "SWAP1"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "DIV"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "tag",
                  "value": "39"
                },
                {
                  "begin": 9416,
                  "end": 9497,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9392,
                  "end": 9497,
                  "name": "SWAP4"
                },
                {
                  "begin": 9392,
                  "end": 9497,
                  "name": "POP"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "PUSH [tag]",
                  "value": "42"
                },
                {
                  "begin": 9580,
                  "end": 9584,
                  "name": "PUSH",
                  "value": "3E8"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "PUSH [tag]",
                  "value": "43"
                },
                {
                  "begin": 9561,
                  "end": 9564,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 9540,
                  "end": 9556,
                  "name": "DUP8"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "PUSH [tag]",
                  "value": "44"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "MUL"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551801"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "OR"
                },
                {
                  "begin": 9540,
                  "end": 9560,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "SWAP2"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "DIV"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "tag",
                  "value": "43"
                },
                {
                  "begin": 9540,
                  "end": 9565,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "PUSH [tag]",
                  "value": "45"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "MUL"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551868"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "OR"
                },
                {
                  "begin": 9540,
                  "end": 9579,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "SWAP2"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "SWAP1"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "DIV"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "tag",
                  "value": "42"
                },
                {
                  "begin": 9540,
                  "end": 9585,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9510,
                  "end": 9585,
                  "name": "SWAP3"
                },
                {
                  "begin": 9510,
                  "end": 9585,
                  "name": "POP"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "PUSH [tag]",
                  "value": "46"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "PUSH [tag]",
                  "value": "47"
                },
                {
                  "begin": 9832,
                  "end": 9854,
                  "name": "DUP5"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "PUSH [tag]",
                  "value": "48"
                },
                {
                  "begin": 9822,
                  "end": 9826,
                  "name": "PUSH",
                  "value": "7D0"
                },
                {
                  "begin": 9805,
                  "end": 9817,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 9805,
                  "end": 9817,
                  "name": "SLOAD"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "MUL"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "OR"
                },
                {
                  "begin": 9805,
                  "end": 9821,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "SWAP2"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "DIV"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "tag",
                  "value": "48"
                },
                {
                  "begin": 9805,
                  "end": 9827,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "MUL"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "OR"
                },
                {
                  "begin": 9805,
                  "end": 9831,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "SWAP2"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "SWAP1"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "DIV"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "tag",
                  "value": "47"
                },
                {
                  "begin": 9805,
                  "end": 9855,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9788,
                  "end": 9800,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 9788,
                  "end": 9800,
                  "name": "SLOAD"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "PUSH [tag]",
                  "value": "44"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "MUL"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551801"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "OR"
                },
                {
                  "begin": 9788,
                  "end": 9804,
                  "name": "SWAP1"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "SWAP2"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "SWAP1"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "SWAP1"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "DIV"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "tag",
                  "value": "46"
                },
                {
                  "begin": 9788,
                  "end": 9856,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9773,
                  "end": 9785,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 9773,
                  "end": 9856,
                  "name": "DUP2"
                },
                {
                  "begin": 9773,
                  "end": 9856,
                  "name": "SWAP1"
                },
                {
                  "begin": 9773,
                  "end": 9856,
                  "name": "SSTORE"
                },
                {
                  "begin": 9773,
                  "end": 9856,
                  "name": "POP"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "PUSH [tag]",
                  "value": "49"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMP"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "tag",
                  "value": "38"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "PUSH [tag]",
                  "value": "50"
                },
                {
                  "begin": 9978,
                  "end": 10006,
                  "name": "DUP6"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "PUSH [tag]",
                  "value": "51"
                },
                {
                  "begin": 9967,
                  "end": 9970,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 9928,
                  "end": 9962,
                  "name": "DUP11"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "MUL"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "OR"
                },
                {
                  "begin": 9928,
                  "end": 9966,
                  "name": "SWAP1"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "SWAP2"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "SWAP1"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "SWAP1"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "DIV"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "tag",
                  "value": "51"
                },
                {
                  "begin": 9928,
                  "end": 9971,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9927,
                  "end": 9976,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 9927,
                  "end": 9976,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9927,
                  "end": 9976,
                  "name": "MUL"
                },
                {
                  "begin": 9927,
                  "end": 9976,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 9927,
                  "end": 9976,
                  "name": "OR"
                },
                {
                  "begin": 9927,
                  "end": 9976,
                  "name": "SWAP1"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "SWAP2"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "SWAP1"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "SWAP1"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "DIV"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "tag",
                  "value": "50"
                },
                {
                  "begin": 9927,
                  "end": 10008,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 9901,
                  "end": 10008,
                  "name": "SWAP2"
                },
                {
                  "begin": 9901,
                  "end": 10008,
                  "name": "POP"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "PUSH [tag]",
                  "value": "52"
                },
                {
                  "begin": 10095,
                  "end": 10099,
                  "name": "PUSH",
                  "value": "3E8"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "PUSH [tag]",
                  "value": "53"
                },
                {
                  "begin": 10076,
                  "end": 10079,
                  "name": "PUSH",
                  "value": "64"
                },
                {
                  "begin": 10053,
                  "end": 10071,
                  "name": "DUP6"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "PUSH [tag]",
                  "value": "44"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "MUL"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551801"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "OR"
                },
                {
                  "begin": 10053,
                  "end": 10075,
                  "name": "SWAP1"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "SWAP2"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "SWAP1"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "SWAP1"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "DIV"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "tag",
                  "value": "53"
                },
                {
                  "begin": 10053,
                  "end": 10080,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10053,
                  "end": 10094,
                  "name": "PUSH [tag]",
                  "value": "45"
                },
                {
                  "begin": 10053,
                  "end": 10094,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10053,
                  "end": 10094,
                  "name": "MUL"
                },
                {
                  "begin": 10053,
                  "end": 10094,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551868"
                },
                {
                  "begin": 10053,
                  "end": 10094,
                  "name": "OR"
                },
                {
                  "begin": 10053,
                  "end": 10094,
                  "name": "SWAP1"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "SWAP2"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "SWAP1"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "SWAP1"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "DIV"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "tag",
                  "value": "52"
                },
                {
                  "begin": 10053,
                  "end": 10100,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10021,
                  "end": 10100,
                  "name": "SWAP1"
                },
                {
                  "begin": 10021,
                  "end": 10100,
                  "name": "POP"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "PUSH [tag]",
                  "value": "54"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "PUSH [tag]",
                  "value": "55"
                },
                {
                  "begin": 10227,
                  "end": 10251,
                  "name": "DUP3"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "PUSH [tag]",
                  "value": "56"
                },
                {
                  "begin": 10217,
                  "end": 10221,
                  "name": "PUSH",
                  "value": "7D0"
                },
                {
                  "begin": 10200,
                  "end": 10212,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10200,
                  "end": 10212,
                  "name": "SLOAD"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "MUL"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551786"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "OR"
                },
                {
                  "begin": 10200,
                  "end": 10216,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "SWAP2"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "DIV"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "tag",
                  "value": "56"
                },
                {
                  "begin": 10200,
                  "end": 10222,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10200,
                  "end": 10226,
                  "name": "PUSH [tag]",
                  "value": "41"
                },
                {
                  "begin": 10200,
                  "end": 10226,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10200,
                  "end": 10226,
                  "name": "MUL"
                },
                {
                  "begin": 10200,
                  "end": 10226,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551865"
                },
                {
                  "begin": 10200,
                  "end": 10226,
                  "name": "OR"
                },
                {
                  "begin": 10200,
                  "end": 10226,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "SWAP2"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "SWAP1"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "DIV"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "tag",
                  "value": "55"
                },
                {
                  "begin": 10200,
                  "end": 10252,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10183,
                  "end": 10195,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10183,
                  "end": 10195,
                  "name": "SLOAD"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "PUSH [tag]",
                  "value": "24"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "MUL"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "PUSH [tag]",
                  "value": "18446744073709551793"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "OR"
                },
                {
                  "begin": 10183,
                  "end": 10199,
                  "name": "SWAP1"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "SWAP2"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "SWAP1"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "PUSH",
                  "value": "100000000"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "SWAP1"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "DIV"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "tag",
                  "value": "54"
                },
                {
                  "begin": 10183,
                  "end": 10253,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10168,
                  "end": 10180,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10168,
                  "end": 10253,
                  "name": "DUP2"
                },
                {
                  "begin": 10168,
                  "end": 10253,
                  "name": "SWAP1"
                },
                {
                  "begin": 10168,
                  "end": 10253,
                  "name": "SSTORE"
                },
                {
                  "begin": 10168,
                  "end": 10253,
                  "name": "POP"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "tag",
                  "value": "49"
                },
                {
                  "begin": 9300,
                  "end": 10282,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10326,
                  "end": 10338,
                  "name": "NUMBER"
                },
                {
                  "begin": 10294,
                  "end": 10323,
                  "name": "PUSH",
                  "value": "6"
                },
                {
                  "begin": 10294,
                  "end": 10338,
                  "name": "DUP2"
                },
                {
                  "begin": 10294,
                  "end": 10338,
                  "name": "SWAP1"
                },
                {
                  "begin": 10294,
                  "end": 10338,
                  "name": "SSTORE"
                },
                {
                  "begin": 10294,
                  "end": 10338,
                  "name": "POP"
                },
                {
                  "begin": 10367,
                  "end": 10382,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 10367,
                  "end": 10382,
                  "name": "SLOAD"
                },
                {
                  "begin": 10352,
                  "end": 10364,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10352,
                  "end": 10364,
                  "name": "SLOAD"
                },
                {
                  "begin": 10352,
                  "end": 10382,
                  "name": "LT"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "ISZERO"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "PUSH [tag]",
                  "value": "57"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "JUMPI"
                },
                {
                  "begin": 10436,
                  "end": 10451,
                  "name": "PUSH",
                  "value": "9"
                },
                {
                  "begin": 10436,
                  "end": 10451,
                  "name": "SLOAD"
                },
                {
                  "begin": 10421,
                  "end": 10433,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10421,
                  "end": 10451,
                  "name": "DUP2"
                },
                {
                  "begin": 10421,
                  "end": 10451,
                  "name": "SWAP1"
                },
                {
                  "begin": 10421,
                  "end": 10451,
                  "name": "SSTORE"
                },
                {
                  "begin": 10421,
                  "end": 10451,
                  "name": "POP"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "tag",
                  "value": "57"
                },
                {
                  "begin": 10349,
                  "end": 10462,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 10490,
                  "end": 10505,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 10490,
                  "end": 10505,
                  "name": "SLOAD"
                },
                {
                  "begin": 10475,
                  "end": 10487,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10475,
                  "end": 10487,
                  "name": "SLOAD"
                },
                {
                  "begin": 10475,
                  "end": 10505,
                  "name": "GT"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "ISZERO"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "PUSH [tag]",
                  "value": "58"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "JUMPI"
                },
                {
                  "begin": 10554,
                  "end": 10569,
                  "name": "PUSH",
                  "value": "A"
                },
                {
                  "begin": 10554,
                  "end": 10569,
                  "name": "SLOAD"
                },
                {
                  "begin": 10539,
                  "end": 10551,
                  "name": "PUSH",
                  "value": "B"
                },
                {
                  "begin": 10539,
                  "end": 10569,
                  "name": "DUP2"
                },
                {
                  "begin": 10539,
                  "end": 10569,
                  "name": "SWAP1"
                },
                {
                  "begin": 10539,
                  "end": 10569,
                  "name": "SSTORE"
                },
                {
                  "begin": 10539,
                  "end": 10569,
                  "name": "POP"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "tag",
                  "value": "58"
                },
                {
                  "begin": 10472,
                  "end": 10580,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "POP"
                },
                {
                  "begin": 8757,
                  "end": 10586,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "tag",
                  "value": "41"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 946,
                  "end": 952,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 973,
                  "end": 974,
                  "name": "DUP2"
                },
                {
                  "begin": 969,
                  "end": 970,
                  "name": "DUP4"
                },
                {
                  "begin": 969,
                  "end": 974,
                  "name": "MUL"
                },
                {
                  "begin": 965,
                  "end": 974,
                  "name": "SWAP1"
                },
                {
                  "begin": 965,
                  "end": 974,
                  "name": "POP"
                },
                {
                  "begin": 998,
                  "end": 999,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 993,
                  "end": 994,
                  "name": "DUP4"
                },
                {
                  "begin": 993,
                  "end": 999,
                  "name": "EQ"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "DUP1"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "PUSH [tag]",
                  "value": "60"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "JUMPI"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "POP"
                },
                {
                  "begin": 1012,
                  "end": 1013,
                  "name": "DUP2"
                },
                {
                  "begin": 1007,
                  "end": 1008,
                  "name": "DUP4"
                },
                {
                  "begin": 1003,
                  "end": 1004,
                  "name": "DUP3"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "DUP2"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "ISZERO"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "ISZERO"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "PUSH [tag]",
                  "value": "61"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "JUMPI"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "INVALID"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "tag",
                  "value": "61"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1003,
                  "end": 1008,
                  "name": "DIV"
                },
                {
                  "begin": 1003,
                  "end": 1013,
                  "name": "EQ"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "tag",
                  "value": "60"
                },
                {
                  "begin": 993,
                  "end": 1013,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "ISZERO"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "ISZERO"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "PUSH [tag]",
                  "value": "62"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "JUMPI"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "DUP1"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "REVERT"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "tag",
                  "value": "62"
                },
                {
                  "begin": 985,
                  "end": 1014,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "SWAP3"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "SWAP2"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "POP"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "POP"
                },
                {
                  "begin": 894,
                  "end": 1022,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "tag",
                  "value": "44"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 826,
                  "end": 832,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 858,
                  "end": 859,
                  "name": "DUP3"
                },
                {
                  "begin": 853,
                  "end": 854,
                  "name": "DUP3"
                },
                {
                  "begin": 853,
                  "end": 859,
                  "name": "GT"
                },
                {
                  "begin": 853,
                  "end": 859,
                  "name": "ISZERO"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "ISZERO"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "ISZERO"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "PUSH [tag]",
                  "value": "64"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "JUMPI"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "DUP1"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "REVERT"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "tag",
                  "value": "64"
                },
                {
                  "begin": 845,
                  "end": 860,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 879,
                  "end": 880,
                  "name": "DUP2"
                },
                {
                  "begin": 875,
                  "end": 876,
                  "name": "DUP4"
                },
                {
                  "begin": 875,
                  "end": 880,
                  "name": "SUB"
                },
                {
                  "begin": 871,
                  "end": 880,
                  "name": "SWAP1"
                },
                {
                  "begin": 871,
                  "end": 880,
                  "name": "POP"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "SWAP3"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "SWAP2"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "POP"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "POP"
                },
                {
                  "begin": 774,
                  "end": 888,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "tag",
                  "value": "45"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1291,
                  "end": 1297,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 1317,
                  "end": 1318,
                  "name": "DUP2"
                },
                {
                  "begin": 1313,
                  "end": 1314,
                  "name": "DUP4"
                },
                {
                  "begin": 1313,
                  "end": 1318,
                  "name": "GT"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "ISZERO"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "PUSH [tag]",
                  "value": "66"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "JUMPI"
                },
                {
                  "begin": 1327,
                  "end": 1328,
                  "name": "DUP2"
                },
                {
                  "begin": 1320,
                  "end": 1328,
                  "name": "SWAP1"
                },
                {
                  "begin": 1320,
                  "end": 1328,
                  "name": "POP"
                },
                {
                  "begin": 1320,
                  "end": 1328,
                  "name": "PUSH [tag]",
                  "value": "65"
                },
                {
                  "begin": 1320,
                  "end": 1328,
                  "name": "JUMP"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "tag",
                  "value": "66"
                },
                {
                  "begin": 1310,
                  "end": 1328,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1346,
                  "end": 1347,
                  "name": "DUP3"
                },
                {
                  "begin": 1339,
                  "end": 1347,
                  "name": "SWAP1"
                },
                {
                  "begin": 1339,
                  "end": 1347,
                  "name": "POP"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "tag",
                  "value": "65"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "SWAP3"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "SWAP2"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "POP"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "POP"
                },
                {
                  "begin": 1229,
                  "end": 1355,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "9"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SLOAD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "AND"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MUL"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SUB"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "AND"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DIV"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "KECCAK256"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DIV"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "LT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "68"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MLOAD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "NOT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "AND"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP4"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "OR"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP6"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "67"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "68"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP6"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "67"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "69"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "GT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "70"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "MLOAD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "69"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "70"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "67"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "71"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "72"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "71"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "72"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "73"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "74"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP3"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "GT"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ISZERO"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "75"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPI"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP2"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SSTORE"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "ADD"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [tag]",
                  "value": "74"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "75"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "POP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "73"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "SWAP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "tag",
                  "value": "16"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "DUP1"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "CODECOPY"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 3801,
                  "end": 18453,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820378a2814ff16d98526eee2390febba1110f7e47bbf0e39cb4231866e968ceb490029",
                  ".code": [
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "LT"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DIV"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "AND"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "6FDDE03"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "95EA7B3"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "163AA00D"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "17DA485F"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "1801FBE5"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "18160DDD"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "23B872DD"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "2D38BF7A"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "313CE567"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "32E99708"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "3EAAF86B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "490203A7"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "13"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "4EF37628"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "14"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "4FA972E1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "5515A1EA"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "5CE7E030"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "6DE9F32B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "18"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "6FD396D6"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "70A08231"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "20"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "79BA5097"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "81269A56"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "22"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "829965CC"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "23"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "87A2A9D6"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "24"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "8A769D35"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "25"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "8AE0368B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "26"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "27"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "95D89B41"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "28"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "97566AA0"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "29"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "30"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "B5ADE81B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "31"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "BAFEDCAA"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "32"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "CAE9CA51"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "33"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "CB9AE707"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "34"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "D4EE1D90"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "35"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "DC39D06D"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "36"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "DC6E9CF9"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "37"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "38"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH",
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "EQ"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "PUSH [tag]",
                      "value": "39"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "tag",
                      "value": "1"
                    },
                    {
                      "begin": 3801,
                      "end": 18453,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16324,
                      "end": 16332,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16324,
                      "end": 16332,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16324,
                      "end": 16332,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "42"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "42"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "43"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "44"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "43"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "45"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "46"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "45"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "46"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "48"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "48"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH [tag]",
                      "value": "49"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "49"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "AND"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ADD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ADD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH [tag]",
                      "value": "51"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "50"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "ADD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SUB"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH [tag]",
                      "value": "52"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "52"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH [tag]",
                      "value": "54"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "53"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "ADD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "POP"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "POP"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SUB"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH [tag]",
                      "value": "55"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "55"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH [tag]",
                      "value": "56"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH [tag]",
                      "value": "57"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "56"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "ADD"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "POP"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "POP"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "SUB"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "RETURN"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH [tag]",
                      "value": "58"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "REVERT"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "58"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH [tag]",
                      "value": "59"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ADD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "NOT"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "AND"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ADD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH [tag]",
                      "value": "60"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "59"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP3"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP2"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "ADD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "DUP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SUB"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "RETURN"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH [tag]",
                      "value": "61"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "61"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH [tag]",
                      "value": "62"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH [tag]",
                      "value": "63"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "62"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "ADD"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "POP"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "POP"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "SUB"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "RETURN"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH [tag]",
                      "value": "64"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "REVERT"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "64"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH [tag]",
                      "value": "65"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "AND"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ADD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "AND"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ADD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ADD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH [tag]",
                      "value": "66"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "65"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "ADD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SUB"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH [tag]",
                      "value": "67"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "67"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH [tag]",
                      "value": "68"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH [tag]",
                      "value": "69"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "68"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "ADD"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "POP"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "POP"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "SUB"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH [tag]",
                      "value": "70"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "70"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH [tag]",
                      "value": "71"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH [tag]",
                      "value": "72"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "71"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "AND"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "AND"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "ADD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "POP"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "POP"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SUB"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH [tag]",
                      "value": "73"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "73"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH [tag]",
                      "value": "74"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH [tag]",
                      "value": "75"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "74"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "ADD"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "POP"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "POP"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "SUB"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH [tag]",
                      "value": "76"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "76"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH [tag]",
                      "value": "77"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH [tag]",
                      "value": "78"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "77"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "ADD"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "POP"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "POP"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "SUB"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "RETURN"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "13"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH [tag]",
                      "value": "79"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "79"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH [tag]",
                      "value": "80"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "80"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "ADD"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "POP"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "POP"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "SUB"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "RETURN"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "14"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH [tag]",
                      "value": "82"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "REVERT"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "82"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH [tag]",
                      "value": "83"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH [tag]",
                      "value": "84"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMP"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "83"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "NOT"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "AND"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "NOT"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "AND"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "ADD"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "POP"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "POP"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "SUB"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH [tag]",
                      "value": "85"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "85"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH [tag]",
                      "value": "86"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH [tag]",
                      "value": "87"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "86"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "ADD"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "POP"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "POP"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "SUB"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "RETURN"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "16"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH [tag]",
                      "value": "88"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "REVERT"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "88"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH [tag]",
                      "value": "89"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH [tag]",
                      "value": "90"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "89"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "DUP3"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "ADD"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "POP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "POP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "SUB"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "RETURN"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH [tag]",
                      "value": "91"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "91"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH [tag]",
                      "value": "92"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "ADD"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "POP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "POP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "PUSH [tag]",
                      "value": "93"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "92"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "STOP"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "18"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH [tag]",
                      "value": "94"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "94"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH [tag]",
                      "value": "95"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH [tag]",
                      "value": "96"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "95"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "ADD"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "POP"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "POP"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "SUB"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH [tag]",
                      "value": "97"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "97"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH [tag]",
                      "value": "98"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH [tag]",
                      "value": "99"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "98"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "AND"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "AND"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "ADD"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "POP"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "POP"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SUB"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "RETURN"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "20"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH [tag]",
                      "value": "100"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "100"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH [tag]",
                      "value": "101"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "AND"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "ADD"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "POP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "POP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH [tag]",
                      "value": "102"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "101"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "ADD"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "POP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "POP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SUB"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "103"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "103"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "104"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "PUSH [tag]",
                      "value": "105"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "104"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "STOP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "22"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH [tag]",
                      "value": "106"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "106"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH [tag]",
                      "value": "107"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ADD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "NOT"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "AND"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ADD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "NOT"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "AND"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ADD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ADD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH [tag]",
                      "value": "108"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "107"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "ADD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SUB"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "23"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH [tag]",
                      "value": "109"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "109"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH [tag]",
                      "value": "110"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH [tag]",
                      "value": "111"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "110"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "ADD"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "POP"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "POP"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "SUB"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "24"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH [tag]",
                      "value": "112"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "112"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH [tag]",
                      "value": "113"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH [tag]",
                      "value": "114"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "113"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "ADD"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "POP"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "POP"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "SUB"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "25"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH [tag]",
                      "value": "115"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "115"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH [tag]",
                      "value": "116"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH [tag]",
                      "value": "117"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "116"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "ADD"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "POP"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "POP"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "SUB"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "26"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH [tag]",
                      "value": "118"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "118"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH [tag]",
                      "value": "119"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH [tag]",
                      "value": "120"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "119"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "NOT"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "AND"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "NOT"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "AND"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "ADD"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "POP"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "POP"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "SUB"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "27"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "121"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "121"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "122"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH [tag]",
                      "value": "123"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "122"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "ADD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "POP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "POP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SUB"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "28"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "124"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "124"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "125"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "126"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "125"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SUB"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "POP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "127"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "128"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "127"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "128"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "130"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "130"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "29"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH [tag]",
                      "value": "131"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "REVERT"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "131"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH [tag]",
                      "value": "132"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "ADD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "NOT"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "AND"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "ADD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "NOT"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "AND"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "ADD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH [tag]",
                      "value": "133"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "132"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "NOT"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "AND"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "NOT"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "AND"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "ADD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SUB"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "RETURN"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "30"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH [tag]",
                      "value": "134"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "REVERT"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "134"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH [tag]",
                      "value": "135"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "AND"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ADD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ADD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH [tag]",
                      "value": "136"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "135"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "ADD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SUB"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "31"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH [tag]",
                      "value": "137"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "137"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH [tag]",
                      "value": "138"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH [tag]",
                      "value": "139"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "138"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "ADD"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "POP"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "POP"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "SUB"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "32"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH [tag]",
                      "value": "140"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "140"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH [tag]",
                      "value": "141"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH [tag]",
                      "value": "142"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "141"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "ADD"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "POP"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "POP"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "SUB"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "RETURN"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "33"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH [tag]",
                      "value": "143"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "REVERT"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "143"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH [tag]",
                      "value": "144"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "AND"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DIV"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MUL"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "CALLDATACOPY"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH [tag]",
                      "value": "145"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "144"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "ADD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SUB"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "34"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH [tag]",
                      "value": "146"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "146"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH [tag]",
                      "value": "147"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH [tag]",
                      "value": "148"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "147"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "ADD"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "POP"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "POP"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "SUB"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "35"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "149"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "149"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "150"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH [tag]",
                      "value": "151"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "150"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "ADD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "POP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "POP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SUB"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "RETURN"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "36"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH [tag]",
                      "value": "152"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "152"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH [tag]",
                      "value": "153"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "AND"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ADD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ADD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH [tag]",
                      "value": "154"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "153"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP3"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "ADD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SUB"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "RETURN"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "37"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH [tag]",
                      "value": "155"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "REVERT"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "155"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH [tag]",
                      "value": "156"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH [tag]",
                      "value": "157"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMP"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "156"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP3"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "ADD"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "POP"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "POP"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP1"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "SUB"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "RETURN"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "38"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH [tag]",
                      "value": "158"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "REVERT"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "158"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH [tag]",
                      "value": "159"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "AND"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "ADD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "AND"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "ADD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH [tag]",
                      "value": "160"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "159"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "ADD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SUB"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "RETURN"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "39"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "161"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "161"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "162"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "AND"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "ADD"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "PUSH [tag]",
                      "value": "163"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "162"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "STOP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "44"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "LT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "165"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DIV"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MUL"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "164"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "165"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "166"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "GT"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH [tag]",
                      "value": "166"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SUB"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "AND"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "ADD"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "tag",
                      "value": "164"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "POP"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3949,
                      "end": 3968,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "tag",
                      "value": "51"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13957,
                      "end": 13969,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14013,
                      "end": 14019,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 13989,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13990,
                      "end": 14000,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "AND"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "AND"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "ADD"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "ADD"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13982,
                      "end": 14001,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14002,
                      "end": 14009,
                      "name": "DUP6"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "AND"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "AND"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "ADD"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "ADD"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13982,
                      "end": 14010,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13982,
                      "end": 14019,
                      "name": "POP"
                    },
                    {
                      "begin": 14051,
                      "end": 14058,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "AND"
                    },
                    {
                      "begin": 14039,
                      "end": 14049,
                      "name": "CALLER"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "AND"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 14060,
                      "end": 14066,
                      "name": "DUP5"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "ADD"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "POP"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "POP"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SUB"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14030,
                      "end": 14067,
                      "name": "LOG3"
                    },
                    {
                      "begin": 14085,
                      "end": 14089,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 14078,
                      "end": 14089,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14078,
                      "end": 14089,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "POP"
                    },
                    {
                      "begin": 13894,
                      "end": 14097,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "tag",
                      "value": "54"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "PUSH",
                      "value": "11"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4688,
                      "end": 4724,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "tag",
                      "value": "57"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10926,
                      "end": 10930,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "PUSH [tag]",
                      "value": "169"
                    },
                    {
                      "begin": 10969,
                      "end": 10981,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10969,
                      "end": 10981,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10949,
                      "end": 10964,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10949,
                      "end": 10964,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10949,
                      "end": 10968,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 10949,
                      "end": 10968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "AND"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "tag",
                      "value": "169"
                    },
                    {
                      "begin": 10949,
                      "end": 10982,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10942,
                      "end": 10982,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10942,
                      "end": 10982,
                      "name": "POP"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10870,
                      "end": 10989,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "tag",
                      "value": "60"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 5949,
                      "end": 5961,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6134,
                      "end": 6148,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6499,
                      "end": 6515,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6722,
                      "end": 6740,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6162,
                      "end": 6177,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 6162,
                      "end": 6177,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6179,
                      "end": 6189,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6191,
                      "end": 6196,
                      "name": "DUP8"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP5"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "NOT"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "AND"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "NOT"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "AND"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "ADD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "AND"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "AND"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "1000000000000000000000000"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MUL"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "ADD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "ADD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "POP"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "POP"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "POP"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "POP"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SUB"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6152,
                      "end": 6198,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6134,
                      "end": 6198,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 6134,
                      "end": 6198,
                      "name": "POP"
                    },
                    {
                      "begin": 6286,
                      "end": 6302,
                      "name": "DUP5"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "NOT"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "AND"
                    },
                    {
                      "begin": 6276,
                      "end": 6282,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "NOT"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "AND"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "EQ"
                    },
                    {
                      "begin": 6276,
                      "end": 6302,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "PUSH [tag]",
                      "value": "172"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6304,
                      "end": 6312,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6304,
                      "end": 6312,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6304,
                      "end": 6312,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "tag",
                      "value": "172"
                    },
                    {
                      "begin": 6272,
                      "end": 6312,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6405,
                      "end": 6417,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 6405,
                      "end": 6417,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6395,
                      "end": 6401,
                      "name": "DUP4"
                    },
                    {
                      "begin": 6387,
                      "end": 6402,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 6387,
                      "end": 6402,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6387,
                      "end": 6402,
                      "name": "DIV"
                    },
                    {
                      "begin": 6387,
                      "end": 6417,
                      "name": "GT"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "PUSH [tag]",
                      "value": "173"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6419,
                      "end": 6427,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6419,
                      "end": 6427,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6419,
                      "end": 6427,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "tag",
                      "value": "173"
                    },
                    {
                      "begin": 6384,
                      "end": 6427,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6518,
                      "end": 6538,
                      "name": "PUSH",
                      "value": "13"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6539,
                      "end": 6554,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 6539,
                      "end": 6554,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "NOT"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "AND"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "NOT"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "AND"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "ADD"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "ADD"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6518,
                      "end": 6555,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6499,
                      "end": 6555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6499,
                      "end": 6555,
                      "name": "POP"
                    },
                    {
                      "begin": 6610,
                      "end": 6616,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6570,
                      "end": 6590,
                      "name": "PUSH",
                      "value": "13"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6591,
                      "end": 6606,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 6591,
                      "end": 6606,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "NOT"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "AND"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "NOT"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "AND"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "ADD"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "ADD"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6570,
                      "end": 6607,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "NOT"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "AND"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6570,
                      "end": 6616,
                      "name": "POP"
                    },
                    {
                      "begin": 6646,
                      "end": 6649,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "MUL"
                    },
                    {
                      "begin": 6634,
                      "end": 6642,
                      "name": "DUP3"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "NOT"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "AND"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "EQ"
                    },
                    {
                      "begin": 6634,
                      "end": 6649,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "PUSH [tag]",
                      "value": "174"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6651,
                      "end": 6659,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6651,
                      "end": 6659,
                      "name": "DUP1"
                    },
                    {
                      "begin": 6651,
                      "end": 6659,
                      "name": "REVERT"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "tag",
                      "value": "174"
                    },
                    {
                      "begin": 6631,
                      "end": 6659,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "PUSH [tag]",
                      "value": "175"
                    },
                    {
                      "begin": 6743,
                      "end": 6758,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "tag",
                      "value": "175"
                    },
                    {
                      "begin": 6743,
                      "end": 6760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6722,
                      "end": 6760,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6722,
                      "end": 6760,
                      "name": "POP"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "PUSH [tag]",
                      "value": "176"
                    },
                    {
                      "begin": 6823,
                      "end": 6836,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6798,
                      "end": 6806,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6807,
                      "end": 6817,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "AND"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "AND"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "ADD"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "ADD"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6798,
                      "end": 6818,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6798,
                      "end": 6822,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 6798,
                      "end": 6822,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "AND"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "tag",
                      "value": "176"
                    },
                    {
                      "begin": 6798,
                      "end": 6837,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6775,
                      "end": 6783,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6784,
                      "end": 6794,
                      "name": "CALLER"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "AND"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "AND"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "ADD"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "ADD"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 6775,
                      "end": 6795,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 6775,
                      "end": 6837,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6775,
                      "end": 6837,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6775,
                      "end": 6837,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6775,
                      "end": 6837,
                      "name": "POP"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "PUSH [tag]",
                      "value": "178"
                    },
                    {
                      "begin": 6884,
                      "end": 6897,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6867,
                      "end": 6879,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 6867,
                      "end": 6879,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6867,
                      "end": 6883,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 6867,
                      "end": 6883,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "AND"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "tag",
                      "value": "178"
                    },
                    {
                      "begin": 6867,
                      "end": 6898,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 6852,
                      "end": 6864,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "DUP2"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 6852,
                      "end": 6898,
                      "name": "POP"
                    },
                    {
                      "begin": 6990,
                      "end": 7005,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 6990,
                      "end": 7005,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6974,
                      "end": 6986,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 6974,
                      "end": 6986,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 6974,
                      "end": 7005,
                      "name": "GT"
                    },
                    {
                      "begin": 6974,
                      "end": 7005,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "PUSH [tag]",
                      "value": "179"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "INVALID"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "tag",
                      "value": "179"
                    },
                    {
                      "begin": 6967,
                      "end": 7006,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7080,
                      "end": 7090,
                      "name": "CALLER"
                    },
                    {
                      "begin": 7065,
                      "end": 7077,
                      "name": "PUSH",
                      "value": "F"
                    },
                    {
                      "begin": 7065,
                      "end": 7077,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "EXP"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "MUL"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "NOT"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "AND"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "AND"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "MUL"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "OR"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7065,
                      "end": 7090,
                      "name": "POP"
                    },
                    {
                      "begin": 7123,
                      "end": 7136,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7104,
                      "end": 7120,
                      "name": "PUSH",
                      "value": "10"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7104,
                      "end": 7136,
                      "name": "POP"
                    },
                    {
                      "begin": 7177,
                      "end": 7189,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 7150,
                      "end": 7174,
                      "name": "PUSH",
                      "value": "11"
                    },
                    {
                      "begin": 7150,
                      "end": 7189,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7150,
                      "end": 7189,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7150,
                      "end": 7189,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7150,
                      "end": 7189,
                      "name": "POP"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "PUSH [tag]",
                      "value": "180"
                    },
                    {
                      "begin": 7206,
                      "end": 7226,
                      "name": "PUSH [tag]",
                      "value": "181"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "tag",
                      "value": "180"
                    },
                    {
                      "begin": 7206,
                      "end": 7228,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7250,
                      "end": 7260,
                      "name": "CALLER"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "AND"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "CF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
                    },
                    {
                      "begin": 7262,
                      "end": 7275,
                      "name": "DUP3"
                    },
                    {
                      "begin": 7277,
                      "end": 7287,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 7277,
                      "end": 7287,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7289,
                      "end": 7304,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 7289,
                      "end": 7304,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP5"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "ADD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP4"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "ADD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP3"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "NOT"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "AND"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "NOT"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "AND"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "ADD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "POP"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "POP"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "POP"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "POP"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SUB"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7245,
                      "end": 7306,
                      "name": "LOG2"
                    },
                    {
                      "begin": 7327,
                      "end": 7331,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 7320,
                      "end": 7331,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 7320,
                      "end": 7331,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "POP"
                    },
                    {
                      "begin": 5878,
                      "end": 7343,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "tag",
                      "value": "63"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12352,
                      "end": 12356,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12392,
                      "end": 12400,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12409,
                      "end": 12410,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "AND"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "AND"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "ADD"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "ADD"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 12392,
                      "end": 12412,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12376,
                      "end": 12388,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 12376,
                      "end": 12388,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12376,
                      "end": 12412,
                      "name": "SUB"
                    },
                    {
                      "begin": 12369,
                      "end": 12412,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12369,
                      "end": 12412,
                      "name": "POP"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12304,
                      "end": 12420,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "tag",
                      "value": "66"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14715,
                      "end": 14727,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "PUSH [tag]",
                      "value": "184"
                    },
                    {
                      "begin": 14776,
                      "end": 14782,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14757,
                      "end": 14765,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14766,
                      "end": 14770,
                      "name": "DUP8"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "AND"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "AND"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "ADD"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "ADD"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14757,
                      "end": 14771,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14757,
                      "end": 14775,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 14757,
                      "end": 14775,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "AND"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "tag",
                      "value": "184"
                    },
                    {
                      "begin": 14757,
                      "end": 14783,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14740,
                      "end": 14748,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14749,
                      "end": 14753,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "AND"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "AND"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "ADD"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "ADD"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14740,
                      "end": 14754,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14740,
                      "end": 14783,
                      "name": "POP"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "PUSH [tag]",
                      "value": "186"
                    },
                    {
                      "begin": 14852,
                      "end": 14858,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14822,
                      "end": 14829,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14830,
                      "end": 14834,
                      "name": "DUP8"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "ADD"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "ADD"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14822,
                      "end": 14835,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14836,
                      "end": 14846,
                      "name": "CALLER"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "ADD"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "ADD"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14822,
                      "end": 14847,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14822,
                      "end": 14851,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 14822,
                      "end": 14851,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "AND"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "tag",
                      "value": "186"
                    },
                    {
                      "begin": 14822,
                      "end": 14859,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14794,
                      "end": 14801,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14802,
                      "end": 14806,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "AND"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "AND"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "ADD"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "ADD"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14794,
                      "end": 14807,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14808,
                      "end": 14818,
                      "name": "CALLER"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "AND"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "AND"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "ADD"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "ADD"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14794,
                      "end": 14819,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14794,
                      "end": 14859,
                      "name": "POP"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "PUSH [tag]",
                      "value": "187"
                    },
                    {
                      "begin": 14902,
                      "end": 14908,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14885,
                      "end": 14893,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14894,
                      "end": 14896,
                      "name": "DUP7"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "AND"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "AND"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "ADD"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "ADD"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14885,
                      "end": 14897,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 14885,
                      "end": 14901,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 14885,
                      "end": 14901,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "AND"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "tag",
                      "value": "187"
                    },
                    {
                      "begin": 14885,
                      "end": 14909,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 14870,
                      "end": 14878,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14879,
                      "end": 14881,
                      "name": "DUP6"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "AND"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "AND"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "ADD"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "ADD"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 14870,
                      "end": 14882,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 14870,
                      "end": 14909,
                      "name": "POP"
                    },
                    {
                      "begin": 14935,
                      "end": 14937,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "AND"
                    },
                    {
                      "begin": 14929,
                      "end": 14933,
                      "name": "DUP5"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "AND"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 14939,
                      "end": 14945,
                      "name": "DUP5"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP3"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP2"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "ADD"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "POP"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "POP"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "DUP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SUB"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14920,
                      "end": 14946,
                      "name": "LOG3"
                    },
                    {
                      "begin": 14964,
                      "end": 14968,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 14957,
                      "end": 14968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 14957,
                      "end": 14968,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "POP"
                    },
                    {
                      "begin": 14638,
                      "end": 14976,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "tag",
                      "value": "69"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4559,
                      "end": 4580,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "tag",
                      "value": "72"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "EXP"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DIV"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "AND"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3975,
                      "end": 3996,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "tag",
                      "value": "75"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11047,
                      "end": 11051,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11069,
                      "end": 11081,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 11069,
                      "end": 11081,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11062,
                      "end": 11081,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11062,
                      "end": 11081,
                      "name": "POP"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10995,
                      "end": 11087,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "tag",
                      "value": "78"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4003,
                      "end": 4027,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "tag",
                      "value": "81"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11253,
                      "end": 11257,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "PUSH [tag]",
                      "value": "190"
                    },
                    {
                      "begin": 11438,
                      "end": 11447,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 11438,
                      "end": 11447,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11435,
                      "end": 11436,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 11435,
                      "end": 11447,
                      "name": "EXP"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "EXP"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "DIV"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11418,
                      "end": 11426,
                      "name": "AND"
                    },
                    {
                      "begin": 11413,
                      "end": 11427,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 11413,
                      "end": 11427,
                      "name": "AND"
                    },
                    {
                      "begin": 11409,
                      "end": 11411,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 11409,
                      "end": 11427,
                      "name": "EXP"
                    },
                    {
                      "begin": 11404,
                      "end": 11406,
                      "name": "PUSH",
                      "value": "32"
                    },
                    {
                      "begin": 11404,
                      "end": 11427,
                      "name": "MUL"
                    },
                    {
                      "begin": 11403,
                      "end": 11433,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 11403,
                      "end": 11433,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "AND"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "tag",
                      "value": "190"
                    },
                    {
                      "begin": 11403,
                      "end": 11449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11396,
                      "end": 11449,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11396,
                      "end": 11449,
                      "name": "POP"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11201,
                      "end": 11458,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "tag",
                      "value": "84"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10733,
                      "end": 10740,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 10759,
                      "end": 10774,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 10759,
                      "end": 10774,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10752,
                      "end": 10774,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10752,
                      "end": 10774,
                      "name": "POP"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10678,
                      "end": 10781,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "tag",
                      "value": "87"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4586,
                      "end": 4613,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "tag",
                      "value": "90"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17117,
                      "end": 17129,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17867,
                      "end": 17885,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "PUSH [tag]",
                      "value": "193"
                    },
                    {
                      "begin": 17888,
                      "end": 17903,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "tag",
                      "value": "193"
                    },
                    {
                      "begin": 17888,
                      "end": 17905,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17867,
                      "end": 17905,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17867,
                      "end": 17905,
                      "name": "POP"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "PUSH [tag]",
                      "value": "194"
                    },
                    {
                      "begin": 17964,
                      "end": 17977,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17939,
                      "end": 17947,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17948,
                      "end": 17958,
                      "name": "CALLER"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "AND"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "AND"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "ADD"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "ADD"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 17939,
                      "end": 17959,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 17939,
                      "end": 17963,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 17939,
                      "end": 17963,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "AND"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "tag",
                      "value": "194"
                    },
                    {
                      "begin": 17939,
                      "end": 17978,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17916,
                      "end": 17924,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17925,
                      "end": 17935,
                      "name": "CALLER"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "AND"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "AND"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "ADD"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "ADD"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 17916,
                      "end": 17936,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 17916,
                      "end": 17978,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17916,
                      "end": 17978,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17916,
                      "end": 17978,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 17916,
                      "end": 17978,
                      "name": "POP"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "PUSH [tag]",
                      "value": "195"
                    },
                    {
                      "begin": 18021,
                      "end": 18034,
                      "name": "DUP2"
                    },
                    {
                      "begin": 18004,
                      "end": 18016,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 18004,
                      "end": 18016,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 18004,
                      "end": 18020,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 18004,
                      "end": 18020,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "AND"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "tag",
                      "value": "195"
                    },
                    {
                      "begin": 18004,
                      "end": 18035,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17989,
                      "end": 18001,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 17989,
                      "end": 18035,
                      "name": "POP"
                    },
                    {
                      "begin": 18119,
                      "end": 18134,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 18119,
                      "end": 18134,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 18103,
                      "end": 18115,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 18103,
                      "end": 18115,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 18103,
                      "end": 18134,
                      "name": "GT"
                    },
                    {
                      "begin": 18103,
                      "end": 18134,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "PUSH [tag]",
                      "value": "196"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "INVALID"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "tag",
                      "value": "196"
                    },
                    {
                      "begin": 18096,
                      "end": 18135,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 18201,
                      "end": 18211,
                      "name": "CALLER"
                    },
                    {
                      "begin": 18186,
                      "end": 18198,
                      "name": "PUSH",
                      "value": "F"
                    },
                    {
                      "begin": 18186,
                      "end": 18198,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "EXP"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "DUP2"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "DUP2"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "MUL"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "NOT"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "AND"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "DUP4"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "AND"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "MUL"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "OR"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18186,
                      "end": 18211,
                      "name": "POP"
                    },
                    {
                      "begin": 18240,
                      "end": 18253,
                      "name": "DUP1"
                    },
                    {
                      "begin": 18221,
                      "end": 18237,
                      "name": "PUSH",
                      "value": "10"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "DUP2"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18221,
                      "end": 18253,
                      "name": "POP"
                    },
                    {
                      "begin": 18290,
                      "end": 18302,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 18263,
                      "end": 18287,
                      "name": "PUSH",
                      "value": "11"
                    },
                    {
                      "begin": 18263,
                      "end": 18302,
                      "name": "DUP2"
                    },
                    {
                      "begin": 18263,
                      "end": 18302,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 18263,
                      "end": 18302,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 18263,
                      "end": 18302,
                      "name": "POP"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "PUSH [tag]",
                      "value": "197"
                    },
                    {
                      "begin": 18318,
                      "end": 18338,
                      "name": "PUSH [tag]",
                      "value": "181"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "tag",
                      "value": "197"
                    },
                    {
                      "begin": 18318,
                      "end": 18340,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 18437,
                      "end": 18441,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 18430,
                      "end": 18441,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 18430,
                      "end": 18441,
                      "name": "POP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "POP"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17074,
                      "end": 18449,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "tag",
                      "value": "93"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 17057,
                      "end": 17060,
                      "name": "DUP1"
                    },
                    {
                      "begin": 17042,
                      "end": 17054,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 17042,
                      "end": 17060,
                      "name": "DUP2"
                    },
                    {
                      "begin": 17042,
                      "end": 17060,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 17042,
                      "end": 17060,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 17042,
                      "end": 17060,
                      "name": "POP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "POP"
                    },
                    {
                      "begin": 16988,
                      "end": 17067,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "tag",
                      "value": "96"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4812,
                      "end": 4836,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "tag",
                      "value": "99"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "F"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "EXP"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DIV"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "AND"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4621,
                      "end": 4648,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "tag",
                      "value": "102"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12709,
                      "end": 12721,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12741,
                      "end": 12749,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12750,
                      "end": 12760,
                      "name": "DUP4"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "AND"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "AND"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "ADD"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "ADD"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 12741,
                      "end": 12761,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 12734,
                      "end": 12761,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12734,
                      "end": 12761,
                      "name": "POP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "POP"
                    },
                    {
                      "begin": 12645,
                      "end": 12769,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "tag",
                      "value": "105"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "EXP"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "DIV"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3412,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3408,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "AND"
                    },
                    {
                      "begin": 3398,
                      "end": 3420,
                      "name": "EQ"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH [tag]",
                      "value": "201"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "tag",
                      "value": "201"
                    },
                    {
                      "begin": 3390,
                      "end": 3421,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "EXP"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "DIV"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3460,
                      "end": 3468,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "AND"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "EXP"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "DIV"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3453,
                      "end": 3458,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "AND"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SUB"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3432,
                      "end": 3469,
                      "name": "LOG3"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "EXP"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "DIV"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3488,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3485,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3480,
                      "end": 3485,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "EXP"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "MUL"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "NOT"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "AND"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "MUL"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "OR"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3480,
                      "end": 3496,
                      "name": "POP"
                    },
                    {
                      "begin": 3526,
                      "end": 3527,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3507,
                      "end": 3515,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3507,
                      "end": 3515,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "EXP"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "MUL"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "NOT"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "AND"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "MUL"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "OR"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3507,
                      "end": 3528,
                      "name": "POP"
                    },
                    {
                      "begin": 3345,
                      "end": 3536,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "tag",
                      "value": "108"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11911,
                      "end": 11923,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11938,
                      "end": 11952,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11965,
                      "end": 11981,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11982,
                      "end": 11992,
                      "name": "CALLER"
                    },
                    {
                      "begin": 11993,
                      "end": 11998,
                      "name": "DUP8"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP5"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "NOT"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "AND"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "NOT"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "AND"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "ADD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "AND"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "AND"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "1000000000000000000000000"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MUL"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "ADD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "ADD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "POP"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "POP"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "POP"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "POP"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SUB"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11955,
                      "end": 11999,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 11938,
                      "end": 11999,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11938,
                      "end": 11999,
                      "name": "POP"
                    },
                    {
                      "begin": 12033,
                      "end": 12043,
                      "name": "DUP3"
                    },
                    {
                      "begin": 12023,
                      "end": 12029,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12015,
                      "end": 12030,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 12015,
                      "end": 12030,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 12015,
                      "end": 12030,
                      "name": "DIV"
                    },
                    {
                      "begin": 12015,
                      "end": 12043,
                      "name": "GT"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "PUSH [tag]",
                      "value": "203"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 12045,
                      "end": 12053,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12045,
                      "end": 12053,
                      "name": "DUP1"
                    },
                    {
                      "begin": 12045,
                      "end": 12053,
                      "name": "REVERT"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "tag",
                      "value": "203"
                    },
                    {
                      "begin": 12012,
                      "end": 12053,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12084,
                      "end": 12100,
                      "name": "DUP5"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "NOT"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "AND"
                    },
                    {
                      "begin": 12074,
                      "end": 12080,
                      "name": "DUP2"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "NOT"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "AND"
                    },
                    {
                      "begin": 12074,
                      "end": 12100,
                      "name": "EQ"
                    },
                    {
                      "begin": 12066,
                      "end": 12101,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 12066,
                      "end": 12101,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "POP"
                    },
                    {
                      "begin": 11779,
                      "end": 12113,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "tag",
                      "value": "111"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4087,
                      "end": 4109,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "tag",
                      "value": "114"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4393,
                      "end": 4430,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "tag",
                      "value": "117"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4438,
                      "end": 4462,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "tag",
                      "value": "120"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4469,
                      "end": 4499,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "tag",
                      "value": "123"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "EXP"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DIV"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "AND"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2948,
                      "end": 2968,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "126"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SUB"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SUB"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "204"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "LT"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "205"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DIV"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MUL"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "204"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "205"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "206"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "GT"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH [tag]",
                      "value": "206"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SUB"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "AND"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "ADD"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "tag",
                      "value": "204"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "POP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "POP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "POP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "POP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "POP"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3922,
                      "end": 3942,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "tag",
                      "value": "133"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 11608,
                      "end": 11626,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11639,
                      "end": 11653,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11666,
                      "end": 11682,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11683,
                      "end": 11693,
                      "name": "CALLER"
                    },
                    {
                      "begin": 11694,
                      "end": 11699,
                      "name": "DUP7"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP5"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "NOT"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "AND"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "NOT"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "AND"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "ADD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP4"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "AND"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "AND"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "1000000000000000000000000"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MUL"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "ADD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP3"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "ADD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "POP"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "POP"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "POP"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "POP"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SUB"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11656,
                      "end": 11700,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 11639,
                      "end": 11700,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 11639,
                      "end": 11700,
                      "name": "POP"
                    },
                    {
                      "begin": 11718,
                      "end": 11724,
                      "name": "DUP1"
                    },
                    {
                      "begin": 11711,
                      "end": 11724,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 11711,
                      "end": 11724,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "POP"
                    },
                    {
                      "begin": 11497,
                      "end": 11734,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "tag",
                      "value": "136"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13177,
                      "end": 13189,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "PUSH [tag]",
                      "value": "209"
                    },
                    {
                      "begin": 13250,
                      "end": 13256,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13225,
                      "end": 13233,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13234,
                      "end": 13244,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "AND"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "AND"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "ADD"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "ADD"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13225,
                      "end": 13245,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13225,
                      "end": 13249,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 13225,
                      "end": 13249,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "AND"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "tag",
                      "value": "209"
                    },
                    {
                      "begin": 13225,
                      "end": 13257,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13202,
                      "end": 13210,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13211,
                      "end": 13221,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "AND"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "AND"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "ADD"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "ADD"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13202,
                      "end": 13222,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13202,
                      "end": 13257,
                      "name": "POP"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "PUSH [tag]",
                      "value": "210"
                    },
                    {
                      "begin": 13300,
                      "end": 13306,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13283,
                      "end": 13291,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13292,
                      "end": 13294,
                      "name": "DUP7"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "AND"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "AND"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "ADD"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "ADD"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13283,
                      "end": 13295,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 13283,
                      "end": 13299,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 13283,
                      "end": 13299,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "AND"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "tag",
                      "value": "210"
                    },
                    {
                      "begin": 13283,
                      "end": 13307,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 13268,
                      "end": 13276,
                      "name": "PUSH",
                      "value": "15"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13277,
                      "end": 13279,
                      "name": "DUP6"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "AND"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "AND"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "ADD"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "ADD"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 13268,
                      "end": 13280,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 13268,
                      "end": 13307,
                      "name": "POP"
                    },
                    {
                      "begin": 13339,
                      "end": 13341,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "AND"
                    },
                    {
                      "begin": 13327,
                      "end": 13337,
                      "name": "CALLER"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "AND"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 13343,
                      "end": 13349,
                      "name": "DUP5"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "DUP3"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "DUP2"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "ADD"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "POP"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "POP"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "DUP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SUB"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13318,
                      "end": 13350,
                      "name": "LOG3"
                    },
                    {
                      "begin": 13368,
                      "end": 13372,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 13361,
                      "end": 13372,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 13361,
                      "end": 13372,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "POP"
                    },
                    {
                      "begin": 13118,
                      "end": 13380,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "tag",
                      "value": "139"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4143,
                      "end": 4186,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "tag",
                      "value": "142"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "PUSH",
                      "value": "10"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4654,
                      "end": 4682,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "tag",
                      "value": "145"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15861,
                      "end": 15873,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15917,
                      "end": 15923,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15886,
                      "end": 15893,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15894,
                      "end": 15904,
                      "name": "CALLER"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "AND"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "AND"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "ADD"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "ADD"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15886,
                      "end": 15905,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15906,
                      "end": 15913,
                      "name": "DUP7"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "AND"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "AND"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "ADD"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "ADD"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15886,
                      "end": 15914,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 15886,
                      "end": 15923,
                      "name": "POP"
                    },
                    {
                      "begin": 15955,
                      "end": 15962,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "AND"
                    },
                    {
                      "begin": 15943,
                      "end": 15953,
                      "name": "CALLER"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "AND"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 15964,
                      "end": 15970,
                      "name": "DUP6"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "ADD"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "POP"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "POP"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SUB"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15934,
                      "end": 15971,
                      "name": "LOG3"
                    },
                    {
                      "begin": 16005,
                      "end": 16012,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15982,
                      "end": 16029,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16029,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16029,
                      "name": "PUSH",
                      "value": "8F4FFCB1"
                    },
                    {
                      "begin": 16030,
                      "end": 16040,
                      "name": "CALLER"
                    },
                    {
                      "begin": 16042,
                      "end": 16048,
                      "name": "DUP6"
                    },
                    {
                      "begin": 16050,
                      "end": 16054,
                      "name": "ADDRESS"
                    },
                    {
                      "begin": 16056,
                      "end": 16060,
                      "name": "DUP7"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP6"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MUL"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP6"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "AND"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SUB"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP3"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "POP"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "ADD"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP1"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15982,
                      "end": 16061,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "212"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "213"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "212"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "213"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "215"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "215"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP6"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP8"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "216"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "216"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "GAS"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "CALL"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "217"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "217"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 16079,
                      "end": 16083,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 16072,
                      "end": 16083,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16072,
                      "end": 16083,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "POP"
                    },
                    {
                      "begin": 15779,
                      "end": 16091,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "tag",
                      "value": "148"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4037,
                      "end": 4078,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "tag",
                      "value": "151"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "EXP"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DIV"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "AND"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2975,
                      "end": 2998,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "tag",
                      "value": "154"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16668,
                      "end": 16680,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "EXP"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DIV"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3200,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "EQ"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH [tag]",
                      "value": "219"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "tag",
                      "value": "219"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16715,
                      "end": 16727,
                      "name": "DUP3"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16737,
                      "name": "PUSH",
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "EXP"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "DIV"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 16738,
                      "end": 16743,
                      "name": "AND"
                    },
                    {
                      "begin": 16745,
                      "end": 16751,
                      "name": "DUP5"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MUL"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "AND"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP3"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ADD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP4"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SUB"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP2"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP8"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "EXTCODESIZE"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH [tag]",
                      "value": "221"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "tag",
                      "value": "221"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "2C6"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "GAS"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SUB"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "CALL"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH [tag]",
                      "value": "222"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "REVERT"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "tag",
                      "value": "222"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "DUP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16700,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16693,
                      "end": 16752,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 16693,
                      "end": 16752,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "POP"
                    },
                    {
                      "begin": 16576,
                      "end": 16760,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "tag",
                      "value": "157"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "DUP2"
                    },
                    {
                      "begin": 4216,
                      "end": 4252,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "tag",
                      "value": "160"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 15343,
                      "end": 15357,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15377,
                      "end": 15384,
                      "name": "PUSH",
                      "value": "16"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15385,
                      "end": 15395,
                      "name": "DUP5"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "AND"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "AND"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "ADD"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "ADD"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15377,
                      "end": 15396,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15397,
                      "end": 15404,
                      "name": "DUP4"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "AND"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "AND"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "ADD"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "DUP2"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "ADD"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 15377,
                      "end": 15405,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 15370,
                      "end": 15405,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 15370,
                      "end": 15405,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "POP"
                    },
                    {
                      "begin": 15262,
                      "end": 15413,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "tag",
                      "value": "163"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "EXP"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "DIV"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3204,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3200,
                      "name": "CALLER"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "AND"
                    },
                    {
                      "begin": 3190,
                      "end": 3209,
                      "name": "EQ"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH [tag]",
                      "value": "225"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "REVERT"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "tag",
                      "value": "225"
                    },
                    {
                      "begin": 3182,
                      "end": 3210,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3322,
                      "end": 3331,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3319,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3311,
                      "end": 3319,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "EXP"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "MUL"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "NOT"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "AND"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "MUL"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "OR"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 3311,
                      "end": 3331,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "POP"
                    },
                    {
                      "begin": 3237,
                      "end": 3339,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "tag",
                      "value": "170"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1080,
                      "end": 1086,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1111,
                      "end": 1112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1107,
                      "end": 1108,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1107,
                      "end": 1112,
                      "name": "GT"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "PUSH [tag]",
                      "value": "228"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "tag",
                      "value": "228"
                    },
                    {
                      "begin": 1099,
                      "end": 1113,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1132,
                      "end": 1133,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1128,
                      "end": 1129,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "PUSH [tag]",
                      "value": "229"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "INVALID"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "tag",
                      "value": "229"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1128,
                      "end": 1133,
                      "name": "DIV"
                    },
                    {
                      "begin": 1124,
                      "end": 1133,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1124,
                      "end": 1133,
                      "name": "POP"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "POP"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "POP"
                    },
                    {
                      "begin": 1028,
                      "end": 1141,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "tag",
                      "value": "177"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 706,
                      "end": 712,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 733,
                      "end": 734,
                      "name": "DUP2"
                    },
                    {
                      "begin": 729,
                      "end": 730,
                      "name": "DUP4"
                    },
                    {
                      "begin": 729,
                      "end": 734,
                      "name": "ADD"
                    },
                    {
                      "begin": 725,
                      "end": 734,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 725,
                      "end": 734,
                      "name": "POP"
                    },
                    {
                      "begin": 758,
                      "end": 759,
                      "name": "DUP3"
                    },
                    {
                      "begin": 753,
                      "end": 754,
                      "name": "DUP2"
                    },
                    {
                      "begin": 753,
                      "end": 759,
                      "name": "LT"
                    },
                    {
                      "begin": 753,
                      "end": 759,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "PUSH [tag]",
                      "value": "231"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "DUP1"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "REVERT"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "tag",
                      "value": "231"
                    },
                    {
                      "begin": 745,
                      "end": 760,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "POP"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "POP"
                    },
                    {
                      "begin": 654,
                      "end": 768,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 7382,
                      "end": 8533,
                      "name": "tag",
                      "value": "181"
                    },
                    {
                      "begin": 7382,
                      "end": 8533,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7749,
                      "end": 7764,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 7749,
                      "end": 7764,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "PUSH [tag]",
                      "value": "233"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "PUSH [tag]",
                      "value": "234"
                    },
                    {
                      "begin": 7728,
                      "end": 7743,
                      "name": "PUSH [tag]",
                      "value": "81"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "tag",
                      "value": "234"
                    },
                    {
                      "begin": 7728,
                      "end": 7745,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7711,
                      "end": 7723,
                      "name": "PUSH",
                      "value": "14"
                    },
                    {
                      "begin": 7711,
                      "end": 7723,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7711,
                      "end": 7727,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 7711,
                      "end": 7727,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "AND"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "tag",
                      "value": "233"
                    },
                    {
                      "begin": 7711,
                      "end": 7746,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7711,
                      "end": 7764,
                      "name": "GT"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "DUP1"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "PUSH [tag]",
                      "value": "235"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "POP"
                    },
                    {
                      "begin": 7780,
                      "end": 7782,
                      "name": "PUSH",
                      "value": "27"
                    },
                    {
                      "begin": 7768,
                      "end": 7777,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 7768,
                      "end": 7777,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7768,
                      "end": 7782,
                      "name": "LT"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "tag",
                      "value": "235"
                    },
                    {
                      "begin": 7711,
                      "end": 7782,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "PUSH [tag]",
                      "value": "236"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 7824,
                      "end": 7825,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 7812,
                      "end": 7821,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 7812,
                      "end": 7821,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7812,
                      "end": 7825,
                      "name": "ADD"
                    },
                    {
                      "begin": 7800,
                      "end": 7809,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 7800,
                      "end": 7825,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7800,
                      "end": 7825,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7800,
                      "end": 7825,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7800,
                      "end": 7825,
                      "name": "POP"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "tag",
                      "value": "236"
                    },
                    {
                      "begin": 7707,
                      "end": 7834,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "PUSH [tag]",
                      "value": "237"
                    },
                    {
                      "begin": 8044,
                      "end": 8045,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 8032,
                      "end": 8041,
                      "name": "PUSH",
                      "value": "D"
                    },
                    {
                      "begin": 8032,
                      "end": 8041,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8032,
                      "end": 8045,
                      "name": "ADD"
                    },
                    {
                      "begin": 8028,
                      "end": 8029,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 8028,
                      "end": 8046,
                      "name": "EXP"
                    },
                    {
                      "begin": 8010,
                      "end": 8022,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 8010,
                      "end": 8022,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8010,
                      "end": 8026,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 8010,
                      "end": 8026,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "AND"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "tag",
                      "value": "237"
                    },
                    {
                      "begin": 8010,
                      "end": 8047,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 7995,
                      "end": 8007,
                      "name": "PUSH",
                      "value": "5"
                    },
                    {
                      "begin": 7995,
                      "end": 8007,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 7995,
                      "end": 8047,
                      "name": "SUB"
                    },
                    {
                      "begin": 7977,
                      "end": 7992,
                      "name": "PUSH",
                      "value": "E"
                    },
                    {
                      "begin": 7977,
                      "end": 8047,
                      "name": "DUP2"
                    },
                    {
                      "begin": 7977,
                      "end": 8047,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 7977,
                      "end": 8047,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 7977,
                      "end": 8047,
                      "name": "POP"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "PUSH [tag]",
                      "value": "238"
                    },
                    {
                      "begin": 8084,
                      "end": 8085,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 8069,
                      "end": 8079,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 8069,
                      "end": 8079,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8069,
                      "end": 8083,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 8069,
                      "end": 8083,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "AND"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "tag",
                      "value": "238"
                    },
                    {
                      "begin": 8069,
                      "end": 8086,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8056,
                      "end": 8066,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8056,
                      "end": 8086,
                      "name": "POP"
                    },
                    {
                      "begin": 8213,
                      "end": 8214,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8185,
                      "end": 8209,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 8185,
                      "end": 8209,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8172,
                      "end": 8182,
                      "name": "PUSH",
                      "value": "7"
                    },
                    {
                      "begin": 8172,
                      "end": 8182,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "PUSH [tag]",
                      "value": "239"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "INVALID"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "tag",
                      "value": "239"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8172,
                      "end": 8209,
                      "name": "MOD"
                    },
                    {
                      "begin": 8172,
                      "end": 8214,
                      "name": "EQ"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "PUSH [tag]",
                      "value": "240"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "PUSH [tag]",
                      "value": "241"
                    },
                    {
                      "begin": 8232,
                      "end": 8251,
                      "name": "PUSH [tag]",
                      "value": "242"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "tag",
                      "value": "241"
                    },
                    {
                      "begin": 8232,
                      "end": 8253,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "tag",
                      "value": "240"
                    },
                    {
                      "begin": 8169,
                      "end": 8262,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8518,
                      "end": 8519,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 8503,
                      "end": 8515,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 8503,
                      "end": 8519,
                      "name": "SUB"
                    },
                    {
                      "begin": 8487,
                      "end": 8520,
                      "name": "BLOCKHASH"
                    },
                    {
                      "begin": 8469,
                      "end": 8484,
                      "name": "PUSH",
                      "value": "C"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "DUP2"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "NOT"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "AND"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 8469,
                      "end": 8520,
                      "name": "POP"
                    },
                    {
                      "begin": 7382,
                      "end": 8533,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "tag",
                      "value": "185"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 826,
                      "end": 832,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 858,
                      "end": 859,
                      "name": "DUP3"
                    },
                    {
                      "begin": 853,
                      "end": 854,
                      "name": "DUP3"
                    },
                    {
                      "begin": 853,
                      "end": 859,
                      "name": "GT"
                    },
                    {
                      "begin": 853,
                      "end": 859,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "PUSH [tag]",
                      "value": "244"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "DUP1"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "REVERT"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "tag",
                      "value": "244"
                    },
                    {
                      "begin": 845,
                      "end": 860,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 879,
                      "end": 880,
                      "name": "DUP2"
                    },
                    {
                      "begin": 875,
                      "end": 876,
                      "name": "DUP4"
                    },
                    {
                      "begin": 875,
                      "end": 880,
                      "name": "SUB"
                    },
                    {
                      "begin": 871,
                      "end": 880,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 871,
                      "end": 880,
                      "name": "POP"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "POP"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "POP"
                    },
                    {
                      "begin": 774,
                      "end": 888,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "tag",
                      "value": "242"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8809,
                      "end": 8848,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9066,
                      "end": 9082,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9126,
                      "end": 9159,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9392,
                      "end": 9413,
                      "name": "DUP1"
                    },
                    {
                      "begin": 9510,
                      "end": 9537,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 9901,
                      "end": 9924,
                      "name": "DUP1"
                    },
                    {
                      "begin": 10021,
                      "end": 10050,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8866,
                      "end": 8895,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 8866,
                      "end": 8895,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 8851,
                      "end": 8863,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 8851,
                      "end": 8895,
                      "name": "SUB"
                    },
                    {
                      "begin": 8809,
                      "end": 8895,
                      "name": "SWAP7"
                    },
                    {
                      "begin": 8809,
                      "end": 8895,
                      "name": "POP"
                    },
                    {
                      "begin": 9085,
                      "end": 9109,
                      "name": "PUSH",
                      "value": "8"
                    },
                    {
                      "begin": 9085,
                      "end": 9109,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9066,
                      "end": 9109,
                      "name": "SWAP6"
                    },
                    {
                      "begin": 9066,
                      "end": 9109,
                      "name": "POP"
                    },
                    {
                      "begin": 9176,
                      "end": 9178,
                      "name": "PUSH",
                      "value": "3C"
                    },
                    {
                      "begin": 9162,
                      "end": 9173,
                      "name": "DUP7"
                    },
                    {
                      "begin": 9162,
                      "end": 9178,
                      "name": "MUL"
                    },
                    {
                      "begin": 9126,
                      "end": 9178,
                      "name": "SWAP5"
                    },
                    {
                      "begin": 9126,
                      "end": 9178,
                      "name": "POP"
                    },
                    {
                      "begin": 9341,
                      "end": 9369,
                      "name": "DUP5"
                    },
                    {
                      "begin": 9304,
                      "end": 9338,
                      "name": "DUP8"
                    },
                    {
                      "begin": 9304,
                      "end": 9369,
                      "name": "LT"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "PUSH [tag]",
                      "value": "246"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "PUSH [tag]",
                      "value": "247"
                    },
                    {
                      "begin": 9461,
                      "end": 9495,
                      "name": "DUP8"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "PUSH [tag]",
                      "value": "248"
                    },
                    {
                      "begin": 9450,
                      "end": 9453,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 9417,
                      "end": 9445,
                      "name": "DUP9"
                    },
                    {
                      "begin": 9417,
                      "end": 9449,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 9417,
                      "end": 9449,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "AND"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "tag",
                      "value": "248"
                    },
                    {
                      "begin": 9417,
                      "end": 9454,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9416,
                      "end": 9459,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 9416,
                      "end": 9459,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "AND"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "tag",
                      "value": "247"
                    },
                    {
                      "begin": 9416,
                      "end": 9497,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9392,
                      "end": 9497,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 9392,
                      "end": 9497,
                      "name": "POP"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "PUSH [tag]",
                      "value": "250"
                    },
                    {
                      "begin": 9580,
                      "end": 9584,
                      "name": "PUSH",
                      "value": "3E8"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "PUSH [tag]",
                      "value": "251"
                    },
                    {
                      "begin": 9561,
                      "end": 9564,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 9540,
                      "end": 9556,
                      "name": "DUP8"
                    },
                    {
                      "begin": 9540,
                      "end": 9560,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 9540,
                      "end": 9560,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "AND"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "tag",
                      "value": "251"
                    },
                    {
                      "begin": 9540,
                      "end": 9565,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9540,
                      "end": 9579,
                      "name": "PUSH [tag]",
                      "value": "252"
                    },
                    {
                      "begin": 9540,
                      "end": 9579,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "AND"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "tag",
                      "value": "250"
                    },
                    {
                      "begin": 9540,
                      "end": 9585,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9510,
                      "end": 9585,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 9510,
                      "end": 9585,
                      "name": "POP"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "PUSH [tag]",
                      "value": "253"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "PUSH [tag]",
                      "value": "254"
                    },
                    {
                      "begin": 9832,
                      "end": 9854,
                      "name": "DUP5"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "PUSH [tag]",
                      "value": "255"
                    },
                    {
                      "begin": 9822,
                      "end": 9826,
                      "name": "PUSH",
                      "value": "7D0"
                    },
                    {
                      "begin": 9805,
                      "end": 9817,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 9805,
                      "end": 9817,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9805,
                      "end": 9821,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 9805,
                      "end": 9821,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "AND"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "tag",
                      "value": "255"
                    },
                    {
                      "begin": 9805,
                      "end": 9827,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9805,
                      "end": 9831,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 9805,
                      "end": 9831,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "AND"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "tag",
                      "value": "254"
                    },
                    {
                      "begin": 9805,
                      "end": 9855,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9788,
                      "end": 9800,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 9788,
                      "end": 9800,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 9788,
                      "end": 9804,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 9788,
                      "end": 9804,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "AND"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "tag",
                      "value": "253"
                    },
                    {
                      "begin": 9788,
                      "end": 9856,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9773,
                      "end": 9785,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 9773,
                      "end": 9856,
                      "name": "DUP2"
                    },
                    {
                      "begin": 9773,
                      "end": 9856,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9773,
                      "end": 9856,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 9773,
                      "end": 9856,
                      "name": "POP"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "PUSH [tag]",
                      "value": "256"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMP"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "tag",
                      "value": "246"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "PUSH [tag]",
                      "value": "257"
                    },
                    {
                      "begin": 9978,
                      "end": 10006,
                      "name": "DUP6"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "PUSH [tag]",
                      "value": "258"
                    },
                    {
                      "begin": 9967,
                      "end": 9970,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 9928,
                      "end": 9962,
                      "name": "DUP11"
                    },
                    {
                      "begin": 9928,
                      "end": 9966,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 9928,
                      "end": 9966,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "AND"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "tag",
                      "value": "258"
                    },
                    {
                      "begin": 9928,
                      "end": 9971,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9927,
                      "end": 9976,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 9927,
                      "end": 9976,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "AND"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "tag",
                      "value": "257"
                    },
                    {
                      "begin": 9927,
                      "end": 10008,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 9901,
                      "end": 10008,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 9901,
                      "end": 10008,
                      "name": "POP"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "PUSH [tag]",
                      "value": "259"
                    },
                    {
                      "begin": 10095,
                      "end": 10099,
                      "name": "PUSH",
                      "value": "3E8"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "PUSH [tag]",
                      "value": "260"
                    },
                    {
                      "begin": 10076,
                      "end": 10079,
                      "name": "PUSH",
                      "value": "64"
                    },
                    {
                      "begin": 10053,
                      "end": 10071,
                      "name": "DUP6"
                    },
                    {
                      "begin": 10053,
                      "end": 10075,
                      "name": "PUSH [tag]",
                      "value": "185"
                    },
                    {
                      "begin": 10053,
                      "end": 10075,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "AND"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "tag",
                      "value": "260"
                    },
                    {
                      "begin": 10053,
                      "end": 10080,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10053,
                      "end": 10094,
                      "name": "PUSH [tag]",
                      "value": "252"
                    },
                    {
                      "begin": 10053,
                      "end": 10094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "AND"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "tag",
                      "value": "259"
                    },
                    {
                      "begin": 10053,
                      "end": 10100,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10021,
                      "end": 10100,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10021,
                      "end": 10100,
                      "name": "POP"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "PUSH [tag]",
                      "value": "261"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "PUSH [tag]",
                      "value": "262"
                    },
                    {
                      "begin": 10227,
                      "end": 10251,
                      "name": "DUP3"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "PUSH [tag]",
                      "value": "263"
                    },
                    {
                      "begin": 10217,
                      "end": 10221,
                      "name": "PUSH",
                      "value": "7D0"
                    },
                    {
                      "begin": 10200,
                      "end": 10212,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10200,
                      "end": 10212,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10200,
                      "end": 10216,
                      "name": "PUSH [tag]",
                      "value": "170"
                    },
                    {
                      "begin": 10200,
                      "end": 10216,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "AND"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "tag",
                      "value": "263"
                    },
                    {
                      "begin": 10200,
                      "end": 10222,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10200,
                      "end": 10226,
                      "name": "PUSH [tag]",
                      "value": "249"
                    },
                    {
                      "begin": 10200,
                      "end": 10226,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "AND"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "tag",
                      "value": "262"
                    },
                    {
                      "begin": 10200,
                      "end": 10252,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10183,
                      "end": 10195,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10183,
                      "end": 10195,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10183,
                      "end": 10199,
                      "name": "PUSH [tag]",
                      "value": "177"
                    },
                    {
                      "begin": 10183,
                      "end": 10199,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "AND"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "tag",
                      "value": "261"
                    },
                    {
                      "begin": 10183,
                      "end": 10253,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10168,
                      "end": 10180,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10168,
                      "end": 10253,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10168,
                      "end": 10253,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10168,
                      "end": 10253,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10168,
                      "end": 10253,
                      "name": "POP"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "tag",
                      "value": "256"
                    },
                    {
                      "begin": 9300,
                      "end": 10282,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10326,
                      "end": 10338,
                      "name": "NUMBER"
                    },
                    {
                      "begin": 10294,
                      "end": 10323,
                      "name": "PUSH",
                      "value": "6"
                    },
                    {
                      "begin": 10294,
                      "end": 10338,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10294,
                      "end": 10338,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10294,
                      "end": 10338,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10294,
                      "end": 10338,
                      "name": "POP"
                    },
                    {
                      "begin": 10367,
                      "end": 10382,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 10367,
                      "end": 10382,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10352,
                      "end": 10364,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10352,
                      "end": 10364,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10352,
                      "end": 10382,
                      "name": "LT"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "PUSH [tag]",
                      "value": "264"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10436,
                      "end": 10451,
                      "name": "PUSH",
                      "value": "9"
                    },
                    {
                      "begin": 10436,
                      "end": 10451,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10421,
                      "end": 10433,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10421,
                      "end": 10451,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10421,
                      "end": 10451,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10421,
                      "end": 10451,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10421,
                      "end": 10451,
                      "name": "POP"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "tag",
                      "value": "264"
                    },
                    {
                      "begin": 10349,
                      "end": 10462,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 10490,
                      "end": 10505,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10490,
                      "end": 10505,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10475,
                      "end": 10487,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10475,
                      "end": 10487,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10475,
                      "end": 10505,
                      "name": "GT"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "PUSH [tag]",
                      "value": "265"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 10554,
                      "end": 10569,
                      "name": "PUSH",
                      "value": "A"
                    },
                    {
                      "begin": 10554,
                      "end": 10569,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 10539,
                      "end": 10551,
                      "name": "PUSH",
                      "value": "B"
                    },
                    {
                      "begin": 10539,
                      "end": 10569,
                      "name": "DUP2"
                    },
                    {
                      "begin": 10539,
                      "end": 10569,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 10539,
                      "end": 10569,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 10539,
                      "end": 10569,
                      "name": "POP"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "tag",
                      "value": "265"
                    },
                    {
                      "begin": 10472,
                      "end": 10580,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "POP"
                    },
                    {
                      "begin": 8757,
                      "end": 10586,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "tag",
                      "value": "249"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 946,
                      "end": 952,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 973,
                      "end": 974,
                      "name": "DUP2"
                    },
                    {
                      "begin": 969,
                      "end": 970,
                      "name": "DUP4"
                    },
                    {
                      "begin": 969,
                      "end": 974,
                      "name": "MUL"
                    },
                    {
                      "begin": 965,
                      "end": 974,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 965,
                      "end": 974,
                      "name": "POP"
                    },
                    {
                      "begin": 998,
                      "end": 999,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 993,
                      "end": 994,
                      "name": "DUP4"
                    },
                    {
                      "begin": 993,
                      "end": 999,
                      "name": "EQ"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "DUP1"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "PUSH [tag]",
                      "value": "267"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "POP"
                    },
                    {
                      "begin": 1012,
                      "end": 1013,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1007,
                      "end": 1008,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1003,
                      "end": 1004,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "PUSH [tag]",
                      "value": "268"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "INVALID"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "tag",
                      "value": "268"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1003,
                      "end": 1008,
                      "name": "DIV"
                    },
                    {
                      "begin": 1003,
                      "end": 1013,
                      "name": "EQ"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "tag",
                      "value": "267"
                    },
                    {
                      "begin": 993,
                      "end": 1013,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "PUSH [tag]",
                      "value": "269"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "DUP1"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "REVERT"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "tag",
                      "value": "269"
                    },
                    {
                      "begin": 985,
                      "end": 1014,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "POP"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "POP"
                    },
                    {
                      "begin": 894,
                      "end": 1022,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "tag",
                      "value": "252"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1291,
                      "end": 1297,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1317,
                      "end": 1318,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1313,
                      "end": 1314,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1313,
                      "end": 1318,
                      "name": "GT"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "PUSH [tag]",
                      "value": "271"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1327,
                      "end": 1328,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1320,
                      "end": 1328,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1320,
                      "end": 1328,
                      "name": "POP"
                    },
                    {
                      "begin": 1320,
                      "end": 1328,
                      "name": "PUSH [tag]",
                      "value": "270"
                    },
                    {
                      "begin": 1320,
                      "end": 1328,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "tag",
                      "value": "271"
                    },
                    {
                      "begin": 1310,
                      "end": 1328,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1346,
                      "end": 1347,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1339,
                      "end": 1347,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1339,
                      "end": 1347,
                      "name": "POP"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "tag",
                      "value": "270"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "POP"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "POP"
                    },
                    {
                      "begin": 1229,
                      "end": 1355,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "_BLOCKS_PER_READJUSTMENT()": "b5ade81b",
              "_MAXIMUM_TARGET()": "87a2a9d6",
              "_MINIMUM_TARGET()": "dc6e9cf9",
              "_totalSupply()": "3eaaf86b",
              "acceptOwnership()": "79ba5097",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "challengeNumber()": "8ae0368b",
              "checkMintSolution(uint256,bytes32,bytes32,uint256)": "81269a56",
              "decimals()": "313ce567",
              "epochCount()": "829965cc",
              "getChallengeNumber()": "4ef37628",
              "getMiningDifficulty()": "17da485f",
              "getMiningReward()": "490203a7",
              "getMiningTarget()": "32e99708",
              "getMintDigest(uint256,bytes32,bytes32)": "97566aa0",
              "lastRewardAmount()": "bafedcaa",
              "lastRewardEthBlockNumber()": "163aa00d",
              "lastRewardTo()": "6fd396d6",
              "latestDifficultyPeriodStarted()": "cb9ae707",
              "maxSupplyForEra()": "4fa972e1",
              "miningTarget()": "8a769d35",
              "mint(uint256,bytes32)": "1801fbe5",
              "mintWithoutPoW()": "5515a1ea",
              "name()": "06fdde03",
              "newOwner()": "d4ee1d90",
              "owner()": "8da5cb5b",
              "rewardEra()": "2d38bf7a",
              "setTokensMinted(uint256)": "5ce7e030",
              "symbol()": "95d89b41",
              "tokensMinted()": "6de9f32b",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAnyERC20Token(address,uint256)": "dc39d06d",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardEthBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMiningDifficulty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"challenge_digest\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardEra\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMiningTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMiningReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getChallengeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupplyForEra\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintWithoutPoW\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"setTokensMinted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardTo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"challenge_digest\",\"type\":\"bytes32\"},{\"name\":\"challenge_number\",\"type\":\"bytes32\"},{\"name\":\"testTarget\",\"type\":\"uint256\"}],\"name\":\"checkMintSolution\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epochCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_MAXIMUM_TARGET\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"miningTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"challengeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"challenge_digest\",\"type\":\"bytes32\"},{\"name\":\"challenge_number\",\"type\":\"bytes32\"}],\"name\":\"getMintDigest\",\"outputs\":[{\"name\":\"digesttest\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_BLOCKS_PER_READJUSTMENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRewardAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestDifficultyPeriodStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_MINIMUM_TARGET\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"epochCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newChallengeNumber\",\"type\":\"bytes32\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/0xBitcoinExtended.sol\":\"_0xBitcoinToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/0xBitcoinExtended.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2018-02-06\\n*/\\n\\npragma solidity ^0.4.18;\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// '0xBitcoin Token' contract\\n\\n// Mineable ERC20 Token using Proof Of Work\\n\\n//\\n\\n// Symbol      : 0xBTC\\n\\n// Name        : 0xBitcoin Token\\n\\n// Total supply: 21,000,000.00\\n\\n// Decimals    : 8\\n\\n//\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Safe maths\\n\\n// ----------------------------------------------------------------------------\\n\\nlibrary SafeMath {\\n\\n    function add(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a + b;\\n\\n        require(c >= a);\\n\\n    }\\n\\n    function sub(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b <= a);\\n\\n        c = a - b;\\n\\n    }\\n\\n    function mul(uint a, uint b) internal pure returns (uint c) {\\n\\n        c = a * b;\\n\\n        require(a == 0 || c / a == b);\\n\\n    }\\n\\n    function div(uint a, uint b) internal pure returns (uint c) {\\n\\n        require(b > 0);\\n\\n        c = a / b;\\n\\n    }\\n\\n}\\n\\n\\n\\nlibrary ExtendedMath {\\n\\n\\n    //return the smaller of the two inputs (a or b)\\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\\n\\n        if(a > b) return b;\\n\\n        return a;\\n\\n    }\\n}\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC Token Standard #20 Interface\\n\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ERC20Interface {\\n\\n    function totalSupply() public constant returns (uint);\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\\n\\n    function transfer(address to, uint tokens) public returns (bool success);\\n\\n    function approve(address spender, uint tokens) public returns (bool success);\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\\n\\n\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Contract function to receive approval and execute function in one call\\n\\n//\\n\\n// Borrowed from MiniMeToken\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract ApproveAndCallFallBack {\\n\\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// Owned contract\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract Owned {\\n\\n    address public owner;\\n\\n    address public newOwner;\\n\\n\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\n\\n\\n    function Owned() public {\\n\\n        owner = msg.sender;\\n\\n    }\\n\\n\\n    modifier onlyOwner {\\n\\n        require(msg.sender == owner);\\n\\n        _;\\n\\n    }\\n\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n\\n        newOwner = _newOwner;\\n\\n    }\\n\\n    function acceptOwnership() public {\\n\\n        require(msg.sender == newOwner);\\n\\n        OwnershipTransferred(owner, newOwner);\\n\\n        owner = newOwner;\\n\\n        newOwner = address(0);\\n\\n    }\\n\\n}\\n\\n\\n\\n// ----------------------------------------------------------------------------\\n\\n// ERC20 Token, with the addition of symbol, name and decimals and an\\n\\n// initial fixed supply\\n\\n// ----------------------------------------------------------------------------\\n\\ncontract _0xBitcoinToken is ERC20Interface, Owned {\\n\\n    using SafeMath for uint;\\n    using ExtendedMath for uint;\\n\\n\\n    string public symbol;\\n\\n    string public  name;\\n\\n    uint8 public decimals;\\n\\n    uint public _totalSupply;\\n\\n\\n\\n     uint public latestDifficultyPeriodStarted;\\n\\n\\n\\n    uint public epochCount;//number of 'blocks' mined\\n\\n\\n    uint public _BLOCKS_PER_READJUSTMENT = 1024;\\n\\n\\n    //a little number\\n    uint public  _MINIMUM_TARGET = 2**16;\\n\\n\\n      //a big number is easier ; just find a solution that is smaller\\n    //uint public  _MAXIMUM_TARGET = 2**224;  bitcoin uses 224\\n    uint public  _MAXIMUM_TARGET = 2**234;\\n\\n\\n    uint public miningTarget;\\n\\n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\\n\\n\\n\\n    uint public rewardEra;\\n    uint public maxSupplyForEra;\\n\\n\\n    address public lastRewardTo;\\n    uint public lastRewardAmount;\\n    uint public lastRewardEthBlockNumber;\\n\\n    bool locked = false;\\n\\n    mapping(bytes32 => bytes32) solutionForChallenge;\\n\\n    uint public tokensMinted;\\n\\n    mapping(address => uint) balances;\\n\\n\\n    mapping(address => mapping(address => uint)) allowed;\\n\\n\\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Constructor\\n\\n    // ------------------------------------------------------------------------\\n\\n    function _0xBitcoinToken() public onlyOwner{\\n\\n\\n\\n        symbol = \\\"0xBTC\\\";\\n\\n        name = \\\"0xBitcoin Token\\\";\\n\\n        decimals = 8;\\n\\n        _totalSupply = 21000000 * 10**uint(decimals);\\n\\n        if(locked) revert();\\n        locked = true;\\n\\n        tokensMinted = 0;\\n\\n        rewardEra = 0;\\n        maxSupplyForEra = _totalSupply.div(2);\\n\\n        miningTarget = _MAXIMUM_TARGET;\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        _startNewMiningEpoch();\\n\\n\\n        //The owner gets nothing! You must mine this ERC20 token\\n        //balances[owner] = _totalSupply;\\n        //Transfer(address(0), owner, _totalSupply);\\n\\n    }\\n\\n\\n\\n\\n        function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\\n\\n\\n            //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n            //the challenge digest must match the expected\\n            if (digest != challenge_digest) revert();\\n\\n            //the digest must be smaller than the target\\n            if(uint256(digest) > miningTarget) revert();\\n\\n\\n            //only allow one reward for each challenge\\n             bytes32 solution = solutionForChallenge[challengeNumber];\\n             solutionForChallenge[challengeNumber] = digest;\\n             if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n            uint reward_amount = getMiningReward();\\n\\n            balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n            tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n            //Cannot mint more tokens than there are\\n            assert(tokensMinted <= maxSupplyForEra);\\n\\n            //set readonly diagnostics data\\n            lastRewardTo = msg.sender;\\n            lastRewardAmount = reward_amount;\\n            lastRewardEthBlockNumber = block.number;\\n\\n\\n             _startNewMiningEpoch();\\n\\n              Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n           return true;\\n\\n        }\\n\\n\\n    //a new 'block' to be mined\\n    function _startNewMiningEpoch() internal {\\n\\n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\\n\\n      //40 is the final reward era, almost all tokens minted\\n      //once the final era is reached, more tokens will not be given out because the assert function\\n      if( tokensMinted.add(getMiningReward()) > maxSupplyForEra && rewardEra < 39)\\n      {\\n        rewardEra = rewardEra + 1;\\n      }\\n\\n      //set the next minted supply at which the era will change\\n      // total supply is 2100000000000000  because of 8 decimal places\\n      maxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\\n\\n      epochCount = epochCount.add(1);\\n\\n      //every so often, readjust difficulty. Dont readjust when deploying\\n      if(epochCount % _BLOCKS_PER_READJUSTMENT == 0)\\n      {\\n        _reAdjustDifficulty();\\n      }\\n\\n\\n      //make the latest ethereum block hash a part of the next challenge for PoW to prevent pre-mining future blocks\\n      //do this last since this is a protection mechanism in the mint() function\\n      challengeNumber = block.blockhash(block.number - 1);\\n\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\\n\\n    //readjust the target by 5 percent\\n    function _reAdjustDifficulty() internal {\\n\\n\\n        uint ethBlocksSinceLastDifficultyPeriod = block.number - latestDifficultyPeriodStarted;\\n        //assume 360 ethereum blocks per hour\\n\\n        //we want miners to spend 10 minutes to mine each 'block', about 60 ethereum blocks = one 0xbitcoin epoch\\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\\n\\n        uint targetEthBlocksPerDiffPeriod = epochsMined * 60; //should be 60 times slower than ethereum\\n\\n        //if there were less eth blocks passed in time than expected\\n        if( ethBlocksSinceLastDifficultyPeriod < targetEthBlocksPerDiffPeriod )\\n        {\\n          uint excess_block_pct = (targetEthBlocksPerDiffPeriod.mul(100)).div( ethBlocksSinceLastDifficultyPeriod );\\n\\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\\n\\n          //make it harder\\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mul(excess_block_pct_extra));   //by up to 50 %\\n        }else{\\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod.mul(100)).div( targetEthBlocksPerDiffPeriod );\\n\\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\\n\\n          //make it easier\\n          miningTarget = miningTarget.add(miningTarget.div(2000).mul(shortage_block_pct_extra));   //by up to 50 %\\n        }\\n\\n\\n\\n        latestDifficultyPeriodStarted = block.number;\\n\\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\\n        {\\n          miningTarget = _MINIMUM_TARGET;\\n        }\\n\\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\\n        {\\n          miningTarget = _MAXIMUM_TARGET;\\n        }\\n    }\\n\\n\\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\\n    function getChallengeNumber() public constant returns (bytes32) {\\n        return challengeNumber;\\n    }\\n\\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\\n     function getMiningDifficulty() public constant returns (uint) {\\n        return _MAXIMUM_TARGET.div(miningTarget);\\n    }\\n\\n    function getMiningTarget() public constant returns (uint) {\\n       return miningTarget;\\n   }\\n\\n\\n\\n    //21m coins total\\n    //reward begins at 50 and is cut in half every reward era (as tokens are mined)\\n    function getMiningReward() public constant returns (uint) {\\n        //once we get half way thru the coins, only get 25 per block\\n\\n         //every reward era, the reward amount halves.\\n\\n         return (50 * 10**uint(decimals) ).div( 2**rewardEra ) ;\\n\\n    }\\n\\n    //help debug mining software\\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\\n\\n        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n        return digest;\\n\\n      }\\n\\n        //help debug mining software\\n      function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\\n\\n          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);\\n\\n          if(uint256(digest) > testTarget) revert();\\n\\n          return (digest == challenge_digest);\\n\\n        }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Total supply\\n\\n    // ------------------------------------------------------------------------\\n\\n    function totalSupply() public constant returns (uint) {\\n\\n        return _totalSupply  - balances[address(0)];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Get the token balance for account `tokenOwner`\\n\\n    // ------------------------------------------------------------------------\\n\\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\\n\\n        return balances[tokenOwner];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer the balance from token owner's account to `to` account\\n\\n    // - Owner's account must have sufficient balance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transfer(address to, uint tokens) public returns (bool success) {\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(msg.sender, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account\\n\\n    //\\n\\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n\\n    // recommends that there are no checks for the approval double-spend attack\\n\\n    // as this should be implemented in user interfaces\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approve(address spender, uint tokens) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Transfer `tokens` from the `from` account to the `to` account\\n\\n    //\\n\\n    // The calling account must already have sufficient tokens approve(...)-d\\n\\n    // for spending from the `from` account and\\n\\n    // - From account must have sufficient balance to transfer\\n\\n    // - Spender must have sufficient allowance to transfer\\n\\n    // - 0 value transfers are allowed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\\n\\n        balances[from] = balances[from].sub(tokens);\\n\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\n\\n        balances[to] = balances[to].add(tokens);\\n\\n        Transfer(from, to, tokens);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Returns the amount of tokens approved by the owner that can be\\n\\n    // transferred to the spender's account\\n\\n    // ------------------------------------------------------------------------\\n\\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\\n\\n        return allowed[tokenOwner][spender];\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\\n\\n    // from the token owner's account. The `spender` contract function\\n\\n    // `receiveApproval(...)` is then executed\\n\\n    // ------------------------------------------------------------------------\\n\\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\\n\\n        allowed[msg.sender][spender] = tokens;\\n\\n        Approval(msg.sender, spender, tokens);\\n\\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\\n\\n        return true;\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Don't accept ETH\\n\\n    // ------------------------------------------------------------------------\\n\\n    function () public payable {\\n\\n        revert();\\n\\n    }\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Owner can transfer out any accidentally sent ERC20 tokens\\n\\n    // ------------------------------------------------------------------------\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\\n\\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\\n\\n    }\\n\\n\\n\\n\\n\\n    // ------------------------------------------------------------------------\\n\\n    // Extension methods just for testing purposes\\n\\n   \\n    // ------------------------------------------------------------------------\\n\\n    function setTokensMinted(uint amt) public   {\\n        tokensMinted = amt;\\n    }\\n\\n\\n    function mintWithoutPoW( ) public returns (bool success) {\\n\\n\\n        //the PoW must contain work that includes a recent ethereum block hash (challenge number) and the msg.sender's address to prevent MITM attacks\\n        //bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );\\n\\n        //the challenge digest must match the expected\\n        //if (digest != challenge_digest) revert();\\n\\n        //the digest must be smaller than the target\\n        //if(uint256(digest) > miningTarget) revert();\\n\\n\\n        //only allow one reward for each challenge\\n            //bytes32 solution = solutionForChallenge[challengeNumber];\\n            //solutionForChallenge[challengeNumber] = digest;\\n            //if(solution != 0x0) revert();  //prevent the same answer from awarding twice\\n\\n\\n        uint reward_amount = getMiningReward();\\n\\n        balances[msg.sender] = balances[msg.sender].add(reward_amount);\\n\\n        tokensMinted = tokensMinted.add(reward_amount);\\n\\n\\n        //Cannot mint more tokens than there are\\n        assert(tokensMinted <= maxSupplyForEra);\\n\\n        //set readonly diagnostics data\\n        lastRewardTo = msg.sender;\\n        lastRewardAmount = reward_amount;\\n        lastRewardEthBlockNumber = block.number;\\n\\n\\n            _startNewMiningEpoch();\\n\\n            // Mint(msg.sender, reward_amount, epochCount, challengeNumber );\\n\\n        return true;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xf282ab22911ffa464bf8fab63800b062d205da8d760320eb174665d390342753\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        }
      },
      "contracts/WETH.sol": {
        "WETH9": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "guy",
                  "type": "address"
                },
                {
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "src",
                  "type": "address"
                },
                {
                  "name": "dst",
                  "type": "address"
                },
                {
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "name": "",
                  "type": "uint8"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "dst",
                  "type": "address"
                },
                {
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "payable": true,
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "payable": true,
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "src",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "guy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "src",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "dst",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "dst",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "src",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "wad",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"contracts/WETH.sol\":779:2557  contract WETH9 {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/WETH.sol\":800:840  string public name     = \"Wrapped Ether\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xd\n  dup2\n  mstore\n  0x20\n  add\n  0x5772617070656420457468657200000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x0\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_1:\n  pop\n    /* \"contracts/WETH.sol\":846:877  string public symbol   = \"WETH\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x4\n  dup2\n  mstore\n  0x20\n  add\n  0x5745544800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x1\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_3:\n  pop\n    /* \"contracts/WETH.sol\":908:910  18 */\n  0x12\n    /* \"contracts/WETH.sol\":883:910  uint8  public decimals = 18 */\n  0x2\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WETH.sol\":779:2557  contract WETH9 {... */\n  jumpi(tag_4, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_4:\n  jump(tag_5)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_7\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_6)\ntag_7:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_6\n  jumpi\n  swap2\n  dup3\n  add\ntag_8:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_8)\ntag_9:\ntag_6:\n  pop\n  swap1\n  pop\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WETH.sol\":779:2557  contract WETH9 {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n    tag_1:\n        /* \"contracts/WETH.sol\":1348:1357  deposit() */\n      tag_15\n        /* \"contracts/WETH.sol\":1348:1355  deposit */\n      tag_16\n        /* \"contracts/WETH.sol\":1348:1357  deposit() */\n      jump\t// in\n    tag_15:\n        /* \"contracts/WETH.sol\":779:2557  contract WETH9 {... */\n      stop\n        /* \"contracts/WETH.sol\":800:840  string public name     = \"Wrapped Ether\" */\n    tag_2:\n      jumpi(tag_17, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_17:\n      tag_18\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_21:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1795:1967  function approve(address guy, uint wad) public returns (bool) {... */\n    tag_3:\n      jumpi(tag_24, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_24:\n      tag_25\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1703:1789  function totalSupply() public view returns (uint) {... */\n    tag_4:\n      jumpi(tag_27, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_27:\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":2100:2555  function transferFrom(address src, address dst, uint wad)... */\n    tag_5:\n      jumpi(tag_30, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_30:\n      tag_31\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1499:1697  function withdraw(uint wad) public {... */\n    tag_6:\n      jumpi(tag_33, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_33:\n      tag_34\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      stop\n        /* \"contracts/WETH.sol\":883:910  uint8  public decimals = 18 */\n    tag_7:\n      jumpi(tag_36, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_36:\n      tag_37\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1169:1234  mapping (address => uint)                       public  balanceOf */\n    tag_8:\n      jumpi(tag_39, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_39:\n      tag_40\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":846:877  string public symbol   = \"WETH\" */\n    tag_9:\n      jumpi(tag_42, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_42:\n      tag_43\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_45:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_45)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1973:2094  function transfer(address dst, uint wad) public returns (bool) {... */\n    tag_10:\n      jumpi(tag_49, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_49:\n      tag_50\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1369:1494  function deposit() public payable {... */\n    tag_11:\n      tag_52\n      jump(tag_16)\n    tag_52:\n      stop\n        /* \"contracts/WETH.sol\":1240:1305  mapping (address => mapping (address => uint))  public  allowance */\n    tag_12:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WETH.sol\":1369:1494  function deposit() public payable {... */\n    tag_16:\n        /* \"contracts/WETH.sol\":1438:1447  msg.value */\n      callvalue\n        /* \"contracts/WETH.sol\":1413:1422  balanceOf */\n      0x3\n        /* \"contracts/WETH.sol\":1413:1434  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":1423:1433  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1413:1434  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/WETH.sol\":1413:1447  balanceOf[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WETH.sol\":1465:1475  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1457:1487  Deposit(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"contracts/WETH.sol\":1477:1486  msg.value */\n      callvalue\n        /* \"contracts/WETH.sol\":1457:1487  Deposit(msg.sender, msg.value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/WETH.sol\":1369:1494  function deposit() public payable {... */\n      jump\t// out\n        /* \"contracts/WETH.sol\":800:840  string public name     = \"Wrapped Ether\" */\n    tag_19:\n      0x0\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/WETH.sol\":1795:1967  function approve(address guy, uint wad) public returns (bool) {... */\n    tag_26:\n        /* \"contracts/WETH.sol\":1851:1855  bool */\n      0x0\n        /* \"contracts/WETH.sol\":1896:1899  wad */\n      dup2\n        /* \"contracts/WETH.sol\":1867:1876  allowance */\n      0x4\n        /* \"contracts/WETH.sol\":1867:1888  allowance[msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":1877:1887  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1867:1888  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/WETH.sol\":1867:1893  allowance[msg.sender][guy] */\n      0x0\n        /* \"contracts/WETH.sol\":1889:1892  guy */\n      dup6\n        /* \"contracts/WETH.sol\":1867:1893  allowance[msg.sender][guy] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/WETH.sol\":1867:1899  allowance[msg.sender][guy] = wad */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WETH.sol\":1930:1933  guy */\n      dup3\n        /* \"contracts/WETH.sol\":1909:1939  Approval(msg.sender, guy, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WETH.sol\":1918:1928  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1909:1939  Approval(msg.sender, guy, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/WETH.sol\":1935:1938  wad */\n      dup5\n        /* \"contracts/WETH.sol\":1909:1939  Approval(msg.sender, guy, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WETH.sol\":1956:1960  true */\n      0x1\n        /* \"contracts/WETH.sol\":1949:1960  return true */\n      swap1\n      pop\n        /* \"contracts/WETH.sol\":1795:1967  function approve(address guy, uint wad) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WETH.sol\":1703:1789  function totalSupply() public view returns (uint) {... */\n    tag_29:\n        /* \"contracts/WETH.sol\":1747:1751  uint */\n      0x0\n        /* \"contracts/WETH.sol\":1770:1774  this */\n      address\n        /* \"contracts/WETH.sol\":1770:1782  this.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/WETH.sol\":1763:1782  return this.balance */\n      swap1\n      pop\n        /* \"contracts/WETH.sol\":1703:1789  function totalSupply() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/WETH.sol\":2100:2555  function transferFrom(address src, address dst, uint wad)... */\n    tag_32:\n        /* \"contracts/WETH.sol\":2190:2194  bool */\n      0x0\n        /* \"contracts/WETH.sol\":2236:2239  wad */\n      dup2\n        /* \"contracts/WETH.sol\":2218:2227  balanceOf */\n      0x3\n        /* \"contracts/WETH.sol\":2218:2232  balanceOf[src] */\n      0x0\n        /* \"contracts/WETH.sol\":2228:2231  src */\n      dup7\n        /* \"contracts/WETH.sol\":2218:2232  balanceOf[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/WETH.sol\":2218:2239  balanceOf[src] >= wad */\n      lt\n      iszero\n        /* \"contracts/WETH.sol\":2210:2240  require(balanceOf[src] >= wad) */\n      iszero\n      iszero\n      tag_63\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_63:\n        /* \"contracts/WETH.sol\":2262:2272  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":2255:2272  src != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WETH.sol\":2255:2258  src */\n      dup5\n        /* \"contracts/WETH.sol\":2255:2272  src != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/WETH.sol\":2255:2314  src != msg.sender && allowance[src][msg.sender] != uint(-1) */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/WETH.sol\":2311:2313  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/WETH.sol\":2276:2285  allowance */\n      0x4\n        /* \"contracts/WETH.sol\":2276:2290  allowance[src] */\n      0x0\n        /* \"contracts/WETH.sol\":2286:2289  src */\n      dup7\n        /* \"contracts/WETH.sol\":2276:2290  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/WETH.sol\":2276:2302  allowance[src][msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":2291:2301  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":2276:2302  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/WETH.sol\":2276:2314  allowance[src][msg.sender] != uint(-1) */\n      eq\n      iszero\n        /* \"contracts/WETH.sol\":2255:2314  src != msg.sender && allowance[src][msg.sender] != uint(-1) */\n    tag_64:\n        /* \"contracts/WETH.sol\":2251:2430  if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"contracts/WETH.sol\":2368:2371  wad */\n      dup2\n        /* \"contracts/WETH.sol\":2338:2347  allowance */\n      0x4\n        /* \"contracts/WETH.sol\":2338:2352  allowance[src] */\n      0x0\n        /* \"contracts/WETH.sol\":2348:2351  src */\n      dup7\n        /* \"contracts/WETH.sol\":2338:2352  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/WETH.sol\":2338:2364  allowance[src][msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":2353:2363  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":2338:2364  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/WETH.sol\":2338:2371  allowance[src][msg.sender] >= wad */\n      lt\n      iszero\n        /* \"contracts/WETH.sol\":2330:2372  require(allowance[src][msg.sender] >= wad) */\n      iszero\n      iszero\n      tag_66\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_66:\n        /* \"contracts/WETH.sol\":2416:2419  wad */\n      dup2\n        /* \"contracts/WETH.sol\":2386:2395  allowance */\n      0x4\n        /* \"contracts/WETH.sol\":2386:2400  allowance[src] */\n      0x0\n        /* \"contracts/WETH.sol\":2396:2399  src */\n      dup7\n        /* \"contracts/WETH.sol\":2386:2400  allowance[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/WETH.sol\":2386:2412  allowance[src][msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":2401:2411  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":2386:2412  allowance[src][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/WETH.sol\":2386:2419  allowance[src][msg.sender] -= wad */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WETH.sol\":2251:2430  if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {... */\n    tag_65:\n        /* \"contracts/WETH.sol\":2458:2461  wad */\n      dup2\n        /* \"contracts/WETH.sol\":2440:2449  balanceOf */\n      0x3\n        /* \"contracts/WETH.sol\":2440:2454  balanceOf[src] */\n      0x0\n        /* \"contracts/WETH.sol\":2450:2453  src */\n      dup7\n        /* \"contracts/WETH.sol\":2440:2454  balanceOf[src] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/WETH.sol\":2440:2461  balanceOf[src] -= wad */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WETH.sol\":2489:2492  wad */\n      dup2\n        /* \"contracts/WETH.sol\":2471:2480  balanceOf */\n      0x3\n        /* \"contracts/WETH.sol\":2471:2485  balanceOf[dst] */\n      0x0\n        /* \"contracts/WETH.sol\":2481:2484  dst */\n      dup6\n        /* \"contracts/WETH.sol\":2471:2485  balanceOf[dst] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/WETH.sol\":2471:2492  balanceOf[dst] += wad */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WETH.sol\":2517:2520  dst */\n      dup3\n        /* \"contracts/WETH.sol\":2503:2526  Transfer(src, dst, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WETH.sol\":2512:2515  src */\n      dup5\n        /* \"contracts/WETH.sol\":2503:2526  Transfer(src, dst, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/WETH.sol\":2522:2525  wad */\n      dup5\n        /* \"contracts/WETH.sol\":2503:2526  Transfer(src, dst, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WETH.sol\":2544:2548  true */\n      0x1\n        /* \"contracts/WETH.sol\":2537:2548  return true */\n      swap1\n      pop\n        /* \"contracts/WETH.sol\":2100:2555  function transferFrom(address src, address dst, uint wad)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WETH.sol\":1499:1697  function withdraw(uint wad) public {... */\n    tag_35:\n        /* \"contracts/WETH.sol\":1577:1580  wad */\n      dup1\n        /* \"contracts/WETH.sol\":1552:1561  balanceOf */\n      0x3\n        /* \"contracts/WETH.sol\":1552:1573  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":1562:1572  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1552:1573  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/WETH.sol\":1552:1580  balanceOf[msg.sender] >= wad */\n      lt\n      iszero\n        /* \"contracts/WETH.sol\":1544:1581  require(balanceOf[msg.sender] >= wad) */\n      iszero\n      iszero\n      tag_68\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/WETH.sol\":1616:1619  wad */\n      dup1\n        /* \"contracts/WETH.sol\":1591:1600  balanceOf */\n      0x3\n        /* \"contracts/WETH.sol\":1591:1612  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/WETH.sol\":1601:1611  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1591:1612  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/WETH.sol\":1591:1619  balanceOf[msg.sender] -= wad */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WETH.sol\":1629:1639  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1629:1648  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WETH.sol\":1629:1653  msg.sender.transfer(wad) */\n      0x8fc\n        /* \"contracts/WETH.sol\":1649:1652  wad */\n      dup3\n        /* \"contracts/WETH.sol\":1629:1653  msg.sender.transfer(wad) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_69\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_69:\n        /* \"contracts/WETH.sol\":1674:1684  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":1663:1690  Withdrawal(msg.sender, wad) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"contracts/WETH.sol\":1686:1689  wad */\n      dup3\n        /* \"contracts/WETH.sol\":1663:1690  Withdrawal(msg.sender, wad) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/WETH.sol\":1499:1697  function withdraw(uint wad) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/WETH.sol\":883:910  uint8  public decimals = 18 */\n    tag_38:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/WETH.sol\":1169:1234  mapping (address => uint)                       public  balanceOf */\n    tag_41:\n      mstore(0x20, 0x3)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/WETH.sol\":846:877  string public symbol   = \"WETH\" */\n    tag_44:\n      0x1\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_70\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_71\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_70)\n    tag_71:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_72:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_72\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/WETH.sol\":1973:2094  function transfer(address dst, uint wad) public returns (bool) {... */\n    tag_51:\n        /* \"contracts/WETH.sol\":2030:2034  bool */\n      0x0\n        /* \"contracts/WETH.sol\":2053:2087  transferFrom(msg.sender, dst, wad) */\n      tag_74\n        /* \"contracts/WETH.sol\":2066:2076  msg.sender */\n      caller\n        /* \"contracts/WETH.sol\":2078:2081  dst */\n      dup5\n        /* \"contracts/WETH.sol\":2083:2086  wad */\n      dup5\n        /* \"contracts/WETH.sol\":2053:2065  transferFrom */\n      tag_32\n        /* \"contracts/WETH.sol\":2053:2087  transferFrom(msg.sender, dst, wad) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/WETH.sol\":2046:2087  return transferFrom(msg.sender, dst, wad) */\n      swap1\n      pop\n        /* \"contracts/WETH.sol\":1973:2094  function transfer(address dst, uint wad) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WETH.sol\":1240:1305  mapping (address => mapping (address => uint))  public  allowance */\n    tag_55:\n      mstore(0x20, 0x4)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820f5e7ca45dfc5c4b0b28b0f7324aed2ff33f2ecd6cc9497649c266407373436230029\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "60606040526040805190810160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019061004f9291906100c8565b506040805190810160405280600481526020017f57455448000000000000000000000000000000000000000000000000000000008152506001908051906020019061009b9291906100c8565b506012600260006101000a81548160ff021916908360ff16021790555034156100c357600080fd5b61016d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010957805160ff1916838001178555610137565b82800160010185558215610137579182015b8281111561013657825182559160200191906001019061011b565b5b5090506101449190610148565b5090565b61016a91905b8082111561016657600081600090555060010161014e565b5090565b90565b610c348061017c6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b9578063095ea7b31461014757806318160ddd146101a157806323b872dd146101ca5780632e1a7d4d14610243578063313ce5671461026657806370a082311461029557806395d89b41146102e2578063a9059cbb14610370578063d0e30db0146103ca578063dd62ed3e146103d4575b6100b7610440565b005b34156100c457600080fd5b6100cc6104dd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010c5780820151818401526020810190506100f1565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015257600080fd5b610187600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061057b565b604051808215151515815260200191505060405180910390f35b34156101ac57600080fd5b6101b461066d565b6040518082815260200191505060405180910390f35b34156101d557600080fd5b610229600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061068c565b604051808215151515815260200191505060405180910390f35b341561024e57600080fd5b61026460048080359060200190919050506109d9565b005b341561027157600080fd5b610279610b05565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b6040518082815260200191505060405180910390f35b34156102ed57600080fd5b6102f5610b30565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033557808201518184015260208101905061031a565b50505050905090810190601f1680156103625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037b57600080fd5b6103b0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bce565b604051808215151515815260200191505060405180910390f35b6103d2610440565b005b34156103df57600080fd5b61042a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610be3565b6040518082815260200191505060405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106dc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156107b457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108cf5781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561084457600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a2757600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610ab457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b505050505081565b6000610bdb33848461068c565b905092915050565b60046020528160005260406000206020528060005260406000206000915091505054815600a165627a7a72305820f5e7ca45dfc5c4b0b28b0f7324aed2ff33f2ecd6cc9497649c266407373436230029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5772617070656420457468657200000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4F SWAP3 SWAP2 SWAP1 PUSH2 0xC8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5745544800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9B SWAP3 SWAP2 SWAP1 PUSH2 0xC8 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x109 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x137 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x137 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x136 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x148 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x16A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x14E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC34 DUP1 PUSH2 0x17C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D4 JUMPI JUMPDEST PUSH2 0xB7 PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x139 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B4 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x9D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x362 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D2 PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x573 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x548 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x573 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x556 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x8CF JUMPI DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xBC6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDB CALLER DUP5 DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 0xe7 0xca GASLIMIT 0xdf 0xc5 0xc4 0xb0 0xb2 DUP12 0xf PUSH20 0x24AED2FF33F2ECD6CC9497649C26640737343623 STOP 0x29 ",
              "sourceMap": "779:1778:1:-;;;800:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;846:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;908:2;883:27;;;;;;;;;;;;;;;;;;;;779:1778;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b9578063095ea7b31461014757806318160ddd146101a157806323b872dd146101ca5780632e1a7d4d14610243578063313ce5671461026657806370a082311461029557806395d89b41146102e2578063a9059cbb14610370578063d0e30db0146103ca578063dd62ed3e146103d4575b6100b7610440565b005b34156100c457600080fd5b6100cc6104dd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010c5780820151818401526020810190506100f1565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015257600080fd5b610187600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061057b565b604051808215151515815260200191505060405180910390f35b34156101ac57600080fd5b6101b461066d565b6040518082815260200191505060405180910390f35b34156101d557600080fd5b610229600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061068c565b604051808215151515815260200191505060405180910390f35b341561024e57600080fd5b61026460048080359060200190919050506109d9565b005b341561027157600080fd5b610279610b05565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b6040518082815260200191505060405180910390f35b34156102ed57600080fd5b6102f5610b30565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033557808201518184015260208101905061031a565b50505050905090810190601f1680156103625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037b57600080fd5b6103b0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bce565b604051808215151515815260200191505060405180910390f35b6103d2610440565b005b34156103df57600080fd5b61042a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610be3565b6040518082815260200191505060405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106dc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156107b457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108cf5781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561084457600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a2757600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610ab457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b505050505081565b6000610bdb33848461068c565b905092915050565b60046020528160005260406000206020528060005260406000206000915091505054815600a165627a7a72305820f5e7ca45dfc5c4b0b28b0f7324aed2ff33f2ecd6cc9497649c266407373436230029",
              "opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D4 JUMPI JUMPDEST PUSH2 0xB7 PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x139 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B4 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x9D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x362 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D2 PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x573 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x548 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x573 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x556 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x7B4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x8CF JUMPI DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xBC6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDB CALLER DUP5 DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 0xe7 0xca GASLIMIT 0xdf 0xc5 0xc4 0xb0 0xb2 DUP12 0xf PUSH20 0x24AED2FF33F2ECD6CC9497649C26640737343623 STOP 0x29 ",
              "sourceMap": "779:1778:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:9;:7;:9::i;:::-;779:1778;800:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:172:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2100:455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:198;;;;;;;;;;;;;;;;;;;;;;;;;;883:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:121:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:125;;;;;;1240:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:125;1438:9;1413;:21;1423:10;1413:21;;;;;;;;;;;;;;;;:34;;;;;;;;;;;1465:10;1457:30;;;1477:9;1457:30;;;;;;;;;;;;;;;;;;1369:125::o;800:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1795:172::-;1851:4;1896:3;1867:9;:21;1877:10;1867:21;;;;;;;;;;;;;;;:26;1889:3;1867:26;;;;;;;;;;;;;;;:32;;;;1930:3;1909:30;;1918:10;1909:30;;;1935:3;1909:30;;;;;;;;;;;;;;;;;;1956:4;1949:11;;1795:172;;;;:::o;1703:86::-;1747:4;1770;:12;;;1763:19;;1703:86;:::o;2100:455::-;2190:4;2236:3;2218:9;:14;2228:3;2218:14;;;;;;;;;;;;;;;;:21;;2210:30;;;;;;;;2262:10;2255:17;;:3;:17;;;;:59;;;;;2311:2;2276:9;:14;2286:3;2276:14;;;;;;;;;;;;;;;:26;2291:10;2276:26;;;;;;;;;;;;;;;;:38;;2255:59;2251:179;;;2368:3;2338:9;:14;2348:3;2338:14;;;;;;;;;;;;;;;:26;2353:10;2338:26;;;;;;;;;;;;;;;;:33;;2330:42;;;;;;;;2416:3;2386:9;:14;2396:3;2386:14;;;;;;;;;;;;;;;:26;2401:10;2386:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;2251:179;2458:3;2440:9;:14;2450:3;2440:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;2489:3;2471:9;:14;2481:3;2471:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;2517:3;2503:23;;2512:3;2503:23;;;2522:3;2503:23;;;;;;;;;;;;;;;;;;2544:4;2537:11;;2100:455;;;;;:::o;1499:198::-;1577:3;1552:9;:21;1562:10;1552:21;;;;;;;;;;;;;;;;:28;;1544:37;;;;;;;;1616:3;1591:9;:21;1601:10;1591:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;1629:10;:19;;:24;1649:3;1629:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:10;1663:27;;;1686:3;1663:27;;;;;;;;;;;;;;;;;;1499:198;:::o;883:27::-;;;;;;;;;;;;;:::o;1169:65::-;;;;;;;;;;;;;;;;;:::o;846:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1973:121::-;2030:4;2053:34;2066:10;2078:3;2083;2053:12;:34::i;:::-;2046:41;;1973:121;;;;:::o;1240:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "624800",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "22096",
                "allowance(address,address)": "21831",
                "approve(address,uint256)": "22320",
                "balanceOf(address)": "21831",
                "decimals()": "21831",
                "deposit()": "22074",
                "name()": "infinite",
                "symbol()": "infinite",
                "totalSupply()": "21831",
                "transfer(address,uint256)": "43362",
                "transferFrom(address,address,uint256)": "64448",
                "withdraw(uint256)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "60"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "MSTORE"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "DUP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "MLOAD"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "DUP2"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "ADD"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "MSTORE"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "DUP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "D"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "DUP2"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "MSTORE"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "ADD"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "5772617070656420457468657200000000000000000000000000000000000000"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "DUP2"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "MSTORE"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "POP"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "DUP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "MLOAD"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "ADD"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH [tag]",
                  "value": "1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP3"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP2"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "SWAP1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "PUSH [tag]",
                  "value": "2"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "tag",
                  "value": "1"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 800,
                  "end": 840,
                  "name": "POP"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "DUP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "MLOAD"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "DUP2"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "ADD"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "40"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "MSTORE"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "DUP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "4"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "DUP2"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "MSTORE"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "ADD"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "5745544800000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "DUP2"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "MSTORE"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "POP"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "DUP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "MLOAD"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "ADD"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH [tag]",
                  "value": "3"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP3"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP2"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "SWAP1"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "PUSH [tag]",
                  "value": "2"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "tag",
                  "value": "3"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 846,
                  "end": 877,
                  "name": "POP"
                },
                {
                  "begin": 908,
                  "end": 910,
                  "name": "PUSH",
                  "value": "12"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "EXP"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "DUP2"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "SLOAD"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "DUP2"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "MUL"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "NOT"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "AND"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "SWAP1"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "DUP4"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "AND"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "MUL"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "OR"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "SWAP1"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "SSTORE"
                },
                {
                  "begin": 883,
                  "end": 910,
                  "name": "POP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "CALLVALUE"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ISZERO"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "4"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPI"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "REVERT"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "4"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "5"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SLOAD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "AND"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ISZERO"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "100"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "MUL"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SUB"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "AND"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DIV"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "MSTORE"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "KECCAK256"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DIV"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1F"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "LT"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "7"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPI"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "MLOAD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "FF"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "NOT"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "AND"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP4"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "OR"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP6"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SSTORE"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "6"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "7"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP6"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SSTORE"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ISZERO"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "6"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPI"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "8"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "GT"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ISZERO"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "9"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPI"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "MLOAD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SSTORE"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "20"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "8"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "9"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "6"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "POP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "POP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "10"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "11"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP",
                  "value": "[in]"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "10"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "POP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "11"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "12"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "13"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP3"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "GT"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ISZERO"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "14"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPI"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP2"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SSTORE"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "POP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "ADD"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [tag]",
                  "value": "13"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "14"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "POP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "12"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "SWAP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMP",
                  "value": "[out]"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "tag",
                  "value": "5"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "JUMPDEST"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH #[$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "DUP1"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH [$]",
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "CODECOPY"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "PUSH",
                  "value": "0"
                },
                {
                  "begin": 779,
                  "end": 2557,
                  "name": "RETURN"
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a165627a7a72305820f5e7ca45dfc5c4b0b28b0f7324aed2ff33f2ecd6cc9497649c266407373436230029",
                  ".code": [
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "60"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "CALLDATASIZE"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "LT"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DIV"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "AND"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "6FDDE03"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "2"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "95EA7B3"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "3"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "18160DDD"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "4"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "23B872DD"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "5"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "2E1A7D4D"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "6"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "313CE567"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "7"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "70A08231"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "8"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "95D89B41"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "9"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "10"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "D0E30DB0"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "11"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "DUP1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH",
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "EQ"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "PUSH [tag]",
                      "value": "12"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "tag",
                      "value": "1"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1348,
                      "end": 1357,
                      "name": "PUSH [tag]",
                      "value": "15"
                    },
                    {
                      "begin": 1348,
                      "end": 1355,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 1348,
                      "end": 1357,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 1348,
                      "end": 1357,
                      "name": "tag",
                      "value": "15"
                    },
                    {
                      "begin": 1348,
                      "end": 1357,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 779,
                      "end": 2557,
                      "name": "STOP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "17"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "REVERT"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "17"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "18"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "19"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "18"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SUB"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP4"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "POP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP4"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "20"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "21"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "20"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "21"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "23"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "23"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "tag",
                      "value": "3"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH [tag]",
                      "value": "24"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "tag",
                      "value": "24"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH [tag]",
                      "value": "25"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "AND"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ADD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ADD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH [tag]",
                      "value": "26"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "tag",
                      "value": "25"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "ADD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SUB"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "tag",
                      "value": "4"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH [tag]",
                      "value": "27"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "tag",
                      "value": "27"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH [tag]",
                      "value": "28"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH [tag]",
                      "value": "29"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "tag",
                      "value": "28"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "ADD"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "SUB"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "RETURN"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "tag",
                      "value": "5"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH [tag]",
                      "value": "30"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "tag",
                      "value": "30"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH [tag]",
                      "value": "31"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "AND"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ADD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "AND"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ADD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ADD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH [tag]",
                      "value": "32"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "tag",
                      "value": "31"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "ADD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SUB"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "tag",
                      "value": "6"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "PUSH [tag]",
                      "value": "33"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "tag",
                      "value": "33"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "PUSH [tag]",
                      "value": "34"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "ADD"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "POP"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "POP"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "PUSH [tag]",
                      "value": "35"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "tag",
                      "value": "34"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "STOP"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "tag",
                      "value": "7"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH [tag]",
                      "value": "36"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DUP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "REVERT"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "tag",
                      "value": "36"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH [tag]",
                      "value": "37"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH [tag]",
                      "value": "38"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMP"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "tag",
                      "value": "37"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DUP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DUP3"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "AND"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "AND"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DUP2"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "ADD"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "POP"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "POP"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DUP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SUB"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "tag",
                      "value": "8"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH [tag]",
                      "value": "39"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "tag",
                      "value": "39"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH [tag]",
                      "value": "40"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "AND"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "ADD"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "POP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "POP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH [tag]",
                      "value": "41"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "tag",
                      "value": "40"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "ADD"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "POP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "POP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SUB"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "RETURN"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "9"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "42"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "REVERT"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "42"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "43"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "44"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "43"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SUB"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP4"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "POP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP4"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP4"
                    },
                    {
                      "begin": 23,
                      "end": 24,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "45"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 33,
                      "end": 36,
                      "name": "DUP4"
                    },
                    {
                      "begin": 30,
                      "end": 31,
                      "name": "DUP2"
                    },
                    {
                      "begin": 27,
                      "end": 29,
                      "name": "LT"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "46"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 99,
                      "end": 100,
                      "name": "DUP1"
                    },
                    {
                      "begin": 94,
                      "end": 97,
                      "name": "DUP3"
                    },
                    {
                      "begin": 90,
                      "end": 93,
                      "name": "ADD"
                    },
                    {
                      "begin": 84,
                      "end": 89,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 80,
                      "end": 81,
                      "name": "DUP2"
                    },
                    {
                      "begin": 75,
                      "end": 78,
                      "name": "DUP5"
                    },
                    {
                      "begin": 71,
                      "end": 74,
                      "name": "ADD"
                    },
                    {
                      "begin": 64,
                      "end": 70,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 52,
                      "end": 54,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 49,
                      "end": 50,
                      "name": "DUP2"
                    },
                    {
                      "begin": 45,
                      "end": 48,
                      "name": "ADD"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 40,
                      "end": 55,
                      "name": "POP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "PUSH [tag]",
                      "value": "45"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMP"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "tag",
                      "value": "46"
                    },
                    {
                      "begin": 8,
                      "end": 108,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 12,
                      "end": 26,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH [tag]",
                      "value": "48"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP4"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "EXP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "NOT"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "AND"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "ADD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "tag",
                      "value": "48"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "POP"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "DUP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SUB"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 3,
                      "end": 112,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "tag",
                      "value": "10"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH [tag]",
                      "value": "49"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "tag",
                      "value": "49"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH [tag]",
                      "value": "50"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "AND"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ADD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ADD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH [tag]",
                      "value": "51"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "tag",
                      "value": "50"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "ADD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SUB"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "tag",
                      "value": "11"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "PUSH [tag]",
                      "value": "52"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "PUSH [tag]",
                      "value": "16"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "tag",
                      "value": "52"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "STOP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "tag",
                      "value": "12"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH [tag]",
                      "value": "53"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "tag",
                      "value": "53"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH [tag]",
                      "value": "54"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "AND"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "ADD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "CALLDATALOAD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "AND"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "ADD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH [tag]",
                      "value": "55"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "tag",
                      "value": "54"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "ADD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SUB"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "RETURN"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "tag",
                      "value": "16"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1438,
                      "end": 1447,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1413,
                      "end": 1422,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1423,
                      "end": 1433,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "AND"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "AND"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "ADD"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "ADD"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1413,
                      "end": 1434,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "ADD"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "POP"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "POP"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 1413,
                      "end": 1447,
                      "name": "POP"
                    },
                    {
                      "begin": 1465,
                      "end": 1475,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "AND"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "PUSH",
                      "value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
                    },
                    {
                      "begin": 1477,
                      "end": 1486,
                      "name": "CALLVALUE"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "ADD"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "POP"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "POP"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "SUB"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1457,
                      "end": 1487,
                      "name": "LOG2"
                    },
                    {
                      "begin": 1369,
                      "end": 1494,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "19"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "AND"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MUL"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SUB"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "AND"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DIV"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DIV"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MUL"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "AND"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MUL"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SUB"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "AND"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DIV"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "57"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "LT"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "58"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP4"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DIV"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MUL"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP4"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "57"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "58"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "59"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP4"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "GT"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH [tag]",
                      "value": "59"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SUB"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "AND"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP3"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "ADD"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "tag",
                      "value": "57"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "POP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "POP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "POP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "POP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "POP"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "DUP2"
                    },
                    {
                      "begin": 800,
                      "end": 840,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "tag",
                      "value": "26"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1851,
                      "end": 1855,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1896,
                      "end": 1899,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1867,
                      "end": 1876,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1877,
                      "end": 1887,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "AND"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "AND"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "ADD"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "ADD"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1867,
                      "end": 1888,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1889,
                      "end": 1892,
                      "name": "DUP6"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "AND"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "AND"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "ADD"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "ADD"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1867,
                      "end": 1893,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1867,
                      "end": 1899,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1867,
                      "end": 1899,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1867,
                      "end": 1899,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 1867,
                      "end": 1899,
                      "name": "POP"
                    },
                    {
                      "begin": 1930,
                      "end": 1933,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "AND"
                    },
                    {
                      "begin": 1918,
                      "end": 1928,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "AND"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "PUSH",
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 1935,
                      "end": 1938,
                      "name": "DUP5"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "ADD"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "POP"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "POP"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "SUB"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1909,
                      "end": 1939,
                      "name": "LOG3"
                    },
                    {
                      "begin": 1956,
                      "end": 1960,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 1949,
                      "end": 1960,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1949,
                      "end": 1960,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "POP"
                    },
                    {
                      "begin": 1795,
                      "end": 1967,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "tag",
                      "value": "29"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1747,
                      "end": 1751,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1770,
                      "end": 1774,
                      "name": "ADDRESS"
                    },
                    {
                      "begin": 1770,
                      "end": 1782,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1770,
                      "end": 1782,
                      "name": "AND"
                    },
                    {
                      "begin": 1770,
                      "end": 1782,
                      "name": "BALANCE"
                    },
                    {
                      "begin": 1763,
                      "end": 1782,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1763,
                      "end": 1782,
                      "name": "POP"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1703,
                      "end": 1789,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "tag",
                      "value": "32"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2190,
                      "end": 2194,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2236,
                      "end": 2239,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2218,
                      "end": 2227,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2228,
                      "end": 2231,
                      "name": "DUP7"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "AND"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "AND"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "ADD"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "ADD"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2218,
                      "end": 2232,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2218,
                      "end": 2239,
                      "name": "LT"
                    },
                    {
                      "begin": 2218,
                      "end": 2239,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "PUSH [tag]",
                      "value": "63"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "tag",
                      "value": "63"
                    },
                    {
                      "begin": 2210,
                      "end": 2240,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2262,
                      "end": 2272,
                      "name": "CALLER"
                    },
                    {
                      "begin": 2255,
                      "end": 2272,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2255,
                      "end": 2272,
                      "name": "AND"
                    },
                    {
                      "begin": 2255,
                      "end": 2258,
                      "name": "DUP5"
                    },
                    {
                      "begin": 2255,
                      "end": 2272,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2255,
                      "end": 2272,
                      "name": "AND"
                    },
                    {
                      "begin": 2255,
                      "end": 2272,
                      "name": "EQ"
                    },
                    {
                      "begin": 2255,
                      "end": 2272,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "PUSH [tag]",
                      "value": "64"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "POP"
                    },
                    {
                      "begin": 2311,
                      "end": 2313,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2276,
                      "end": 2285,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2286,
                      "end": 2289,
                      "name": "DUP7"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "AND"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "AND"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "ADD"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "ADD"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2276,
                      "end": 2290,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2291,
                      "end": 2301,
                      "name": "CALLER"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "AND"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "AND"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "ADD"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "ADD"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2276,
                      "end": 2302,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2276,
                      "end": 2314,
                      "name": "EQ"
                    },
                    {
                      "begin": 2276,
                      "end": 2314,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "tag",
                      "value": "64"
                    },
                    {
                      "begin": 2255,
                      "end": 2314,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2251,
                      "end": 2430,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2251,
                      "end": 2430,
                      "name": "PUSH [tag]",
                      "value": "65"
                    },
                    {
                      "begin": 2251,
                      "end": 2430,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2368,
                      "end": 2371,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2338,
                      "end": 2347,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2348,
                      "end": 2351,
                      "name": "DUP7"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "AND"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "AND"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "ADD"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "ADD"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2338,
                      "end": 2352,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2353,
                      "end": 2363,
                      "name": "CALLER"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "AND"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "AND"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "ADD"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "ADD"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2338,
                      "end": 2364,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2338,
                      "end": 2371,
                      "name": "LT"
                    },
                    {
                      "begin": 2338,
                      "end": 2371,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "PUSH [tag]",
                      "value": "66"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "REVERT"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "tag",
                      "value": "66"
                    },
                    {
                      "begin": 2330,
                      "end": 2372,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2416,
                      "end": 2419,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2386,
                      "end": 2395,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2396,
                      "end": 2399,
                      "name": "DUP7"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "AND"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "AND"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "ADD"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "ADD"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2386,
                      "end": 2400,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2401,
                      "end": 2411,
                      "name": "CALLER"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "AND"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "AND"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "ADD"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "ADD"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2386,
                      "end": 2412,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "SUB"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "POP"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "POP"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 2386,
                      "end": 2419,
                      "name": "POP"
                    },
                    {
                      "begin": 2251,
                      "end": 2430,
                      "name": "tag",
                      "value": "65"
                    },
                    {
                      "begin": 2251,
                      "end": 2430,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2458,
                      "end": 2461,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2440,
                      "end": 2449,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2450,
                      "end": 2453,
                      "name": "DUP7"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "AND"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "AND"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "ADD"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "ADD"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2440,
                      "end": 2454,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "SUB"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "POP"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "POP"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 2440,
                      "end": 2461,
                      "name": "POP"
                    },
                    {
                      "begin": 2489,
                      "end": 2492,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2471,
                      "end": 2480,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2481,
                      "end": 2484,
                      "name": "DUP6"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "AND"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "AND"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "ADD"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "ADD"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 2471,
                      "end": 2485,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "ADD"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "POP"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "POP"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 2471,
                      "end": 2492,
                      "name": "POP"
                    },
                    {
                      "begin": 2517,
                      "end": 2520,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "AND"
                    },
                    {
                      "begin": 2512,
                      "end": 2515,
                      "name": "DUP5"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "AND"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "PUSH",
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 2522,
                      "end": 2525,
                      "name": "DUP5"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "DUP3"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "DUP2"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "ADD"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "POP"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "POP"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "DUP1"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "SUB"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2503,
                      "end": 2526,
                      "name": "LOG3"
                    },
                    {
                      "begin": 2544,
                      "end": 2548,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 2537,
                      "end": 2548,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2537,
                      "end": 2548,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "POP"
                    },
                    {
                      "begin": 2100,
                      "end": 2555,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "tag",
                      "value": "35"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1577,
                      "end": 1580,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1552,
                      "end": 1561,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1562,
                      "end": 1572,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "AND"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "AND"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "ADD"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "ADD"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1552,
                      "end": 1573,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1552,
                      "end": 1580,
                      "name": "LT"
                    },
                    {
                      "begin": 1552,
                      "end": 1580,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "PUSH [tag]",
                      "value": "68"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "tag",
                      "value": "68"
                    },
                    {
                      "begin": 1544,
                      "end": 1581,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1616,
                      "end": 1619,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1591,
                      "end": 1600,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1601,
                      "end": 1611,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "AND"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "AND"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "ADD"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "ADD"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1591,
                      "end": 1612,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "SUB"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "POP"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "POP"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "SSTORE"
                    },
                    {
                      "begin": 1591,
                      "end": 1619,
                      "name": "POP"
                    },
                    {
                      "begin": 1629,
                      "end": 1639,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1629,
                      "end": 1648,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1629,
                      "end": 1648,
                      "name": "AND"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "PUSH",
                      "value": "8FC"
                    },
                    {
                      "begin": 1649,
                      "end": 1652,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "MUL"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP4"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "SUB"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP6"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP9"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP9"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "CALL"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "SWAP4"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "POP"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "POP"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "POP"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "POP"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "PUSH [tag]",
                      "value": "69"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "REVERT"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "tag",
                      "value": "69"
                    },
                    {
                      "begin": 1629,
                      "end": 1653,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1674,
                      "end": 1684,
                      "name": "CALLER"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "PUSH",
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "AND"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "PUSH",
                      "value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
                    },
                    {
                      "begin": 1686,
                      "end": 1689,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "DUP3"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "ADD"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "POP"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "POP"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "SUB"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1663,
                      "end": 1690,
                      "name": "LOG2"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "POP"
                    },
                    {
                      "begin": 1499,
                      "end": 1697,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "tag",
                      "value": "38"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "EXP"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DIV"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "PUSH",
                      "value": "FF"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "AND"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "DUP2"
                    },
                    {
                      "begin": 883,
                      "end": 910,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "tag",
                      "value": "41"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "3"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "POP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "POP"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1169,
                      "end": 1234,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "44"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "AND"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MUL"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SUB"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "AND"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DIV"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DIV"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MUL"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "AND"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MUL"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SUB"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "AND"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DIV"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ISZERO"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "70"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "LT"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "71"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "100"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP4"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DIV"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MUL"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP4"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "70"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "71"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "72"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP4"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "GT"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH [tag]",
                      "value": "72"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPI"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SUB"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "PUSH",
                      "value": "1F"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "AND"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP3"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "ADD"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "tag",
                      "value": "70"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "POP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "POP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "POP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "POP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "POP"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "DUP2"
                    },
                    {
                      "begin": 846,
                      "end": 877,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "tag",
                      "value": "51"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2030,
                      "end": 2034,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 2053,
                      "end": 2087,
                      "name": "PUSH [tag]",
                      "value": "74"
                    },
                    {
                      "begin": 2066,
                      "end": 2076,
                      "name": "CALLER"
                    },
                    {
                      "begin": 2078,
                      "end": 2081,
                      "name": "DUP5"
                    },
                    {
                      "begin": 2083,
                      "end": 2086,
                      "name": "DUP5"
                    },
                    {
                      "begin": 2053,
                      "end": 2065,
                      "name": "PUSH [tag]",
                      "value": "32"
                    },
                    {
                      "begin": 2053,
                      "end": 2087,
                      "name": "JUMP",
                      "value": "[in]"
                    },
                    {
                      "begin": 2053,
                      "end": 2087,
                      "name": "tag",
                      "value": "74"
                    },
                    {
                      "begin": 2053,
                      "end": 2087,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 2046,
                      "end": 2087,
                      "name": "SWAP1"
                    },
                    {
                      "begin": 2046,
                      "end": 2087,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP3"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "POP"
                    },
                    {
                      "begin": 1973,
                      "end": 2094,
                      "name": "JUMP",
                      "value": "[out]"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "tag",
                      "value": "55"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMPDEST"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "4"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "20"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP1"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "MSTORE"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "40"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "KECCAK256"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "PUSH",
                      "value": "0"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SWAP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "POP"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "SLOAD"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "DUP2"
                    },
                    {
                      "begin": 1240,
                      "end": 1305,
                      "name": "JUMP",
                      "value": "[out]"
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit()": "d0e30db0",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/WETH.sol\":\"WETH9\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WETH.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2017-12-12\\n*/\\n\\n// Copyright (C) 2015, 2016, 2017 Dapphub\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.4.18;\\n\\ncontract WETH9 {\\n    string public name     = \\\"Wrapped Ether\\\";\\n    string public symbol   = \\\"WETH\\\";\\n    uint8  public decimals = 18;\\n\\n    event  Approval(address indexed src, address indexed guy, uint wad);\\n    event  Transfer(address indexed src, address indexed dst, uint wad);\\n    event  Deposit(address indexed dst, uint wad);\\n    event  Withdrawal(address indexed src, uint wad);\\n\\n    mapping (address => uint)                       public  balanceOf;\\n    mapping (address => mapping (address => uint))  public  allowance;\\n\\n    function() public payable {\\n        deposit();\\n    }\\n    function deposit() public payable {\\n        balanceOf[msg.sender] += msg.value;\\n        Deposit(msg.sender, msg.value);\\n    }\\n    function withdraw(uint wad) public {\\n        require(balanceOf[msg.sender] >= wad);\\n        balanceOf[msg.sender] -= wad;\\n        msg.sender.transfer(wad);\\n        Withdrawal(msg.sender, wad);\\n    }\\n\\n    function totalSupply() public view returns (uint) {\\n        return this.balance;\\n    }\\n\\n    function approve(address guy, uint wad) public returns (bool) {\\n        allowance[msg.sender][guy] = wad;\\n        Approval(msg.sender, guy, wad);\\n        return true;\\n    }\\n\\n    function transfer(address dst, uint wad) public returns (bool) {\\n        return transferFrom(msg.sender, dst, wad);\\n    }\\n\\n    function transferFrom(address src, address dst, uint wad)\\n        public\\n        returns (bool)\\n    {\\n        require(balanceOf[src] >= wad);\\n\\n        if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\\n            require(allowance[src][msg.sender] >= wad);\\n            allowance[src][msg.sender] -= wad;\\n        }\\n\\n        balanceOf[src] -= wad;\\n        balanceOf[dst] += wad;\\n\\n        Transfer(src, dst, wad);\\n\\n        return true;\\n    }\\n}\\n\\n\\n/*\\n                    GNU GENERAL PUBLIC LICENSE\\n                       Version 3, 29 June 2007\\n\\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\n Everyone is permitted to copy and distribute verbatim copies\\n of this license document, but changing it is not allowed.\\n\\n                            Preamble\\n\\n  The GNU General Public License is a free, copyleft license for\\nsoftware and other kinds of works.\\n\\n  The licenses for most software and other practical works are designed\\nto take away your freedom to share and change the works.  By contrast,\\nthe GNU General Public License is intended to guarantee your freedom to\\nshare and change all versions of a program--to make sure it remains free\\nsoftware for all its users.  We, the Free Software Foundation, use the\\nGNU General Public License for most of our software; it applies also to\\nany other work released this way by its authors.  You can apply it to\\nyour programs, too.\\n\\n  When we speak of free software, we are referring to freedom, not\\nprice.  Our General Public Licenses are designed to make sure that you\\nhave the freedom to distribute copies of free software (and charge for\\nthem if you wish), that you receive source code or can get it if you\\nwant it, that you can change the software or use pieces of it in new\\nfree programs, and that you know you can do these things.\\n\\n  To protect your rights, we need to prevent others from denying you\\nthese rights or asking you to surrender the rights.  Therefore, you have\\ncertain responsibilities if you distribute copies of the software, or if\\nyou modify it: responsibilities to respect the freedom of others.\\n\\n  For example, if you distribute copies of such a program, whether\\ngratis or for a fee, you must pass on to the recipients the same\\nfreedoms that you received.  You must make sure that they, too, receive\\nor can get the source code.  And you must show them these terms so they\\nknow their rights.\\n\\n  Developers that use the GNU GPL protect your rights with two steps:\\n(1) assert copyright on the software, and (2) offer you this License\\ngiving you legal permission to copy, distribute and/or modify it.\\n\\n  For the developers' and authors' protection, the GPL clearly explains\\nthat there is no warranty for this free software.  For both users' and\\nauthors' sake, the GPL requires that modified versions be marked as\\nchanged, so that their problems will not be attributed erroneously to\\nauthors of previous versions.\\n\\n  Some devices are designed to deny users access to install or run\\nmodified versions of the software inside them, although the manufacturer\\ncan do so.  This is fundamentally incompatible with the aim of\\nprotecting users' freedom to change the software.  The systematic\\npattern of such abuse occurs in the area of products for individuals to\\nuse, which is precisely where it is most unacceptable.  Therefore, we\\nhave designed this version of the GPL to prohibit the practice for those\\nproducts.  If such problems arise substantially in other domains, we\\nstand ready to extend this provision to those domains in future versions\\nof the GPL, as needed to protect the freedom of users.\\n\\n  Finally, every program is threatened constantly by software patents.\\nStates should not allow patents to restrict development and use of\\nsoftware on general-purpose computers, but in those that do, we wish to\\navoid the special danger that patents applied to a free program could\\nmake it effectively proprietary.  To prevent this, the GPL assures that\\npatents cannot be used to render the program non-free.\\n\\n  The precise terms and conditions for copying, distribution and\\nmodification follow.\\n\\n                       TERMS AND CONDITIONS\\n\\n  0. Definitions.\\n\\n  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\n\\n  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\nworks, such as semiconductor masks.\\n\\n  \\\"The Program\\\" refers to any copyrightable work licensed under this\\nLicense.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\n\\\"recipients\\\" may be individuals or organizations.\\n\\n  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\nin a fashion requiring copyright permission, other than the making of an\\nexact copy.  The resulting work is called a \\\"modified version\\\" of the\\nearlier work or a work \\\"based on\\\" the earlier work.\\n\\n  A \\\"covered work\\\" means either the unmodified Program or a work based\\non the Program.\\n\\n  To \\\"propagate\\\" a work means to do anything with it that, without\\npermission, would make you directly or secondarily liable for\\ninfringement under applicable copyright law, except executing it on a\\ncomputer or modifying a private copy.  Propagation includes copying,\\ndistribution (with or without modification), making available to the\\npublic, and in some countries other activities as well.\\n\\n  To \\\"convey\\\" a work means any kind of propagation that enables other\\nparties to make or receive copies.  Mere interaction with a user through\\na computer network, with no transfer of a copy, is not conveying.\\n\\n  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\nto the extent that it includes a convenient and prominently visible\\nfeature that (1) displays an appropriate copyright notice, and (2)\\ntells the user that there is no warranty for the work (except to the\\nextent that warranties are provided), that licensees may convey the\\nwork under this License, and how to view a copy of this License.  If\\nthe interface presents a list of user commands or options, such as a\\nmenu, a prominent item in the list meets this criterion.\\n\\n  1. Source Code.\\n\\n  The \\\"source code\\\" for a work means the preferred form of the work\\nfor making modifications to it.  \\\"Object code\\\" means any non-source\\nform of a work.\\n\\n  A \\\"Standard Interface\\\" means an interface that either is an official\\nstandard defined by a recognized standards body, or, in the case of\\ninterfaces specified for a particular programming language, one that\\nis widely used among developers working in that language.\\n\\n  The \\\"System Libraries\\\" of an executable work include anything, other\\nthan the work as a whole, that (a) is included in the normal form of\\npackaging a Major Component, but which is not part of that Major\\nComponent, and (b) serves only to enable use of the work with that\\nMajor Component, or to implement a Standard Interface for which an\\nimplementation is available to the public in source code form.  A\\n\\\"Major Component\\\", in this context, means a major essential component\\n(kernel, window system, and so on) of the specific operating system\\n(if any) on which the executable work runs, or a compiler used to\\nproduce the work, or an object code interpreter used to run it.\\n\\n  The \\\"Corresponding Source\\\" for a work in object code form means all\\nthe source code needed to generate, install, and (for an executable\\nwork) run the object code and to modify the work, including scripts to\\ncontrol those activities.  However, it does not include the work's\\nSystem Libraries, or general-purpose tools or generally available free\\nprograms which are used unmodified in performing those activities but\\nwhich are not part of the work.  For example, Corresponding Source\\nincludes interface definition files associated with source files for\\nthe work, and the source code for shared libraries and dynamically\\nlinked subprograms that the work is specifically designed to require,\\nsuch as by intimate data communication or control flow between those\\nsubprograms and other parts of the work.\\n\\n  The Corresponding Source need not include anything that users\\ncan regenerate automatically from other parts of the Corresponding\\nSource.\\n\\n  The Corresponding Source for a work in source code form is that\\nsame work.\\n\\n  2. Basic Permissions.\\n\\n  All rights granted under this License are granted for the term of\\ncopyright on the Program, and are irrevocable provided the stated\\nconditions are met.  This License explicitly affirms your unlimited\\npermission to run the unmodified Program.  The output from running a\\ncovered work is covered by this License only if the output, given its\\ncontent, constitutes a covered work.  This License acknowledges your\\nrights of fair use or other equivalent, as provided by copyright law.\\n\\n  You may make, run and propagate covered works that you do not\\nconvey, without conditions so long as your license otherwise remains\\nin force.  You may convey covered works to others for the sole purpose\\nof having them make modifications exclusively for you, or provide you\\nwith facilities for running those works, provided that you comply with\\nthe terms of this License in conveying all material for which you do\\nnot control copyright.  Those thus making or running the covered works\\nfor you must do so exclusively on your behalf, under your direction\\nand control, on terms that prohibit them from making any copies of\\nyour copyrighted material outside their relationship with you.\\n\\n  Conveying under any other circumstances is permitted solely under\\nthe conditions stated below.  Sublicensing is not allowed; section 10\\nmakes it unnecessary.\\n\\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\n\\n  No covered work shall be deemed part of an effective technological\\nmeasure under any applicable law fulfilling obligations under article\\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\\nsimilar laws prohibiting or restricting circumvention of such\\nmeasures.\\n\\n  When you convey a covered work, you waive any legal power to forbid\\ncircumvention of technological measures to the extent such circumvention\\nis effected by exercising rights under this License with respect to\\nthe covered work, and you disclaim any intention to limit operation or\\nmodification of the work as a means of enforcing, against the work's\\nusers, your or third parties' legal rights to forbid circumvention of\\ntechnological measures.\\n\\n  4. Conveying Verbatim Copies.\\n\\n  You may convey verbatim copies of the Program's source code as you\\nreceive it, in any medium, provided that you conspicuously and\\nappropriately publish on each copy an appropriate copyright notice;\\nkeep intact all notices stating that this License and any\\nnon-permissive terms added in accord with section 7 apply to the code;\\nkeep intact all notices of the absence of any warranty; and give all\\nrecipients a copy of this License along with the Program.\\n\\n  You may charge any price or no price for each copy that you convey,\\nand you may offer support or warranty protection for a fee.\\n\\n  5. Conveying Modified Source Versions.\\n\\n  You may convey a work based on the Program, or the modifications to\\nproduce it from the Program, in the form of source code under the\\nterms of section 4, provided that you also meet all of these conditions:\\n\\n    a) The work must carry prominent notices stating that you modified\\n    it, and giving a relevant date.\\n\\n    b) The work must carry prominent notices stating that it is\\n    released under this License and any conditions added under section\\n    7.  This requirement modifies the requirement in section 4 to\\n    \\\"keep intact all notices\\\".\\n\\n    c) You must license the entire work, as a whole, under this\\n    License to anyone who comes into possession of a copy.  This\\n    License will therefore apply, along with any applicable section 7\\n    additional terms, to the whole of the work, and all its parts,\\n    regardless of how they are packaged.  This License gives no\\n    permission to license the work in any other way, but it does not\\n    invalidate such permission if you have separately received it.\\n\\n    d) If the work has interactive user interfaces, each must display\\n    Appropriate Legal Notices; however, if the Program has interactive\\n    interfaces that do not display Appropriate Legal Notices, your\\n    work need not make them do so.\\n\\n  A compilation of a covered work with other separate and independent\\nworks, which are not by their nature extensions of the covered work,\\nand which are not combined with it such as to form a larger program,\\nin or on a volume of a storage or distribution medium, is called an\\n\\\"aggregate\\\" if the compilation and its resulting copyright are not\\nused to limit the access or legal rights of the compilation's users\\nbeyond what the individual works permit.  Inclusion of a covered work\\nin an aggregate does not cause this License to apply to the other\\nparts of the aggregate.\\n\\n  6. Conveying Non-Source Forms.\\n\\n  You may convey a covered work in object code form under the terms\\nof sections 4 and 5, provided that you also convey the\\nmachine-readable Corresponding Source under the terms of this License,\\nin one of these ways:\\n\\n    a) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by the\\n    Corresponding Source fixed on a durable physical medium\\n    customarily used for software interchange.\\n\\n    b) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by a\\n    written offer, valid for at least three years and valid for as\\n    long as you offer spare parts or customer support for that product\\n    model, to give anyone who possesses the object code either (1) a\\n    copy of the Corresponding Source for all the software in the\\n    product that is covered by this License, on a durable physical\\n    medium customarily used for software interchange, for a price no\\n    more than your reasonable cost of physically performing this\\n    conveying of source, or (2) access to copy the\\n    Corresponding Source from a network server at no charge.\\n\\n    c) Convey individual copies of the object code with a copy of the\\n    written offer to provide the Corresponding Source.  This\\n    alternative is allowed only occasionally and noncommercially, and\\n    only if you received the object code with such an offer, in accord\\n    with subsection 6b.\\n\\n    d) Convey the object code by offering access from a designated\\n    place (gratis or for a charge), and offer equivalent access to the\\n    Corresponding Source in the same way through the same place at no\\n    further charge.  You need not require recipients to copy the\\n    Corresponding Source along with the object code.  If the place to\\n    copy the object code is a network server, the Corresponding Source\\n    may be on a different server (operated by you or a third party)\\n    that supports equivalent copying facilities, provided you maintain\\n    clear directions next to the object code saying where to find the\\n    Corresponding Source.  Regardless of what server hosts the\\n    Corresponding Source, you remain obligated to ensure that it is\\n    available for as long as needed to satisfy these requirements.\\n\\n    e) Convey the object code using peer-to-peer transmission, provided\\n    you inform other peers where the object code and Corresponding\\n    Source of the work are being offered to the general public at no\\n    charge under subsection 6d.\\n\\n  A separable portion of the object code, whose source code is excluded\\nfrom the Corresponding Source as a System Library, need not be\\nincluded in conveying the object code work.\\n\\n  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\ntangible personal property which is normally used for personal, family,\\nor household purposes, or (2) anything designed or sold for incorporation\\ninto a dwelling.  In determining whether a product is a consumer product,\\ndoubtful cases shall be resolved in favor of coverage.  For a particular\\nproduct received by a particular user, \\\"normally used\\\" refers to a\\ntypical or common use of that class of product, regardless of the status\\nof the particular user or of the way in which the particular user\\nactually uses, or expects or is expected to use, the product.  A product\\nis a consumer product regardless of whether the product has substantial\\ncommercial, industrial or non-consumer uses, unless such uses represent\\nthe only significant mode of use of the product.\\n\\n  \\\"Installation Information\\\" for a User Product means any methods,\\nprocedures, authorization keys, or other information required to install\\nand execute modified versions of a covered work in that User Product from\\na modified version of its Corresponding Source.  The information must\\nsuffice to ensure that the continued functioning of the modified object\\ncode is in no case prevented or interfered with solely because\\nmodification has been made.\\n\\n  If you convey an object code work under this section in, or with, or\\nspecifically for use in, a User Product, and the conveying occurs as\\npart of a transaction in which the right of possession and use of the\\nUser Product is transferred to the recipient in perpetuity or for a\\nfixed term (regardless of how the transaction is characterized), the\\nCorresponding Source conveyed under this section must be accompanied\\nby the Installation Information.  But this requirement does not apply\\nif neither you nor any third party retains the ability to install\\nmodified object code on the User Product (for example, the work has\\nbeen installed in ROM).\\n\\n  The requirement to provide Installation Information does not include a\\nrequirement to continue to provide support service, warranty, or updates\\nfor a work that has been modified or installed by the recipient, or for\\nthe User Product in which it has been modified or installed.  Access to a\\nnetwork may be denied when the modification itself materially and\\nadversely affects the operation of the network or violates the rules and\\nprotocols for communication across the network.\\n\\n  Corresponding Source conveyed, and Installation Information provided,\\nin accord with this section must be in a format that is publicly\\ndocumented (and with an implementation available to the public in\\nsource code form), and must require no special password or key for\\nunpacking, reading or copying.\\n\\n  7. Additional Terms.\\n\\n  \\\"Additional permissions\\\" are terms that supplement the terms of this\\nLicense by making exceptions from one or more of its conditions.\\nAdditional permissions that are applicable to the entire Program shall\\nbe treated as though they were included in this License, to the extent\\nthat they are valid under applicable law.  If additional permissions\\napply only to part of the Program, that part may be used separately\\nunder those permissions, but the entire Program remains governed by\\nthis License without regard to the additional permissions.\\n\\n  When you convey a copy of a covered work, you may at your option\\nremove any additional permissions from that copy, or from any part of\\nit.  (Additional permissions may be written to require their own\\nremoval in certain cases when you modify the work.)  You may place\\nadditional permissions on material, added by you to a covered work,\\nfor which you have or can give appropriate copyright permission.\\n\\n  Notwithstanding any other provision of this License, for material you\\nadd to a covered work, you may (if authorized by the copyright holders of\\nthat material) supplement the terms of this License with terms:\\n\\n    a) Disclaiming warranty or limiting liability differently from the\\n    terms of sections 15 and 16 of this License; or\\n\\n    b) Requiring preservation of specified reasonable legal notices or\\n    author attributions in that material or in the Appropriate Legal\\n    Notices displayed by works containing it; or\\n\\n    c) Prohibiting misrepresentation of the origin of that material, or\\n    requiring that modified versions of such material be marked in\\n    reasonable ways as different from the original version; or\\n\\n    d) Limiting the use for publicity purposes of names of licensors or\\n    authors of the material; or\\n\\n    e) Declining to grant rights under trademark law for use of some\\n    trade names, trademarks, or service marks; or\\n\\n    f) Requiring indemnification of licensors and authors of that\\n    material by anyone who conveys the material (or modified versions of\\n    it) with contractual assumptions of liability to the recipient, for\\n    any liability that these contractual assumptions directly impose on\\n    those licensors and authors.\\n\\n  All other non-permissive additional terms are considered \\\"further\\nrestrictions\\\" within the meaning of section 10.  If the Program as you\\nreceived it, or any part of it, contains a notice stating that it is\\ngoverned by this License along with a term that is a further\\nrestriction, you may remove that term.  If a license document contains\\na further restriction but permits relicensing or conveying under this\\nLicense, you may add to a covered work material governed by the terms\\nof that license document, provided that the further restriction does\\nnot survive such relicensing or conveying.\\n\\n  If you add terms to a covered work in accord with this section, you\\nmust place, in the relevant source files, a statement of the\\nadditional terms that apply to those files, or a notice indicating\\nwhere to find the applicable terms.\\n\\n  Additional terms, permissive or non-permissive, may be stated in the\\nform of a separately written license, or stated as exceptions;\\nthe above requirements apply either way.\\n\\n  8. Termination.\\n\\n  You may not propagate or modify a covered work except as expressly\\nprovided under this License.  Any attempt otherwise to propagate or\\nmodify it is void, and will automatically terminate your rights under\\nthis License (including any patent licenses granted under the third\\nparagraph of section 11).\\n\\n  However, if you cease all violation of this License, then your\\nlicense from a particular copyright holder is reinstated (a)\\nprovisionally, unless and until the copyright holder explicitly and\\nfinally terminates your license, and (b) permanently, if the copyright\\nholder fails to notify you of the violation by some reasonable means\\nprior to 60 days after the cessation.\\n\\n  Moreover, your license from a particular copyright holder is\\nreinstated permanently if the copyright holder notifies you of the\\nviolation by some reasonable means, this is the first time you have\\nreceived notice of violation of this License (for any work) from that\\ncopyright holder, and you cure the violation prior to 30 days after\\nyour receipt of the notice.\\n\\n  Termination of your rights under this section does not terminate the\\nlicenses of parties who have received copies or rights from you under\\nthis License.  If your rights have been terminated and not permanently\\nreinstated, you do not qualify to receive new licenses for the same\\nmaterial under section 10.\\n\\n  9. Acceptance Not Required for Having Copies.\\n\\n  You are not required to accept this License in order to receive or\\nrun a copy of the Program.  Ancillary propagation of a covered work\\noccurring solely as a consequence of using peer-to-peer transmission\\nto receive a copy likewise does not require acceptance.  However,\\nnothing other than this License grants you permission to propagate or\\nmodify any covered work.  These actions infringe copyright if you do\\nnot accept this License.  Therefore, by modifying or propagating a\\ncovered work, you indicate your acceptance of this License to do so.\\n\\n  10. Automatic Licensing of Downstream Recipients.\\n\\n  Each time you convey a covered work, the recipient automatically\\nreceives a license from the original licensors, to run, modify and\\npropagate that work, subject to this License.  You are not responsible\\nfor enforcing compliance by third parties with this License.\\n\\n  An \\\"entity transaction\\\" is a transaction transferring control of an\\norganization, or substantially all assets of one, or subdividing an\\norganization, or merging organizations.  If propagation of a covered\\nwork results from an entity transaction, each party to that\\ntransaction who receives a copy of the work also receives whatever\\nlicenses to the work the party's predecessor in interest had or could\\ngive under the previous paragraph, plus a right to possession of the\\nCorresponding Source of the work from the predecessor in interest, if\\nthe predecessor has it or can get it with reasonable efforts.\\n\\n  You may not impose any further restrictions on the exercise of the\\nrights granted or affirmed under this License.  For example, you may\\nnot impose a license fee, royalty, or other charge for exercise of\\nrights granted under this License, and you may not initiate litigation\\n(including a cross-claim or counterclaim in a lawsuit) alleging that\\nany patent claim is infringed by making, using, selling, offering for\\nsale, or importing the Program or any portion of it.\\n\\n  11. Patents.\\n\\n  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\nLicense of the Program or a work on which the Program is based.  The\\nwork thus licensed is called the contributor's \\\"contributor version\\\".\\n\\n  A contributor's \\\"essential patent claims\\\" are all patent claims\\nowned or controlled by the contributor, whether already acquired or\\nhereafter acquired, that would be infringed by some manner, permitted\\nby this License, of making, using, or selling its contributor version,\\nbut do not include claims that would be infringed only as a\\nconsequence of further modification of the contributor version.  For\\npurposes of this definition, \\\"control\\\" includes the right to grant\\npatent sublicenses in a manner consistent with the requirements of\\nthis License.\\n\\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\\npatent license under the contributor's essential patent claims, to\\nmake, use, sell, offer for sale, import and otherwise run, modify and\\npropagate the contents of its contributor version.\\n\\n  In the following three paragraphs, a \\\"patent license\\\" is any express\\nagreement or commitment, however denominated, not to enforce a patent\\n(such as an express permission to practice a patent or covenant not to\\nsue for patent infringement).  To \\\"grant\\\" such a patent license to a\\nparty means to make such an agreement or commitment not to enforce a\\npatent against the party.\\n\\n  If you convey a covered work, knowingly relying on a patent license,\\nand the Corresponding Source of the work is not available for anyone\\nto copy, free of charge and under the terms of this License, through a\\npublicly available network server or other readily accessible means,\\nthen you must either (1) cause the Corresponding Source to be so\\navailable, or (2) arrange to deprive yourself of the benefit of the\\npatent license for this particular work, or (3) arrange, in a manner\\nconsistent with the requirements of this License, to extend the patent\\nlicense to downstream recipients.  \\\"Knowingly relying\\\" means you have\\nactual knowledge that, but for the patent license, your conveying the\\ncovered work in a country, or your recipient's use of the covered work\\nin a country, would infringe one or more identifiable patents in that\\ncountry that you have reason to believe are valid.\\n\\n  If, pursuant to or in connection with a single transaction or\\narrangement, you convey, or propagate by procuring conveyance of, a\\ncovered work, and grant a patent license to some of the parties\\nreceiving the covered work authorizing them to use, propagate, modify\\nor convey a specific copy of the covered work, then the patent license\\nyou grant is automatically extended to all recipients of the covered\\nwork and works based on it.\\n\\n  A patent license is \\\"discriminatory\\\" if it does not include within\\nthe scope of its coverage, prohibits the exercise of, or is\\nconditioned on the non-exercise of one or more of the rights that are\\nspecifically granted under this License.  You may not convey a covered\\nwork if you are a party to an arrangement with a third party that is\\nin the business of distributing software, under which you make payment\\nto the third party based on the extent of your activity of conveying\\nthe work, and under which the third party grants, to any of the\\nparties who would receive the covered work from you, a discriminatory\\npatent license (a) in connection with copies of the covered work\\nconveyed by you (or copies made from those copies), or (b) primarily\\nfor and in connection with specific products or compilations that\\ncontain the covered work, unless you entered into that arrangement,\\nor that patent license was granted, prior to 28 March 2007.\\n\\n  Nothing in this License shall be construed as excluding or limiting\\nany implied license or other defenses to infringement that may\\notherwise be available to you under applicable patent law.\\n\\n  12. No Surrender of Others' Freedom.\\n\\n  If conditions are imposed on you (whether by court order, agreement or\\notherwise) that contradict the conditions of this License, they do not\\nexcuse you from the conditions of this License.  If you cannot convey a\\ncovered work so as to satisfy simultaneously your obligations under this\\nLicense and any other pertinent obligations, then as a consequence you may\\nnot convey it at all.  For example, if you agree to terms that obligate you\\nto collect a royalty for further conveying from those to whom you convey\\nthe Program, the only way you could satisfy both those terms and this\\nLicense would be to refrain entirely from conveying the Program.\\n\\n  13. Use with the GNU Affero General Public License.\\n\\n  Notwithstanding any other provision of this License, you have\\npermission to link or combine any covered work with a work licensed\\nunder version 3 of the GNU Affero General Public License into a single\\ncombined work, and to convey the resulting work.  The terms of this\\nLicense will continue to apply to the part which is the covered work,\\nbut the special requirements of the GNU Affero General Public License,\\nsection 13, concerning interaction through a network will apply to the\\ncombination as such.\\n\\n  14. Revised Versions of this License.\\n\\n  The Free Software Foundation may publish revised and/or new versions of\\nthe GNU General Public License from time to time.  Such new versions will\\nbe similar in spirit to the present version, but may differ in detail to\\naddress new problems or concerns.\\n\\n  Each version is given a distinguishing version number.  If the\\nProgram specifies that a certain numbered version of the GNU General\\nPublic License \\\"or any later version\\\" applies to it, you have the\\noption of following the terms and conditions either of that numbered\\nversion or of any later version published by the Free Software\\nFoundation.  If the Program does not specify a version number of the\\nGNU General Public License, you may choose any version ever published\\nby the Free Software Foundation.\\n\\n  If the Program specifies that a proxy can decide which future\\nversions of the GNU General Public License can be used, that proxy's\\npublic statement of acceptance of a version permanently authorizes you\\nto choose that version for the Program.\\n\\n  Later license versions may give you additional or different\\npermissions.  However, no additional obligations are imposed on any\\nauthor or copyright holder as a result of your choosing to follow a\\nlater version.\\n\\n  15. Disclaimer of Warranty.\\n\\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n\\n  16. Limitation of Liability.\\n\\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\nSUCH DAMAGES.\\n\\n  17. Interpretation of Sections 15 and 16.\\n\\n  If the disclaimer of warranty and limitation of liability provided\\nabove cannot be given local legal effect according to their terms,\\nreviewing courts shall apply local law that most closely approximates\\nan absolute waiver of all civil liability in connection with the\\nProgram, unless a warranty or assumption of liability accompanies a\\ncopy of the Program in return for a fee.\\n\\n                     END OF TERMS AND CONDITIONS\\n\\n            How to Apply These Terms to Your New Programs\\n\\n  If you develop a new program, and you want it to be of the greatest\\npossible use to the public, the best way to achieve this is to make it\\nfree software which everyone can redistribute and change under these terms.\\n\\n  To do so, attach the following notices to the program.  It is safest\\nto attach them to the start of each source file to most effectively\\nstate the exclusion of warranty; and each file should have at least\\nthe \\\"copyright\\\" line and a pointer to where the full notice is found.\\n\\n    <one line to give the program's name and a brief idea of what it does.>\\n    Copyright (C) <year>  <name of author>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\nAlso add information on how to contact you by electronic and paper mail.\\n\\n  If the program does terminal interaction, make it output a short\\nnotice like this when it starts in an interactive mode:\\n\\n    <program>  Copyright (C) <year>  <name of author>\\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\n    This is free software, and you are welcome to redistribute it\\n    under certain conditions; type `show c' for details.\\n\\nThe hypothetical commands `show w' and `show c' should show the appropriate\\nparts of the General Public License.  Of course, your program's commands\\nmight be different; for a GUI interface, you would use an \\\"about box\\\".\\n\\n  You should also get your employer (if you work as a programmer) or school,\\nif any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\nFor more information on this, and how to apply and follow the GNU GPL, see\\n<http://www.gnu.org/licenses/>.\\n\\n  The GNU General Public License does not permit incorporating your program\\ninto proprietary programs.  If your program is a subroutine library, you\\nmay consider it more useful to permit linking proprietary applications with\\nthe library.  If this is what you want to do, use the GNU Lesser General\\nPublic License instead of this License.  But first, please read\\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\\n\\n*/\",\"keccak256\":\"0x80280ef0c66005f49c73bfa618a7095c0a1ca33dd15db7c50303e7b0cb71bf99\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/0xBitcoinExtended.sol:465:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n                                          ^----------------------^\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/0xBitcoinExtended.sol": {
        "ast": {
          "absolutePath": "contracts/0xBitcoinExtended.sol",
          "exportedSymbols": {
            "ApproveAndCallFallBack": [
              194
            ],
            "ERC20Interface": [
              182
            ],
            "ExtendedMath": [
              115
            ],
            "Owned": [
              263
            ],
            "SafeMath": [
              96
            ],
            "_0xBitcoinToken": [
              1113
            ]
          },
          "id": 1114,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.4",
                ".18"
              ],
              "nodeType": "PragmaDirective",
              "src": "67:24:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 96,
              "linearizedBaseContracts": [
                96
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "714:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 10,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "725:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "729:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 12,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "733:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "729:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "725:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15,
                        "nodeType": "ExpressionStatement",
                        "src": "725:9:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 17,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "753:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 18,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "758:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "753:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 16,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "745:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "745:15:0"
                      }
                    ]
                  },
                  "id": 23,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "667:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "675:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "706:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "706:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "705:8:0"
                  },
                  "scope": 96,
                  "src": "654:114:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 44,
                    "nodeType": "Block",
                    "src": "834:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 33,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "853:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 34,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "858:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "853:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 32,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "845:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "845:15:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "871:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 39,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "875:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 40,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "879:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "875:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "871:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "871:9:0"
                      }
                    ]
                  },
                  "id": 45,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "787:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "795:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "795:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "786:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "826:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "825:8:0"
                  },
                  "scope": 96,
                  "src": "774:114:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "954:68:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "965:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "969:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 56,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "973:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "969:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "965:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "965:9:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 63,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 61,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "993:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 62,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "998:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "993:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 68,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 66,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 64,
                                    "name": "c",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52,
                                    "src": "1003:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 65,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "1007:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1003:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 67,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "1012:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1003:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "993:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 60,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "985:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "ExpressionStatement",
                        "src": "985:29:0"
                      }
                    ]
                  },
                  "id": 73,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "907:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "915:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "906:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "946:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "945:8:0"
                  },
                  "scope": 96,
                  "src": "894:128:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "1088:53:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 83,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "1107:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 84,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1111:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1107:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 82,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "1099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1099:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "1099:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "1124:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "1128:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1132:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1128:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1124:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 93,
                        "nodeType": "ExpressionStatement",
                        "src": "1124:9:0"
                      }
                    ]
                  },
                  "id": 95,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 75,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "1041:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1041:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "1049:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1049:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1040:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "1080:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1079:8:0"
                  },
                  "scope": 96,
                  "src": "1028:113:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1114,
              "src": "630:514:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 115,
              "linearizedBaseContracts": [
                115
              ],
              "name": "ExtendedMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "1299:56:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1313:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1317:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1313:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 110,
                        "nodeType": "IfStatement",
                        "src": "1310:18:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1327:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 104,
                          "id": 109,
                          "nodeType": "Return",
                          "src": "1320:8:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1346:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 104,
                        "id": 112,
                        "nodeType": "Return",
                        "src": "1339:8:0"
                      }
                    ]
                  },
                  "id": 114,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "limitLessThan",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 98,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1252:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1252:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 100,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1260:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 103,
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1291:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1291:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1290:8:0"
                  },
                  "scope": 115,
                  "src": "1229:126:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1114,
              "src": "1148:209:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 182,
              "linearizedBaseContracts": [
                182
              ],
              "name": "ERC20Interface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "id": 120,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1688:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1716:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1716:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1715:6:0"
                  },
                  "scope": 182,
                  "src": "1668:54:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 127,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "1747:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1746:20:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "1792:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1792:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1791:14:0"
                  },
                  "scope": 182,
                  "src": "1728:78:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 136,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1831:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1831:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1851:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1830:37:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "name": "remaining",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1893:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:16:0"
                  },
                  "scope": 182,
                  "src": "1812:97:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 145,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1933:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1933:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 140,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1945:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1932:25:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 143,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1974:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1974:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1973:14:0"
                  },
                  "scope": 182,
                  "src": "1915:73:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 154,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2011:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2028:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2010:30:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2057:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2056:14:0"
                  },
                  "scope": 182,
                  "src": "1994:77:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "id": 165,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2099:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2099:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2113:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2125:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2125:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2098:39:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "2154:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:14:0"
                  },
                  "scope": 182,
                  "src": "2077:91:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 173,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2190:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2190:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": true,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2212:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2212:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": false,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "2232:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2232:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2189:55:0"
                  },
                  "src": "2175:70:0"
                },
                {
                  "anonymous": false,
                  "id": 181,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": true,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2266:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2266:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "indexed": true,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2294:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2294:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "indexed": false,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2319:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2265:66:0"
                  },
                  "src": "2251:81:0"
                }
              ],
              "scope": 1114,
              "src": "1637:698:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 194,
              "linearizedBaseContracts": [
                194
              ],
              "name": "ApproveAndCallFallBack",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "id": 193,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "receiveApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2674:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2674:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2688:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2688:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2704:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 190,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2719:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2719:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2673:57:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2737:0:0"
                  },
                  "scope": 194,
                  "src": "2649:89:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1114,
              "src": "2610:131:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 263,
              "linearizedBaseContracts": [
                263
              ],
              "name": "Owned",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 196,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2948:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 198,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2975:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 204,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "indexed": true,
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "3033:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": true,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "3056:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3032:44:0"
                  },
                  "src": "3006:71:0"
                },
                {
                  "body": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "3108:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "3119:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "3127:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3127:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3119:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 211,
                        "nodeType": "ExpressionStatement",
                        "src": "3119:18:0"
                      }
                    ]
                  },
                  "id": 213,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "Owned",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3098:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3108:0:0"
                  },
                  "scope": 263,
                  "src": "3084:61:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "3171:59:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 216,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "3190:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3190:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 218,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "3204:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3190:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "3182:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3182:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "ExpressionStatement",
                        "src": "3182:28:0"
                      },
                      {
                        "id": 222,
                        "nodeType": "PlaceholderStatement",
                        "src": "3221:1:0"
                      }
                    ]
                  },
                  "id": 224,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3171:0:0"
                  },
                  "src": "3152:78:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 235,
                    "nodeType": "Block",
                    "src": "3300:39:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3311:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "3322:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3311:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 234,
                        "nodeType": "ExpressionStatement",
                        "src": "3311:20:0"
                      }
                    ]
                  },
                  "id": 236,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 229,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3290:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3290:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "name": "_newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "3264:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3264:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3263:19:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3300:0:0"
                  },
                  "scope": 263,
                  "src": "3237:102:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "3379:157:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 240,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "3398:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3398:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 242,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "3412:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3398:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 239,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "3390:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3390:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "3390:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 247,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "3453:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3460:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 246,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "3432:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3432:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "3432:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 251,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "3480:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3488:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3480:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "3480:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3507:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3526:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3518:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3518:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3507:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "3507:21:0"
                      }
                    ]
                  },
                  "id": 262,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3369:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3379:0:0"
                  },
                  "scope": 263,
                  "src": "3345:191:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1114,
              "src": "2926:613:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 264,
                    "name": "ERC20Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 182,
                    "src": "3829:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Interface_$182",
                      "typeString": "contract ERC20Interface"
                    }
                  },
                  "id": 265,
                  "nodeType": "InheritanceSpecifier",
                  "src": "3829:14:0"
                },
                {
                  "arguments": [],
                  "baseName": {
                    "contractScope": null,
                    "id": 266,
                    "name": "Owned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 263,
                    "src": "3845:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Owned_$263",
                      "typeString": "contract Owned"
                    }
                  },
                  "id": 267,
                  "nodeType": "InheritanceSpecifier",
                  "src": "3845:5:0"
                }
              ],
              "contractDependencies": [
                182,
                263
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1113,
              "linearizedBaseContracts": [
                1113,
                263,
                182
              ],
              "name": "_0xBitcoinToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 270,
                  "libraryName": {
                    "contractScope": null,
                    "id": 268,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 96,
                    "src": "3864:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$96",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "3858:24:0",
                  "typeName": {
                    "id": 269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 273,
                  "libraryName": {
                    "contractScope": null,
                    "id": 271,
                    "name": "ExtendedMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 115,
                    "src": "3893:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExtendedMath_$115",
                      "typeString": "library ExtendedMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "3887:28:0",
                  "typeName": {
                    "id": 272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 275,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "3922:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3922:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 277,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "3949:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3949:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "3975:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4003:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 283,
                  "name": "latestDifficultyPeriodStarted",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4037:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4037:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 285,
                  "name": "epochCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4087:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4087:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "_BLOCKS_PER_READJUSTMENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4143:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "31303234",
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4182:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1024_by_1",
                      "typeString": "int_const 1024"
                    },
                    "value": "1024"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 293,
                  "name": "_MINIMUM_TARGET",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4216:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_65536_by_1",
                      "typeString": "int_const 65536"
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4247:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3136",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4250:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "4247:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_65536_by_1",
                      "typeString": "int_const 65536"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 298,
                  "name": "_MAXIMUM_TARGET",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4393:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                      "typeString": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4424:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "323334",
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4427:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_234_by_1",
                        "typeString": "int_const 234"
                      },
                      "value": "234"
                    },
                    "src": "4424:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                      "typeString": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "miningTarget",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4438:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "challengeNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4469:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4469:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "rewardEra",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4559:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "maxSupplyForEra",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4586:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 308,
                  "name": "lastRewardTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4621:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 310,
                  "name": "lastRewardAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4654:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4654:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 312,
                  "name": "lastRewardEthBlockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4688:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4688:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 315,
                  "name": "locked",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4731:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4745:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "name": "solutionForChallenge",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4757:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                    "typeString": "mapping(bytes32 => bytes32)"
                  },
                  "typeName": {
                    "id": 318,
                    "keyType": {
                      "id": 316,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4757:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                      "typeString": "mapping(bytes32 => bytes32)"
                    },
                    "valueType": {
                      "id": 317,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4776:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "name": "tokensMinted",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4812:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4812:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 325,
                  "name": "balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4843:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 324,
                    "keyType": {
                      "id": 322,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4843:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 323,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4862:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4884:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 330,
                    "keyType": {
                      "id": 326,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4892:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4884:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 329,
                      "keyType": {
                        "id": 327,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4911:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "4903:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 328,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4922:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 341,
                  "name": "Mint",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "4955:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4955:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "indexed": false,
                        "name": "reward_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "4977:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4977:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "indexed": false,
                        "name": "epochCount",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "4997:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4997:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "indexed": false,
                        "name": "newChallengeNumber",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "5014:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5014:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4954:87:0"
                  },
                  "src": "4944:98:0"
                },
                {
                  "body": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "5273:592:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 346,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5286:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3078425443",
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5295:7:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9e4a716719467fc42b820b94f1356b33f39ce535dd752e1d5b99cb0c97083efa",
                              "typeString": "literal_string \"0xBTC\""
                            },
                            "value": "0xBTC"
                          },
                          "src": "5286:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "5286:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 350,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "5313:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3078426974636f696e20546f6b656e",
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5320:17:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fea30677be370ab091c7335eca717ec2a8f008807e0930b3e75ca21e92b0c743",
                              "typeString": "literal_string \"0xBitcoin Token\""
                            },
                            "value": "0xBitcoin Token"
                          },
                          "src": "5313:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "5313:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 354,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5348:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "38",
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5359:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "5348:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "5348:12:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 358,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "5371:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3231303030303030",
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5386:8:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_21000000_by_1",
                                "typeString": "int_const 21000000"
                              },
                              "value": "21000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5397:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 362,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 279,
                                    "src": "5406:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5401:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": "uint"
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5401:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5397:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5386:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5371:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "5371:44:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 368,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "5429:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 372,
                        "nodeType": "IfStatement",
                        "src": "5426:19:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 369,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "5437:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5437:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 371,
                          "nodeType": "ExpressionStatement",
                          "src": "5437:8:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 373,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "5455:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5464:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5455:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 376,
                        "nodeType": "ExpressionStatement",
                        "src": "5455:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "5479:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5494:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5479:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "5479:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5506:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5518:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5506:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "5506:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "5529:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5564:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 386,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "5547:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 95,
                              "src": "5547:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5547:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5529:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 391,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "5577:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "5592:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5577:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 395,
                        "nodeType": "ExpressionStatement",
                        "src": "5577:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "latestDifficultyPeriodStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "5618:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 397,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "5650:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5650:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5618:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 400,
                        "nodeType": "ExpressionStatement",
                        "src": "5618:44:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 401,
                            "name": "_startNewMiningEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "5673:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5673:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "5673:22:0"
                      }
                    ]
                  },
                  "id": 405,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 344,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "5264:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5264:9:0"
                    }
                  ],
                  "name": "_0xBitcoinToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5254:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5273:0:0"
                  },
                  "scope": 1113,
                  "src": "5230:635:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 516,
                    "nodeType": "Block",
                    "src": "5963:1380:0",
                    "statements": [
                      {
                        "assignments": [
                          415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 415,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "6134:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6134:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 422,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 417,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "6162:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 418,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "6179:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6179:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "6191:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 416,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "6152:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6152:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6134:64:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 423,
                            "name": "digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "6276:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 424,
                            "name": "challenge_digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "6286:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6276:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "6272:40:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 426,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "6304:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6304:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 428,
                          "nodeType": "ExpressionStatement",
                          "src": "6304:8:0"
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 431,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "6395:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6387:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6387:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "6405:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6387:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 438,
                        "nodeType": "IfStatement",
                        "src": "6384:43:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 435,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "6419:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6419:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 437,
                          "nodeType": "ExpressionStatement",
                          "src": "6419:8:0"
                        }
                      },
                      {
                        "assignments": [
                          440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 440,
                            "name": "solution",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "6499:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 439,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6499:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 444,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "solutionForChallenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "6518:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 442,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "6539:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6518:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6499:56:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 445,
                              "name": "solutionForChallenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "6570:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                                "typeString": "mapping(bytes32 => bytes32)"
                              }
                            },
                            "id": 447,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "6591:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6570:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 448,
                            "name": "digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "6610:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6570:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "6570:46:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 451,
                            "name": "solution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "6634:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6646:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          "src": "6634:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 457,
                        "nodeType": "IfStatement",
                        "src": "6631:28:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 454,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "6651:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6651:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 456,
                          "nodeType": "ExpressionStatement",
                          "src": "6651:8:0"
                        }
                      },
                      {
                        "assignments": [
                          459
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 459,
                            "name": "reward_amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 517,
                            "src": "6722:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 458,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6722:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 462,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 460,
                            "name": "getMiningReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "6743:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6743:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6722:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 463,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "6775:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 466,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 464,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "6784:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6784:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6775:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 472,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "6823:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "6798:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 470,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 468,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1369,
                                    "src": "6807:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6807:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6798:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "6798:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6798:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6775:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "6775:62:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 476,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "6852:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 479,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "6884:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 477,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "6867:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "6867:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6867:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6852:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "6852:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 484,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "6974:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 485,
                                "name": "maxSupplyForEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "6990:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6974:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 483,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "6967:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6967:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 488,
                        "nodeType": "ExpressionStatement",
                        "src": "6967:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 489,
                            "name": "lastRewardTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "7065:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 490,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "7080:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7080:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7065:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "7065:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 494,
                            "name": "lastRewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "7104:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 495,
                            "name": "reward_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "7123:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7104:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "7104:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "lastRewardEthBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "7150:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 499,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "7177:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7177:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7150:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "7150:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 503,
                            "name": "_startNewMiningEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "7206:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7206:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 505,
                        "nodeType": "ExpressionStatement",
                        "src": "7206:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 507,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "7250:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7250:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 509,
                              "name": "reward_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "7262:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 510,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "7277:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 511,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7289:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 506,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "7245:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes32)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7245:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "7245:61:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7327:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 413,
                        "id": 515,
                        "nodeType": "Return",
                        "src": "7320:11:0"
                      }
                    ]
                  },
                  "id": 517,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 407,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 517,
                        "src": "5892:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 409,
                        "name": "challenge_digest",
                        "nodeType": "VariableDeclaration",
                        "scope": 517,
                        "src": "5907:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5907:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:41:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 517,
                        "src": "5949:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5949:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5948:14:0"
                  },
                  "scope": 1113,
                  "src": "5878:1465:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 580,
                    "nodeType": "Block",
                    "src": "7423:1110:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 522,
                                    "name": "getMiningReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 746,
                                    "src": "7728:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7728:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 520,
                                  "name": "tokensMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 321,
                                  "src": "7711:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "7711:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7711:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 525,
                              "name": "maxSupplyForEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "7749:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7711:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 527,
                              "name": "rewardEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "7768:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3339",
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7780:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_39_by_1",
                                "typeString": "int_const 39"
                              },
                              "value": "39"
                            },
                            "src": "7768:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7711:71:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 538,
                        "nodeType": "IfStatement",
                        "src": "7707:127:0",
                        "trueBody": {
                          "id": 537,
                          "nodeType": "Block",
                          "src": "7790:44:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 531,
                                  "name": "rewardEra",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 304,
                                  "src": "7800:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 532,
                                    "name": "rewardEra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 304,
                                    "src": "7812:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7824:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7812:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7800:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 536,
                              "nodeType": "ExpressionStatement",
                              "src": "7800:25:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "7977:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 540,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "7995:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "32",
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8028:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 544,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 304,
                                          "src": "8032:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8044:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "8032:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 547,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8031:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8028:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 541,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "8010:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 95,
                                "src": "8010:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8010:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7995:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7977:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 552,
                        "nodeType": "ExpressionStatement",
                        "src": "7977:70:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 553,
                            "name": "epochCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "8056:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8084:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 554,
                                "name": "epochCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 285,
                                "src": "8069:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "8069:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8069:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8056:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 559,
                        "nodeType": "ExpressionStatement",
                        "src": "8056:30:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "8172:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 561,
                              "name": "_BLOCKS_PER_READJUSTMENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "8185:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8172:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8213:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8172:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 569,
                        "nodeType": "IfStatement",
                        "src": "8169:93:0",
                        "trueBody": {
                          "id": 568,
                          "nodeType": "Block",
                          "src": "8222:40:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 565,
                                  "name": "_reAdjustDifficulty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "8232:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8232:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 567,
                              "nodeType": "ExpressionStatement",
                              "src": "8232:21:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 570,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "8469:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 573,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1361,
                                    "src": "8503:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8503:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8518:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8503:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "8487:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "blockhash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8487:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256) view returns (bytes32)"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8487:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "8469:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "8469:51:0"
                      }
                    ]
                  },
                  "id": 581,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "_startNewMiningEpoch",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7411:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7423:0:0"
                  },
                  "scope": 1113,
                  "src": "7382:1151:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "8797:1789:0",
                    "statements": [
                      {
                        "assignments": [
                          585
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 585,
                            "name": "ethBlocksSinceLastDifficultyPeriod",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "8809:39:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 584,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8809:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 590,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 586,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "8851:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8851:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 588,
                            "name": "latestDifficultyPeriodStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "8866:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8851:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8809:86:0"
                      },
                      {
                        "assignments": [
                          592
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 592,
                            "name": "epochsMined",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "9066:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 591,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9066:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 594,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 593,
                          "name": "_BLOCKS_PER_READJUSTMENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "9085:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9066:43:0"
                      },
                      {
                        "assignments": [
                          596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 596,
                            "name": "targetEthBlocksPerDiffPeriod",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "9126:33:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 595,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9126:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 600,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "epochsMined",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "9162:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3630",
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9176:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "9162:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9126:52:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 601,
                            "name": "ethBlocksSinceLastDifficultyPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "9304:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 602,
                            "name": "targetEthBlocksPerDiffPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "9341:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9304:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 673,
                          "nodeType": "Block",
                          "src": "9889:393:0",
                          "statements": [
                            {
                              "assignments": [
                                640
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 640,
                                  "name": "shortage_block_pct",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "9901:23:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 639,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9901:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 649,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 647,
                                    "name": "targetEthBlocksPerDiffPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 596,
                                    "src": "9978:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 643,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9967:3:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 641,
                                            "name": "ethBlocksSinceLastDifficultyPeriod",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 585,
                                            "src": "9928:34:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 642,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 73,
                                          "src": "9928:38:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9928:43:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 645,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9927:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 95,
                                  "src": "9927:49:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9927:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9901:107:0"
                            },
                            {
                              "assignments": [
                                651
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 651,
                                  "name": "shortage_block_pct_extra",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "10021:29:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 650,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10021:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 659,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10095:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 654,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10076:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 652,
                                        "name": "shortage_block_pct",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 640,
                                        "src": "10053:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "10053:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10053:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "limitLessThan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 114,
                                  "src": "10053:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10053:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10021:79:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 660,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "10168:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 668,
                                          "name": "shortage_block_pct_extra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 651,
                                          "src": "10227:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "32303030",
                                              "id": 665,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10217:4:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              },
                                              "value": "2000"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 663,
                                              "name": "miningTarget",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "10200:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 664,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 95,
                                            "src": "10200:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 666,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10200:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 667,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "10200:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10200:52:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 661,
                                      "name": "miningTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 300,
                                      "src": "10183:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 662,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "10183:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10183:70:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10168:85:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 672,
                              "nodeType": "ExpressionStatement",
                              "src": "10168:85:0"
                            }
                          ]
                        },
                        "id": 674,
                        "nodeType": "IfStatement",
                        "src": "9300:982:0",
                        "trueBody": {
                          "id": 638,
                          "nodeType": "Block",
                          "src": "9380:505:0",
                          "statements": [
                            {
                              "assignments": [
                                605
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 605,
                                  "name": "excess_block_pct",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "9392:21:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 604,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9392:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 614,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 612,
                                    "name": "ethBlocksSinceLastDifficultyPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 585,
                                    "src": "9461:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 608,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9450:3:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 606,
                                            "name": "targetEthBlocksPerDiffPeriod",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 596,
                                            "src": "9417:28:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 607,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 73,
                                          "src": "9417:32:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 609,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9417:37:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 610,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9416:39:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 95,
                                  "src": "9416:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9416:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9392:105:0"
                            },
                            {
                              "assignments": [
                                616
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 616,
                                  "name": "excess_block_pct_extra",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 699,
                                  "src": "9510:27:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 615,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9510:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 624,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 622,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9580:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 619,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9561:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 617,
                                        "name": "excess_block_pct",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "9540:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 618,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "9540:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9540:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "limitLessThan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 114,
                                  "src": "9540:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9540:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9510:75:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 625,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "9773:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 633,
                                          "name": "excess_block_pct_extra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 616,
                                          "src": "9832:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "32303030",
                                              "id": 630,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9822:4:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              },
                                              "value": "2000"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 628,
                                              "name": "miningTarget",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "9805:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 629,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 95,
                                            "src": "9805:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 631,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9805:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 632,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "9805:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 634,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9805:50:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 626,
                                      "name": "miningTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 300,
                                      "src": "9788:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 45,
                                    "src": "9788:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9788:68:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9773:83:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 637,
                              "nodeType": "ExpressionStatement",
                              "src": "9773:83:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 675,
                            "name": "latestDifficultyPeriodStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "10294:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "10326:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10326:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10294:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "10294:44:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 680,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "10352:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 681,
                            "name": "_MINIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "10367:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10352:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 688,
                        "nodeType": "IfStatement",
                        "src": "10349:113:0",
                        "trueBody": {
                          "id": 687,
                          "nodeType": "Block",
                          "src": "10409:53:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 683,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "10421:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 684,
                                  "name": "_MINIMUM_TARGET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "10436:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10421:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 686,
                              "nodeType": "ExpressionStatement",
                              "src": "10421:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 689,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "10475:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "10490:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10475:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 697,
                        "nodeType": "IfStatement",
                        "src": "10472:108:0",
                        "trueBody": {
                          "id": 696,
                          "nodeType": "Block",
                          "src": "10527:53:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 692,
                                  "name": "miningTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "10539:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 693,
                                  "name": "_MAXIMUM_TARGET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "10554:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10539:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 695,
                              "nodeType": "ExpressionStatement",
                              "src": "10539:30:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 699,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "_reAdjustDifficulty",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8785:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8797:0:0"
                  },
                  "scope": 1113,
                  "src": "8757:1829:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "10742:39:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "10759:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 703,
                        "id": 705,
                        "nodeType": "Return",
                        "src": "10752:22:0"
                      }
                    ]
                  },
                  "id": 707,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getChallengeNumber",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10705:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 707,
                        "src": "10733:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10733:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10732:9:0"
                  },
                  "scope": 1113,
                  "src": "10678:103:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "10932:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 714,
                              "name": "miningTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "10969:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 712,
                              "name": "_MAXIMUM_TARGET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "10949:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 95,
                            "src": "10949:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10949:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 711,
                        "id": 716,
                        "nodeType": "Return",
                        "src": "10942:40:0"
                      }
                    ]
                  },
                  "id": 718,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMiningDifficulty",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10898:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 710,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "10926:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10926:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10925:6:0"
                  },
                  "scope": 1113,
                  "src": "10870:119:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "11053:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 723,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "11069:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 722,
                        "id": 724,
                        "nodeType": "Return",
                        "src": "11062:19:0"
                      }
                    ]
                  },
                  "id": 726,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMiningTarget",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11019:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 726,
                        "src": "11047:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11047:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11046:6:0"
                  },
                  "scope": 1113,
                  "src": "10995:92:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 745,
                    "nodeType": "Block",
                    "src": "11259:199:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11435:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 741,
                                "name": "rewardEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "11438:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11435:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3530",
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11404:2:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50_by_1",
                                      "typeString": "int_const 50"
                                    },
                                    "value": "50"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11409:2:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 734,
                                          "name": "decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 279,
                                          "src": "11418:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11413:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": "uint"
                                      },
                                      "id": 735,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11413:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11409:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11404:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 738,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11403:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 95,
                            "src": "11403:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11403:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 730,
                        "id": 744,
                        "nodeType": "Return",
                        "src": "11396:53:0"
                      }
                    ]
                  },
                  "id": 746,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMiningReward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11225:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 729,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "11253:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11253:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11252:6:0"
                  },
                  "scope": 1113,
                  "src": "11201:257:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 768,
                    "nodeType": "Block",
                    "src": "11628:106:0",
                    "statements": [
                      {
                        "assignments": [
                          758
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 758,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 769,
                            "src": "11639:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 757,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 765,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 760,
                              "name": "challenge_number",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "11666:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 761,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "11683:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11683:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 763,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "11694:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 759,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "11656:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11656:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11639:61:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 766,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 758,
                          "src": "11718:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 756,
                        "id": 767,
                        "nodeType": "Return",
                        "src": "11711:13:0"
                      }
                    ]
                  },
                  "id": 769,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "getMintDigest",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 748,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11520:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "name": "challenge_digest",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11535:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11535:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 752,
                        "name": "challenge_number",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11561:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11561:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11519:67:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 755,
                        "name": "digesttest",
                        "nodeType": "VariableDeclaration",
                        "scope": 769,
                        "src": "11608:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11608:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11607:20:0"
                  },
                  "scope": 1113,
                  "src": "11497:237:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 805,
                    "nodeType": "Block",
                    "src": "11925:188:0",
                    "statements": [
                      {
                        "assignments": [
                          783
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 783,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 806,
                            "src": "11938:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 782,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11938:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 790,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 785,
                              "name": "challenge_number",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "11965:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 786,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "11982:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11982:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 788,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 771,
                              "src": "11993:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 784,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "11955:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11955:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11938:61:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 792,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "12023:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12015:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12015:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 794,
                            "name": "testTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "12033:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12015:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 799,
                        "nodeType": "IfStatement",
                        "src": "12012:41:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 796,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "12045:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12045:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 798,
                          "nodeType": "ExpressionStatement",
                          "src": "12045:8:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 800,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "12074:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 801,
                                "name": "challenge_digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "12084:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "12074:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 803,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12073:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 781,
                        "id": 804,
                        "nodeType": "Return",
                        "src": "12066:35:0"
                      }
                    ]
                  },
                  "id": 806,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "checkMintSolution",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 778,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 771,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11806:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11806:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "name": "challenge_digest",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11821:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11821:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 775,
                        "name": "challenge_number",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11847:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11847:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 777,
                        "name": "testTarget",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11873:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 776,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11873:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11805:84:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 780,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "11911:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11911:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11910:14:0"
                  },
                  "scope": 1113,
                  "src": "11779:334:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "12358:62:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "12376:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 812,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "12392:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 816,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12409:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12401:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12401:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12392:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12376:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 810,
                        "id": 818,
                        "nodeType": "Return",
                        "src": "12369:43:0"
                      }
                    ]
                  },
                  "id": 820,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12324:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "12352:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12352:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12351:6:0"
                  },
                  "scope": 1113,
                  "src": "12304:116:0",
                  "stateMutability": "view",
                  "superFunction": 120,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "12723:46:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 827,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "12741:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 829,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 828,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "12750:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12741:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 826,
                        "id": 830,
                        "nodeType": "Return",
                        "src": "12734:27:0"
                      }
                    ]
                  },
                  "id": 832,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "12664:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12664:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12663:20:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 825,
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "12709:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12709:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12708:14:0"
                  },
                  "scope": 1113,
                  "src": "12645:124:0",
                  "stateMutability": "view",
                  "superFunction": 127,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "13191:189:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 841,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "13202:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 844,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 842,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "13211:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13211:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13202:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 850,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13250:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 845,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "13225:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 848,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 846,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1369,
                                    "src": "13234:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "13234:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13225:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "13225:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13225:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13202:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 853,
                        "nodeType": "ExpressionStatement",
                        "src": "13202:55:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 854,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "13268:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 856,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 855,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "13277:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13268:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 861,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13300:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 857,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "13283:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 859,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 858,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "13292:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13283:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "13283:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13283:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13268:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 864,
                        "nodeType": "ExpressionStatement",
                        "src": "13268:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 866,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "13327:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13327:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "13339:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 869,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "13343:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 865,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "13318:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13318:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 871,
                        "nodeType": "ExpressionStatement",
                        "src": "13318:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13368:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 840,
                        "id": 873,
                        "nodeType": "Return",
                        "src": "13361:11:0"
                      }
                    ]
                  },
                  "id": 875,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 834,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "13136:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13136:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 836,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "13148:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13148:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13135:25:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "13177:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13177:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13176:14:0"
                  },
                  "scope": 1113,
                  "src": "13118:262:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 145,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "13971:126:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 884,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "13982:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 888,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 885,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "13990:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13990:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13982:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 889,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 887,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "14002:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13982:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 890,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "14013:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13982:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "13982:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 894,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "14039:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14039:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 896,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "14051:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 897,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "14060:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "14030:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14030:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "14030:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14085:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 883,
                        "id": 901,
                        "nodeType": "Return",
                        "src": "14078:11:0"
                      }
                    ]
                  },
                  "id": 903,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 877,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "13911:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 876,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13911:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 879,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "13928:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 878,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13928:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13910:30:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 882,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "13957:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 881,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13957:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13956:14:0"
                  },
                  "scope": 1113,
                  "src": "13894:203:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 154,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 961,
                    "nodeType": "Block",
                    "src": "14729:247:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 914,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "14740:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 916,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 915,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "14749:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14740:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 921,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "14776:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 917,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "14757:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 919,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 918,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 905,
                                  "src": "14766:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14757:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "14757:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14757:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14740:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 924,
                        "nodeType": "ExpressionStatement",
                        "src": "14740:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 925,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "14794:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 929,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 926,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 905,
                                "src": "14802:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14794:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 930,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 927,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "14808:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14808:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14794:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 938,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "14852:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 931,
                                    "name": "allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 331,
                                    "src": "14822:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 933,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 932,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 905,
                                    "src": "14830:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14822:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 936,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 934,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1369,
                                    "src": "14836:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "14836:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14822:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "14822:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14822:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14794:65:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 941,
                        "nodeType": "ExpressionStatement",
                        "src": "14794:65:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 942,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "14870:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 944,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 943,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "14879:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14870:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 949,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "14902:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 945,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "14885:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 947,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 946,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "14894:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14885:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "14885:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14885:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14870:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 952,
                        "nodeType": "ExpressionStatement",
                        "src": "14870:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "14929:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 955,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "14935:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 956,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "14939:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 953,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "14920:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14920:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "14920:26:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14964:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 913,
                        "id": 960,
                        "nodeType": "Return",
                        "src": "14957:11:0"
                      }
                    ]
                  },
                  "id": 962,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 905,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14660:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 904,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14660:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 907,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14674:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14674:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 909,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14686:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14686:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14659:39:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 912,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 962,
                        "src": "14715:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14715:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14714:14:0"
                  },
                  "scope": 1113,
                  "src": "14638:338:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 165,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "15359:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 971,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 331,
                              "src": "15377:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 973,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 972,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 964,
                              "src": "15385:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15377:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 975,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 974,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "15397:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15377:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 970,
                        "id": 976,
                        "nodeType": "Return",
                        "src": "15370:35:0"
                      }
                    ]
                  },
                  "id": 978,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "name": "tokenOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "15281:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15281:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 966,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "15301:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15280:37:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "name": "remaining",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "15343:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15343:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15342:16:0"
                  },
                  "scope": 1113,
                  "src": "15262:151:0",
                  "stateMutability": "view",
                  "superFunction": 136,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "15875:216:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 989,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "15886:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 993,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 990,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "15894:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15894:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15886:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 994,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 992,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "15906:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15886:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 995,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 982,
                            "src": "15917:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15886:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "15886:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 999,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "15943:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15943:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1001,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "15955:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1002,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "15964:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 998,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "15934:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15934:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "15934:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1009,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "16030:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "16030:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1011,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "16042:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1012,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1390,
                              "src": "16050:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$__0xBitcoinToken_$1113",
                                "typeString": "contract _0xBitcoinToken"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1013,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "16056:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$__0xBitcoinToken_$1113",
                                "typeString": "contract _0xBitcoinToken"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1006,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 980,
                                  "src": "16005:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1005,
                                "name": "ApproveAndCallFallBack",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "15982:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ApproveAndCallFallBack_$194_$",
                                  "typeString": "type(contract ApproveAndCallFallBack)"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15982:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$194",
                                "typeString": "contract ApproveAndCallFallBack"
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiveApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 193,
                            "src": "15982:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15982:79:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1015,
                        "nodeType": "ExpressionStatement",
                        "src": "15982:79:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16079:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 988,
                        "id": 1017,
                        "nodeType": "Return",
                        "src": "16072:11:0"
                      }
                    ]
                  },
                  "id": 1019,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15803:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15803:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 982,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15820:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15820:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 984,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15833:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "15833:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15802:42:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 987,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "15861:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15861:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15860:14:0"
                  },
                  "scope": 1113,
                  "src": "15779:312:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "16313:27:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1022,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "16324:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16324:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1024,
                        "nodeType": "ExpressionStatement",
                        "src": "16324:8:0"
                      }
                    ]
                  },
                  "id": 1026,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16295:2:0"
                  },
                  "payable": true,
                  "returnParameters": {
                    "id": 1021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16313:0:0"
                  },
                  "scope": 1113,
                  "src": "16286:54:0",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "16682:78:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1041,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "16738:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1042,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "16745:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1038,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1028,
                                  "src": "16715:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1037,
                                "name": "ERC20Interface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "16700:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20Interface_$182_$",
                                  "typeString": "type(contract ERC20Interface)"
                                }
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16700:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Interface_$182",
                                "typeString": "contract ERC20Interface"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "16700:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16700:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1036,
                        "id": 1044,
                        "nodeType": "Return",
                        "src": "16693:59:0"
                      }
                    ]
                  },
                  "id": 1046,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1033,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "16649:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16649:9:0"
                    }
                  ],
                  "name": "transferAnyERC20Token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "name": "tokenAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "16607:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16607:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1030,
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "16629:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16629:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16606:35:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1035,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "16668:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16668:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16667:14:0"
                  },
                  "scope": 1113,
                  "src": "16576:184:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "17032:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1051,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "17042:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1052,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1048,
                            "src": "17057:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17042:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "17042:18:0"
                      }
                    ]
                  },
                  "id": 1056,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "setTokensMinted",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "name": "amt",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "17013:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17013:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17012:10:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17032:0:0"
                  },
                  "scope": 1113,
                  "src": "16988:79:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1111,
                    "nodeType": "Block",
                    "src": "17131:1318:0",
                    "statements": [
                      {
                        "assignments": [
                          1062
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1062,
                            "name": "reward_amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 1112,
                            "src": "17867:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1061,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17867:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1065,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1063,
                            "name": "getMiningReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "17888:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17888:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17867:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1066,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "17916:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1069,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1067,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "17925:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "17925:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17916:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1075,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "17964:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1070,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "17939:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1073,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1071,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1369,
                                    "src": "17948:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "17948:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17939:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "17939:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17939:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17916:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1078,
                        "nodeType": "ExpressionStatement",
                        "src": "17916:62:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1079,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "17989:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1082,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "18021:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1080,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "18004:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "18004:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18004:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17989:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "17989:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1087,
                                "name": "tokensMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "18103:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1088,
                                "name": "maxSupplyForEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "18119:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18103:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1086,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "18096:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18096:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1091,
                        "nodeType": "ExpressionStatement",
                        "src": "18096:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1092,
                            "name": "lastRewardTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "18186:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1093,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "18201:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18201:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18186:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "18186:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1097,
                            "name": "lastRewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "18221:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1098,
                            "name": "reward_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "18240:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18221:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1100,
                        "nodeType": "ExpressionStatement",
                        "src": "18221:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1101,
                            "name": "lastRewardEthBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "18263:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1102,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "18290:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18290:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18263:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "18263:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1106,
                            "name": "_startNewMiningEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "18318:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18318:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1108,
                        "nodeType": "ExpressionStatement",
                        "src": "18318:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18437:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1060,
                        "id": 1110,
                        "nodeType": "Return",
                        "src": "18430:11:0"
                      }
                    ]
                  },
                  "id": 1112,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "mintWithoutPoW",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17097:3:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "17117:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17117:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17116:14:0"
                  },
                  "scope": 1113,
                  "src": "17074:1375:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1114,
              "src": "3801:14652:0"
            }
          ],
          "src": "67:18386:0"
        },
        "id": 0,
        "legacyAST": {
          "attributes": {
            "absolutePath": "contracts/0xBitcoinExtended.sol",
            "exportedSymbols": {
              "ApproveAndCallFallBack": [
                194
              ],
              "ERC20Interface": [
                182
              ],
              "ExtendedMath": [
                115
              ],
              "Owned": [
                263
              ],
              "SafeMath": [
                96
              ],
              "_0xBitcoinToken": [
                1113
              ]
            }
          },
          "children": [
            {
              "attributes": {
                "literals": [
                  "solidity",
                  "^",
                  "0.4",
                  ".18"
                ]
              },
              "id": 1,
              "name": "PragmaDirective",
              "src": "67:24:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "library",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  96
                ],
                "name": "SafeMath",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "add",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 23,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 2,
                              "name": "ElementaryTypeName",
                              "src": "667:4:0"
                            }
                          ],
                          "id": 3,
                          "name": "VariableDeclaration",
                          "src": "667:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 23,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 4,
                              "name": "ElementaryTypeName",
                              "src": "675:4:0"
                            }
                          ],
                          "id": 5,
                          "name": "VariableDeclaration",
                          "src": "675:6:0"
                        }
                      ],
                      "id": 6,
                      "name": "ParameterList",
                      "src": "666:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 23,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 7,
                              "name": "ElementaryTypeName",
                              "src": "706:4:0"
                            }
                          ],
                          "id": 8,
                          "name": "VariableDeclaration",
                          "src": "706:6:0"
                        }
                      ],
                      "id": 9,
                      "name": "ParameterList",
                      "src": "705:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 8,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 10,
                                  "name": "Identifier",
                                  "src": "725:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "+",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 3,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 11,
                                      "name": "Identifier",
                                      "src": "729:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 5,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 12,
                                      "name": "Identifier",
                                      "src": "733:1:0"
                                    }
                                  ],
                                  "id": 13,
                                  "name": "BinaryOperation",
                                  "src": "729:5:0"
                                }
                              ],
                              "id": 14,
                              "name": "Assignment",
                              "src": "725:9:0"
                            }
                          ],
                          "id": 15,
                          "name": "ExpressionStatement",
                          "src": "725:9:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 16,
                                  "name": "Identifier",
                                  "src": "745:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 8,
                                        "type": "uint256",
                                        "value": "c"
                                      },
                                      "id": 17,
                                      "name": "Identifier",
                                      "src": "753:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 3,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 18,
                                      "name": "Identifier",
                                      "src": "758:1:0"
                                    }
                                  ],
                                  "id": 19,
                                  "name": "BinaryOperation",
                                  "src": "753:6:0"
                                }
                              ],
                              "id": 20,
                              "name": "FunctionCall",
                              "src": "745:15:0"
                            }
                          ],
                          "id": 21,
                          "name": "ExpressionStatement",
                          "src": "745:15:0"
                        }
                      ],
                      "id": 22,
                      "name": "Block",
                      "src": "714:54:0"
                    }
                  ],
                  "id": 23,
                  "name": "FunctionDefinition",
                  "src": "654:114:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "sub",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 45,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 24,
                              "name": "ElementaryTypeName",
                              "src": "787:4:0"
                            }
                          ],
                          "id": 25,
                          "name": "VariableDeclaration",
                          "src": "787:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 45,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 26,
                              "name": "ElementaryTypeName",
                              "src": "795:4:0"
                            }
                          ],
                          "id": 27,
                          "name": "VariableDeclaration",
                          "src": "795:6:0"
                        }
                      ],
                      "id": 28,
                      "name": "ParameterList",
                      "src": "786:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 45,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 29,
                              "name": "ElementaryTypeName",
                              "src": "826:4:0"
                            }
                          ],
                          "id": 30,
                          "name": "VariableDeclaration",
                          "src": "826:6:0"
                        }
                      ],
                      "id": 31,
                      "name": "ParameterList",
                      "src": "825:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 32,
                                  "name": "Identifier",
                                  "src": "845:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 27,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 33,
                                      "name": "Identifier",
                                      "src": "853:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 25,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 34,
                                      "name": "Identifier",
                                      "src": "858:1:0"
                                    }
                                  ],
                                  "id": 35,
                                  "name": "BinaryOperation",
                                  "src": "853:6:0"
                                }
                              ],
                              "id": 36,
                              "name": "FunctionCall",
                              "src": "845:15:0"
                            }
                          ],
                          "id": 37,
                          "name": "ExpressionStatement",
                          "src": "845:15:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 30,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 38,
                                  "name": "Identifier",
                                  "src": "871:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "-",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 25,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 39,
                                      "name": "Identifier",
                                      "src": "875:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 27,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 40,
                                      "name": "Identifier",
                                      "src": "879:1:0"
                                    }
                                  ],
                                  "id": 41,
                                  "name": "BinaryOperation",
                                  "src": "875:5:0"
                                }
                              ],
                              "id": 42,
                              "name": "Assignment",
                              "src": "871:9:0"
                            }
                          ],
                          "id": 43,
                          "name": "ExpressionStatement",
                          "src": "871:9:0"
                        }
                      ],
                      "id": 44,
                      "name": "Block",
                      "src": "834:54:0"
                    }
                  ],
                  "id": 45,
                  "name": "FunctionDefinition",
                  "src": "774:114:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mul",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 73,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 46,
                              "name": "ElementaryTypeName",
                              "src": "907:4:0"
                            }
                          ],
                          "id": 47,
                          "name": "VariableDeclaration",
                          "src": "907:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 73,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 48,
                              "name": "ElementaryTypeName",
                              "src": "915:4:0"
                            }
                          ],
                          "id": 49,
                          "name": "VariableDeclaration",
                          "src": "915:6:0"
                        }
                      ],
                      "id": 50,
                      "name": "ParameterList",
                      "src": "906:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 73,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 51,
                              "name": "ElementaryTypeName",
                              "src": "946:4:0"
                            }
                          ],
                          "id": 52,
                          "name": "VariableDeclaration",
                          "src": "946:6:0"
                        }
                      ],
                      "id": 53,
                      "name": "ParameterList",
                      "src": "945:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 52,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 54,
                                  "name": "Identifier",
                                  "src": "965:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "*",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 47,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 55,
                                      "name": "Identifier",
                                      "src": "969:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 49,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 56,
                                      "name": "Identifier",
                                      "src": "973:1:0"
                                    }
                                  ],
                                  "id": 57,
                                  "name": "BinaryOperation",
                                  "src": "969:5:0"
                                }
                              ],
                              "id": 58,
                              "name": "Assignment",
                              "src": "965:9:0"
                            }
                          ],
                          "id": 59,
                          "name": "ExpressionStatement",
                          "src": "965:9:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 60,
                                  "name": "Identifier",
                                  "src": "985:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "||",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "==",
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 47,
                                            "type": "uint256",
                                            "value": "a"
                                          },
                                          "id": 61,
                                          "name": "Identifier",
                                          "src": "993:1:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "30",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 0",
                                            "value": "0"
                                          },
                                          "id": 62,
                                          "name": "Literal",
                                          "src": "998:1:0"
                                        }
                                      ],
                                      "id": 63,
                                      "name": "BinaryOperation",
                                      "src": "993:6:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "==",
                                        "type": "bool"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "/",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 52,
                                                "type": "uint256",
                                                "value": "c"
                                              },
                                              "id": 64,
                                              "name": "Identifier",
                                              "src": "1003:1:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 47,
                                                "type": "uint256",
                                                "value": "a"
                                              },
                                              "id": 65,
                                              "name": "Identifier",
                                              "src": "1007:1:0"
                                            }
                                          ],
                                          "id": 66,
                                          "name": "BinaryOperation",
                                          "src": "1003:5:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 49,
                                            "type": "uint256",
                                            "value": "b"
                                          },
                                          "id": 67,
                                          "name": "Identifier",
                                          "src": "1012:1:0"
                                        }
                                      ],
                                      "id": 68,
                                      "name": "BinaryOperation",
                                      "src": "1003:10:0"
                                    }
                                  ],
                                  "id": 69,
                                  "name": "BinaryOperation",
                                  "src": "993:20:0"
                                }
                              ],
                              "id": 70,
                              "name": "FunctionCall",
                              "src": "985:29:0"
                            }
                          ],
                          "id": 71,
                          "name": "ExpressionStatement",
                          "src": "985:29:0"
                        }
                      ],
                      "id": 72,
                      "name": "Block",
                      "src": "954:68:0"
                    }
                  ],
                  "id": 73,
                  "name": "FunctionDefinition",
                  "src": "894:128:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "div",
                    "payable": false,
                    "scope": 96,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 95,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 74,
                              "name": "ElementaryTypeName",
                              "src": "1041:4:0"
                            }
                          ],
                          "id": 75,
                          "name": "VariableDeclaration",
                          "src": "1041:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 95,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 76,
                              "name": "ElementaryTypeName",
                              "src": "1049:4:0"
                            }
                          ],
                          "id": 77,
                          "name": "VariableDeclaration",
                          "src": "1049:6:0"
                        }
                      ],
                      "id": 78,
                      "name": "ParameterList",
                      "src": "1040:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 95,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 79,
                              "name": "ElementaryTypeName",
                              "src": "1080:4:0"
                            }
                          ],
                          "id": 80,
                          "name": "VariableDeclaration",
                          "src": "1080:6:0"
                        }
                      ],
                      "id": 81,
                      "name": "ParameterList",
                      "src": "1079:8:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 82,
                                  "name": "Identifier",
                                  "src": "1099:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 77,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 83,
                                      "name": "Identifier",
                                      "src": "1107:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "30",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 0",
                                        "value": "0"
                                      },
                                      "id": 84,
                                      "name": "Literal",
                                      "src": "1111:1:0"
                                    }
                                  ],
                                  "id": 85,
                                  "name": "BinaryOperation",
                                  "src": "1107:5:0"
                                }
                              ],
                              "id": 86,
                              "name": "FunctionCall",
                              "src": "1099:14:0"
                            }
                          ],
                          "id": 87,
                          "name": "ExpressionStatement",
                          "src": "1099:14:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 80,
                                    "type": "uint256",
                                    "value": "c"
                                  },
                                  "id": 88,
                                  "name": "Identifier",
                                  "src": "1124:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "/",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 75,
                                        "type": "uint256",
                                        "value": "a"
                                      },
                                      "id": 89,
                                      "name": "Identifier",
                                      "src": "1128:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 77,
                                        "type": "uint256",
                                        "value": "b"
                                      },
                                      "id": 90,
                                      "name": "Identifier",
                                      "src": "1132:1:0"
                                    }
                                  ],
                                  "id": 91,
                                  "name": "BinaryOperation",
                                  "src": "1128:5:0"
                                }
                              ],
                              "id": 92,
                              "name": "Assignment",
                              "src": "1124:9:0"
                            }
                          ],
                          "id": 93,
                          "name": "ExpressionStatement",
                          "src": "1124:9:0"
                        }
                      ],
                      "id": 94,
                      "name": "Block",
                      "src": "1088:53:0"
                    }
                  ],
                  "id": 95,
                  "name": "FunctionDefinition",
                  "src": "1028:113:0"
                }
              ],
              "id": 96,
              "name": "ContractDefinition",
              "src": "630:514:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "library",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  115
                ],
                "name": "ExtendedMath",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "limitLessThan",
                    "payable": false,
                    "scope": 115,
                    "stateMutability": "pure",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "a",
                            "scope": 114,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 97,
                              "name": "ElementaryTypeName",
                              "src": "1252:4:0"
                            }
                          ],
                          "id": 98,
                          "name": "VariableDeclaration",
                          "src": "1252:6:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "b",
                            "scope": 114,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 99,
                              "name": "ElementaryTypeName",
                              "src": "1260:4:0"
                            }
                          ],
                          "id": 100,
                          "name": "VariableDeclaration",
                          "src": "1260:6:0"
                        }
                      ],
                      "id": 101,
                      "name": "ParameterList",
                      "src": "1251:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "c",
                            "scope": 114,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 102,
                              "name": "ElementaryTypeName",
                              "src": "1291:4:0"
                            }
                          ],
                          "id": 103,
                          "name": "VariableDeclaration",
                          "src": "1291:6:0"
                        }
                      ],
                      "id": 104,
                      "name": "ParameterList",
                      "src": "1290:8:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 98,
                                    "type": "uint256",
                                    "value": "a"
                                  },
                                  "id": 105,
                                  "name": "Identifier",
                                  "src": "1313:1:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 100,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 106,
                                  "name": "Identifier",
                                  "src": "1317:1:0"
                                }
                              ],
                              "id": 107,
                              "name": "BinaryOperation",
                              "src": "1313:5:0"
                            },
                            {
                              "attributes": {
                                "functionReturnParameters": 104
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 100,
                                    "type": "uint256",
                                    "value": "b"
                                  },
                                  "id": 108,
                                  "name": "Identifier",
                                  "src": "1327:1:0"
                                }
                              ],
                              "id": 109,
                              "name": "Return",
                              "src": "1320:8:0"
                            }
                          ],
                          "id": 110,
                          "name": "IfStatement",
                          "src": "1310:18:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 104
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 98,
                                "type": "uint256",
                                "value": "a"
                              },
                              "id": 111,
                              "name": "Identifier",
                              "src": "1346:1:0"
                            }
                          ],
                          "id": 112,
                          "name": "Return",
                          "src": "1339:8:0"
                        }
                      ],
                      "id": 113,
                      "name": "Block",
                      "src": "1299:56:0"
                    }
                  ],
                  "id": 114,
                  "name": "FunctionDefinition",
                  "src": "1229:126:0"
                }
              ],
              "id": 115,
              "name": "ContractDefinition",
              "src": "1148:209:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  182
                ],
                "name": "ERC20Interface",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 116,
                      "name": "ParameterList",
                      "src": "1688:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 120,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 117,
                              "name": "ElementaryTypeName",
                              "src": "1716:4:0"
                            }
                          ],
                          "id": 118,
                          "name": "VariableDeclaration",
                          "src": "1716:4:0"
                        }
                      ],
                      "id": 119,
                      "name": "ParameterList",
                      "src": "1715:6:0"
                    }
                  ],
                  "id": 120,
                  "name": "FunctionDefinition",
                  "src": "1668:54:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 127,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 121,
                              "name": "ElementaryTypeName",
                              "src": "1747:7:0"
                            }
                          ],
                          "id": 122,
                          "name": "VariableDeclaration",
                          "src": "1747:18:0"
                        }
                      ],
                      "id": 123,
                      "name": "ParameterList",
                      "src": "1746:20:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "balance",
                            "scope": 127,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 124,
                              "name": "ElementaryTypeName",
                              "src": "1792:4:0"
                            }
                          ],
                          "id": 125,
                          "name": "VariableDeclaration",
                          "src": "1792:12:0"
                        }
                      ],
                      "id": 126,
                      "name": "ParameterList",
                      "src": "1791:14:0"
                    }
                  ],
                  "id": 127,
                  "name": "FunctionDefinition",
                  "src": "1728:78:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": true,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 136,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 128,
                              "name": "ElementaryTypeName",
                              "src": "1831:7:0"
                            }
                          ],
                          "id": 129,
                          "name": "VariableDeclaration",
                          "src": "1831:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 136,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 130,
                              "name": "ElementaryTypeName",
                              "src": "1851:7:0"
                            }
                          ],
                          "id": 131,
                          "name": "VariableDeclaration",
                          "src": "1851:15:0"
                        }
                      ],
                      "id": 132,
                      "name": "ParameterList",
                      "src": "1830:37:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "remaining",
                            "scope": 136,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 133,
                              "name": "ElementaryTypeName",
                              "src": "1893:4:0"
                            }
                          ],
                          "id": 134,
                          "name": "VariableDeclaration",
                          "src": "1893:14:0"
                        }
                      ],
                      "id": 135,
                      "name": "ParameterList",
                      "src": "1892:16:0"
                    }
                  ],
                  "id": 136,
                  "name": "FunctionDefinition",
                  "src": "1812:97:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transfer",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 145,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 137,
                              "name": "ElementaryTypeName",
                              "src": "1933:7:0"
                            }
                          ],
                          "id": 138,
                          "name": "VariableDeclaration",
                          "src": "1933:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 145,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 139,
                              "name": "ElementaryTypeName",
                              "src": "1945:4:0"
                            }
                          ],
                          "id": 140,
                          "name": "VariableDeclaration",
                          "src": "1945:11:0"
                        }
                      ],
                      "id": 141,
                      "name": "ParameterList",
                      "src": "1932:25:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 145,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 142,
                              "name": "ElementaryTypeName",
                              "src": "1974:4:0"
                            }
                          ],
                          "id": 143,
                          "name": "VariableDeclaration",
                          "src": "1974:12:0"
                        }
                      ],
                      "id": 144,
                      "name": "ParameterList",
                      "src": "1973:14:0"
                    }
                  ],
                  "id": 145,
                  "name": "FunctionDefinition",
                  "src": "1915:73:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approve",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 154,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 146,
                              "name": "ElementaryTypeName",
                              "src": "2011:7:0"
                            }
                          ],
                          "id": 147,
                          "name": "VariableDeclaration",
                          "src": "2011:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 154,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 148,
                              "name": "ElementaryTypeName",
                              "src": "2028:4:0"
                            }
                          ],
                          "id": 149,
                          "name": "VariableDeclaration",
                          "src": "2028:11:0"
                        }
                      ],
                      "id": 150,
                      "name": "ParameterList",
                      "src": "2010:30:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 154,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 151,
                              "name": "ElementaryTypeName",
                              "src": "2057:4:0"
                            }
                          ],
                          "id": 152,
                          "name": "VariableDeclaration",
                          "src": "2057:12:0"
                        }
                      ],
                      "id": 153,
                      "name": "ParameterList",
                      "src": "2056:14:0"
                    }
                  ],
                  "id": 154,
                  "name": "FunctionDefinition",
                  "src": "1994:77:0"
                },
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 182,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 155,
                              "name": "ElementaryTypeName",
                              "src": "2099:7:0"
                            }
                          ],
                          "id": 156,
                          "name": "VariableDeclaration",
                          "src": "2099:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 157,
                              "name": "ElementaryTypeName",
                              "src": "2113:7:0"
                            }
                          ],
                          "id": 158,
                          "name": "VariableDeclaration",
                          "src": "2113:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 159,
                              "name": "ElementaryTypeName",
                              "src": "2125:4:0"
                            }
                          ],
                          "id": 160,
                          "name": "VariableDeclaration",
                          "src": "2125:11:0"
                        }
                      ],
                      "id": 161,
                      "name": "ParameterList",
                      "src": "2098:39:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 165,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 162,
                              "name": "ElementaryTypeName",
                              "src": "2154:4:0"
                            }
                          ],
                          "id": 163,
                          "name": "VariableDeclaration",
                          "src": "2154:12:0"
                        }
                      ],
                      "id": 164,
                      "name": "ParameterList",
                      "src": "2153:14:0"
                    }
                  ],
                  "id": 165,
                  "name": "FunctionDefinition",
                  "src": "2077:91:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Transfer"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "from",
                            "scope": 173,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 166,
                              "name": "ElementaryTypeName",
                              "src": "2190:7:0"
                            }
                          ],
                          "id": 167,
                          "name": "VariableDeclaration",
                          "src": "2190:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "to",
                            "scope": 173,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 168,
                              "name": "ElementaryTypeName",
                              "src": "2212:7:0"
                            }
                          ],
                          "id": 169,
                          "name": "VariableDeclaration",
                          "src": "2212:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "tokens",
                            "scope": 173,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 170,
                              "name": "ElementaryTypeName",
                              "src": "2232:4:0"
                            }
                          ],
                          "id": 171,
                          "name": "VariableDeclaration",
                          "src": "2232:11:0"
                        }
                      ],
                      "id": 172,
                      "name": "ParameterList",
                      "src": "2189:55:0"
                    }
                  ],
                  "id": 173,
                  "name": "EventDefinition",
                  "src": "2175:70:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Approval"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "tokenOwner",
                            "scope": 181,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 174,
                              "name": "ElementaryTypeName",
                              "src": "2266:7:0"
                            }
                          ],
                          "id": 175,
                          "name": "VariableDeclaration",
                          "src": "2266:26:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "spender",
                            "scope": 181,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 176,
                              "name": "ElementaryTypeName",
                              "src": "2294:7:0"
                            }
                          ],
                          "id": 177,
                          "name": "VariableDeclaration",
                          "src": "2294:23:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "tokens",
                            "scope": 181,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 178,
                              "name": "ElementaryTypeName",
                              "src": "2319:4:0"
                            }
                          ],
                          "id": 179,
                          "name": "VariableDeclaration",
                          "src": "2319:11:0"
                        }
                      ],
                      "id": 180,
                      "name": "ParameterList",
                      "src": "2265:66:0"
                    }
                  ],
                  "id": 181,
                  "name": "EventDefinition",
                  "src": "2251:81:0"
                }
              ],
              "id": 182,
              "name": "ContractDefinition",
              "src": "1637:698:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": false,
                "linearizedBaseContracts": [
                  194
                ],
                "name": "ApproveAndCallFallBack",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "body": null,
                    "constant": false,
                    "implemented": false,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "receiveApproval",
                    "payable": false,
                    "scope": 194,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 183,
                              "name": "ElementaryTypeName",
                              "src": "2674:7:0"
                            }
                          ],
                          "id": 184,
                          "name": "VariableDeclaration",
                          "src": "2674:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 185,
                              "name": "ElementaryTypeName",
                              "src": "2688:7:0"
                            }
                          ],
                          "id": 186,
                          "name": "VariableDeclaration",
                          "src": "2688:14:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "token",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 187,
                              "name": "ElementaryTypeName",
                              "src": "2704:7:0"
                            }
                          ],
                          "id": 188,
                          "name": "VariableDeclaration",
                          "src": "2704:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "data",
                            "scope": 193,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes memory",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes",
                                "type": "bytes storage pointer"
                              },
                              "id": 189,
                              "name": "ElementaryTypeName",
                              "src": "2719:5:0"
                            }
                          ],
                          "id": 190,
                          "name": "VariableDeclaration",
                          "src": "2719:10:0"
                        }
                      ],
                      "id": 191,
                      "name": "ParameterList",
                      "src": "2673:57:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 192,
                      "name": "ParameterList",
                      "src": "2737:0:0"
                    }
                  ],
                  "id": 193,
                  "name": "FunctionDefinition",
                  "src": "2649:89:0"
                }
              ],
              "id": 194,
              "name": "ContractDefinition",
              "src": "2610:131:0"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  263
                ],
                "name": "Owned",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "constant": false,
                    "name": "owner",
                    "scope": 263,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 195,
                      "name": "ElementaryTypeName",
                      "src": "2948:7:0"
                    }
                  ],
                  "id": 196,
                  "name": "VariableDeclaration",
                  "src": "2948:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "newOwner",
                    "scope": 263,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 197,
                      "name": "ElementaryTypeName",
                      "src": "2975:7:0"
                    }
                  ],
                  "id": 198,
                  "name": "VariableDeclaration",
                  "src": "2975:23:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "OwnershipTransferred"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "_from",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 199,
                              "name": "ElementaryTypeName",
                              "src": "3033:7:0"
                            }
                          ],
                          "id": 200,
                          "name": "VariableDeclaration",
                          "src": "3033:21:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "_to",
                            "scope": 204,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 201,
                              "name": "ElementaryTypeName",
                              "src": "3056:7:0"
                            }
                          ],
                          "id": 202,
                          "name": "VariableDeclaration",
                          "src": "3056:19:0"
                        }
                      ],
                      "id": 203,
                      "name": "ParameterList",
                      "src": "3032:44:0"
                    }
                  ],
                  "id": 204,
                  "name": "EventDefinition",
                  "src": "3006:71:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": true,
                    "modifiers": [
                      null
                    ],
                    "name": "Owned",
                    "payable": false,
                    "scope": 263,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 205,
                      "name": "ParameterList",
                      "src": "3098:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 206,
                      "name": "ParameterList",
                      "src": "3108:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 207,
                                  "name": "Identifier",
                                  "src": "3119:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 208,
                                      "name": "Identifier",
                                      "src": "3127:3:0"
                                    }
                                  ],
                                  "id": 209,
                                  "name": "MemberAccess",
                                  "src": "3127:10:0"
                                }
                              ],
                              "id": 210,
                              "name": "Assignment",
                              "src": "3119:18:0"
                            }
                          ],
                          "id": 211,
                          "name": "ExpressionStatement",
                          "src": "3119:18:0"
                        }
                      ],
                      "id": 212,
                      "name": "Block",
                      "src": "3108:37:0"
                    }
                  ],
                  "id": 213,
                  "name": "FunctionDefinition",
                  "src": "3084:61:0"
                },
                {
                  "attributes": {
                    "name": "onlyOwner",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 214,
                      "name": "ParameterList",
                      "src": "3171:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 215,
                                  "name": "Identifier",
                                  "src": "3182:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 216,
                                          "name": "Identifier",
                                          "src": "3190:3:0"
                                        }
                                      ],
                                      "id": 217,
                                      "name": "MemberAccess",
                                      "src": "3190:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 196,
                                        "type": "address",
                                        "value": "owner"
                                      },
                                      "id": 218,
                                      "name": "Identifier",
                                      "src": "3204:5:0"
                                    }
                                  ],
                                  "id": 219,
                                  "name": "BinaryOperation",
                                  "src": "3190:19:0"
                                }
                              ],
                              "id": 220,
                              "name": "FunctionCall",
                              "src": "3182:28:0"
                            }
                          ],
                          "id": 221,
                          "name": "ExpressionStatement",
                          "src": "3182:28:0"
                        },
                        {
                          "id": 222,
                          "name": "PlaceholderStatement",
                          "src": "3221:1:0"
                        }
                      ],
                      "id": 223,
                      "name": "Block",
                      "src": "3171:59:0"
                    }
                  ],
                  "id": 224,
                  "name": "ModifierDefinition",
                  "src": "3152:78:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferOwnership",
                    "payable": false,
                    "scope": 263,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "_newOwner",
                            "scope": 236,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 225,
                              "name": "ElementaryTypeName",
                              "src": "3264:7:0"
                            }
                          ],
                          "id": 226,
                          "name": "VariableDeclaration",
                          "src": "3264:17:0"
                        }
                      ],
                      "id": 227,
                      "name": "ParameterList",
                      "src": "3263:19:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 230,
                      "name": "ParameterList",
                      "src": "3300:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 224,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 228,
                          "name": "Identifier",
                          "src": "3290:9:0"
                        }
                      ],
                      "id": 229,
                      "name": "ModifierInvocation",
                      "src": "3290:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 231,
                                  "name": "Identifier",
                                  "src": "3311:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 226,
                                    "type": "address",
                                    "value": "_newOwner"
                                  },
                                  "id": 232,
                                  "name": "Identifier",
                                  "src": "3322:9:0"
                                }
                              ],
                              "id": 233,
                              "name": "Assignment",
                              "src": "3311:20:0"
                            }
                          ],
                          "id": 234,
                          "name": "ExpressionStatement",
                          "src": "3311:20:0"
                        }
                      ],
                      "id": 235,
                      "name": "Block",
                      "src": "3300:39:0"
                    }
                  ],
                  "id": 236,
                  "name": "FunctionDefinition",
                  "src": "3237:102:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "acceptOwnership",
                    "payable": false,
                    "scope": 263,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 237,
                      "name": "ParameterList",
                      "src": "3369:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 238,
                      "name": "ParameterList",
                      "src": "3379:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 239,
                                  "name": "Identifier",
                                  "src": "3390:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 240,
                                          "name": "Identifier",
                                          "src": "3398:3:0"
                                        }
                                      ],
                                      "id": 241,
                                      "name": "MemberAccess",
                                      "src": "3398:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 198,
                                        "type": "address",
                                        "value": "newOwner"
                                      },
                                      "id": 242,
                                      "name": "Identifier",
                                      "src": "3412:8:0"
                                    }
                                  ],
                                  "id": 243,
                                  "name": "BinaryOperation",
                                  "src": "3398:22:0"
                                }
                              ],
                              "id": 244,
                              "name": "FunctionCall",
                              "src": "3390:31:0"
                            }
                          ],
                          "id": 245,
                          "name": "ExpressionStatement",
                          "src": "3390:31:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 204,
                                    "type": "function (address,address)",
                                    "value": "OwnershipTransferred"
                                  },
                                  "id": 246,
                                  "name": "Identifier",
                                  "src": "3432:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 247,
                                  "name": "Identifier",
                                  "src": "3453:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 248,
                                  "name": "Identifier",
                                  "src": "3460:8:0"
                                }
                              ],
                              "id": 249,
                              "name": "FunctionCall",
                              "src": "3432:37:0"
                            }
                          ],
                          "id": 250,
                          "name": "ExpressionStatement",
                          "src": "3432:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 251,
                                  "name": "Identifier",
                                  "src": "3480:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 252,
                                  "name": "Identifier",
                                  "src": "3488:8:0"
                                }
                              ],
                              "id": 253,
                              "name": "Assignment",
                              "src": "3480:16:0"
                            }
                          ],
                          "id": 254,
                          "name": "ExpressionStatement",
                          "src": "3480:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 198,
                                    "type": "address",
                                    "value": "newOwner"
                                  },
                                  "id": 255,
                                  "name": "Identifier",
                                  "src": "3507:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "address",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(address)",
                                        "value": "address"
                                      },
                                      "id": 256,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "3518:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "30",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 0",
                                        "value": "0"
                                      },
                                      "id": 257,
                                      "name": "Literal",
                                      "src": "3526:1:0"
                                    }
                                  ],
                                  "id": 258,
                                  "name": "FunctionCall",
                                  "src": "3518:10:0"
                                }
                              ],
                              "id": 259,
                              "name": "Assignment",
                              "src": "3507:21:0"
                            }
                          ],
                          "id": 260,
                          "name": "ExpressionStatement",
                          "src": "3507:21:0"
                        }
                      ],
                      "id": 261,
                      "name": "Block",
                      "src": "3379:157:0"
                    }
                  ],
                  "id": 262,
                  "name": "FunctionDefinition",
                  "src": "3345:191:0"
                }
              ],
              "id": 263,
              "name": "ContractDefinition",
              "src": "2926:613:0"
            },
            {
              "attributes": {
                "contractDependencies": [
                  182,
                  263
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  1113,
                  263,
                  182
                ],
                "name": "_0xBitcoinToken",
                "scope": 1114
              },
              "children": [
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ERC20Interface",
                        "referencedDeclaration": 182,
                        "type": "contract ERC20Interface"
                      },
                      "id": 264,
                      "name": "UserDefinedTypeName",
                      "src": "3829:14:0"
                    }
                  ],
                  "id": 265,
                  "name": "InheritanceSpecifier",
                  "src": "3829:14:0"
                },
                {
                  "attributes": {
                    "arguments": [
                      null
                    ]
                  },
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "Owned",
                        "referencedDeclaration": 263,
                        "type": "contract Owned"
                      },
                      "id": 266,
                      "name": "UserDefinedTypeName",
                      "src": "3845:5:0"
                    }
                  ],
                  "id": 267,
                  "name": "InheritanceSpecifier",
                  "src": "3845:5:0"
                },
                {
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "SafeMath",
                        "referencedDeclaration": 96,
                        "type": "library SafeMath"
                      },
                      "id": 268,
                      "name": "UserDefinedTypeName",
                      "src": "3864:8:0"
                    },
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 269,
                      "name": "ElementaryTypeName",
                      "src": "3877:4:0"
                    }
                  ],
                  "id": 270,
                  "name": "UsingForDirective",
                  "src": "3858:24:0"
                },
                {
                  "children": [
                    {
                      "attributes": {
                        "contractScope": null,
                        "name": "ExtendedMath",
                        "referencedDeclaration": 115,
                        "type": "library ExtendedMath"
                      },
                      "id": 271,
                      "name": "UserDefinedTypeName",
                      "src": "3893:12:0"
                    },
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 272,
                      "name": "ElementaryTypeName",
                      "src": "3910:4:0"
                    }
                  ],
                  "id": 273,
                  "name": "UsingForDirective",
                  "src": "3887:28:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "symbol",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 274,
                      "name": "ElementaryTypeName",
                      "src": "3922:6:0"
                    }
                  ],
                  "id": 275,
                  "name": "VariableDeclaration",
                  "src": "3922:20:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "name",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 276,
                      "name": "ElementaryTypeName",
                      "src": "3949:6:0"
                    }
                  ],
                  "id": 277,
                  "name": "VariableDeclaration",
                  "src": "3949:19:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "decimals",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint8",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint8",
                        "type": "uint8"
                      },
                      "id": 278,
                      "name": "ElementaryTypeName",
                      "src": "3975:5:0"
                    }
                  ],
                  "id": 279,
                  "name": "VariableDeclaration",
                  "src": "3975:21:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_totalSupply",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 280,
                      "name": "ElementaryTypeName",
                      "src": "4003:4:0"
                    }
                  ],
                  "id": 281,
                  "name": "VariableDeclaration",
                  "src": "4003:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "latestDifficultyPeriodStarted",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 282,
                      "name": "ElementaryTypeName",
                      "src": "4037:4:0"
                    }
                  ],
                  "id": 283,
                  "name": "VariableDeclaration",
                  "src": "4037:41:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "epochCount",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 284,
                      "name": "ElementaryTypeName",
                      "src": "4087:4:0"
                    }
                  ],
                  "id": 285,
                  "name": "VariableDeclaration",
                  "src": "4087:22:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_BLOCKS_PER_READJUSTMENT",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 286,
                      "name": "ElementaryTypeName",
                      "src": "4143:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "31303234",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "number",
                        "type": "int_const 1024",
                        "value": "1024"
                      },
                      "id": 287,
                      "name": "Literal",
                      "src": "4182:4:0"
                    }
                  ],
                  "id": 288,
                  "name": "VariableDeclaration",
                  "src": "4143:43:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_MINIMUM_TARGET",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 289,
                      "name": "ElementaryTypeName",
                      "src": "4216:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "operator": "**",
                        "type": "int_const 65536"
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "32",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 2",
                            "value": "2"
                          },
                          "id": 290,
                          "name": "Literal",
                          "src": "4247:1:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "3136",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 16",
                            "value": "16"
                          },
                          "id": 291,
                          "name": "Literal",
                          "src": "4250:2:0"
                        }
                      ],
                      "id": 292,
                      "name": "BinaryOperation",
                      "src": "4247:5:0"
                    }
                  ],
                  "id": 293,
                  "name": "VariableDeclaration",
                  "src": "4216:36:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "_MAXIMUM_TARGET",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 294,
                      "name": "ElementaryTypeName",
                      "src": "4393:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                          "typeString": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "operator": "**",
                        "type": "int_const 27606985387162255149739023449108101809804435888681546220650096895197184"
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "32",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 2",
                            "value": "2"
                          },
                          "id": 295,
                          "name": "Literal",
                          "src": "4424:1:0"
                        },
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "hexvalue": "323334",
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "subdenomination": null,
                            "token": "number",
                            "type": "int_const 234",
                            "value": "234"
                          },
                          "id": 296,
                          "name": "Literal",
                          "src": "4427:3:0"
                        }
                      ],
                      "id": 297,
                      "name": "BinaryOperation",
                      "src": "4424:6:0"
                    }
                  ],
                  "id": 298,
                  "name": "VariableDeclaration",
                  "src": "4393:37:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "miningTarget",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 299,
                      "name": "ElementaryTypeName",
                      "src": "4438:4:0"
                    }
                  ],
                  "id": 300,
                  "name": "VariableDeclaration",
                  "src": "4438:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "challengeNumber",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "bytes32",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "bytes32",
                        "type": "bytes32"
                      },
                      "id": 301,
                      "name": "ElementaryTypeName",
                      "src": "4469:7:0"
                    }
                  ],
                  "id": 302,
                  "name": "VariableDeclaration",
                  "src": "4469:30:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "rewardEra",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 303,
                      "name": "ElementaryTypeName",
                      "src": "4559:4:0"
                    }
                  ],
                  "id": 304,
                  "name": "VariableDeclaration",
                  "src": "4559:21:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "maxSupplyForEra",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 305,
                      "name": "ElementaryTypeName",
                      "src": "4586:4:0"
                    }
                  ],
                  "id": 306,
                  "name": "VariableDeclaration",
                  "src": "4586:27:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "lastRewardTo",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "address",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "address",
                        "type": "address"
                      },
                      "id": 307,
                      "name": "ElementaryTypeName",
                      "src": "4621:7:0"
                    }
                  ],
                  "id": 308,
                  "name": "VariableDeclaration",
                  "src": "4621:27:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "lastRewardAmount",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 309,
                      "name": "ElementaryTypeName",
                      "src": "4654:4:0"
                    }
                  ],
                  "id": 310,
                  "name": "VariableDeclaration",
                  "src": "4654:28:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "lastRewardEthBlockNumber",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 311,
                      "name": "ElementaryTypeName",
                      "src": "4688:4:0"
                    }
                  ],
                  "id": 312,
                  "name": "VariableDeclaration",
                  "src": "4688:36:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "locked",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "bool",
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "bool",
                        "type": "bool"
                      },
                      "id": 313,
                      "name": "ElementaryTypeName",
                      "src": "4731:4:0"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "66616c7365",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "bool",
                        "type": "bool",
                        "value": "false"
                      },
                      "id": 314,
                      "name": "Literal",
                      "src": "4745:5:0"
                    }
                  ],
                  "id": 315,
                  "name": "VariableDeclaration",
                  "src": "4731:19:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "solutionForChallenge",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(bytes32 => bytes32)",
                    "value": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(bytes32 => bytes32)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "bytes32",
                            "type": "bytes32"
                          },
                          "id": 316,
                          "name": "ElementaryTypeName",
                          "src": "4765:7:0"
                        },
                        {
                          "attributes": {
                            "name": "bytes32",
                            "type": "bytes32"
                          },
                          "id": 317,
                          "name": "ElementaryTypeName",
                          "src": "4776:7:0"
                        }
                      ],
                      "id": 318,
                      "name": "Mapping",
                      "src": "4757:27:0"
                    }
                  ],
                  "id": 319,
                  "name": "VariableDeclaration",
                  "src": "4757:48:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "tokensMinted",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint256",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint",
                        "type": "uint256"
                      },
                      "id": 320,
                      "name": "ElementaryTypeName",
                      "src": "4812:4:0"
                    }
                  ],
                  "id": 321,
                  "name": "VariableDeclaration",
                  "src": "4812:24:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "balances",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => uint256)",
                    "value": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => uint256)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 322,
                          "name": "ElementaryTypeName",
                          "src": "4851:7:0"
                        },
                        {
                          "attributes": {
                            "name": "uint",
                            "type": "uint256"
                          },
                          "id": 323,
                          "name": "ElementaryTypeName",
                          "src": "4862:4:0"
                        }
                      ],
                      "id": 324,
                      "name": "Mapping",
                      "src": "4843:24:0"
                    }
                  ],
                  "id": 325,
                  "name": "VariableDeclaration",
                  "src": "4843:33:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "allowed",
                    "scope": 1113,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => mapping(address => uint256))",
                    "value": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => mapping(address => uint256))"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 326,
                          "name": "ElementaryTypeName",
                          "src": "4892:7:0"
                        },
                        {
                          "attributes": {
                            "type": "mapping(address => uint256)"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 327,
                              "name": "ElementaryTypeName",
                              "src": "4911:7:0"
                            },
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 328,
                              "name": "ElementaryTypeName",
                              "src": "4922:4:0"
                            }
                          ],
                          "id": 329,
                          "name": "Mapping",
                          "src": "4903:24:0"
                        }
                      ],
                      "id": 330,
                      "name": "Mapping",
                      "src": "4884:44:0"
                    }
                  ],
                  "id": 331,
                  "name": "VariableDeclaration",
                  "src": "4884:52:0"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Mint"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "from",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 332,
                              "name": "ElementaryTypeName",
                              "src": "4955:7:0"
                            }
                          ],
                          "id": 333,
                          "name": "VariableDeclaration",
                          "src": "4955:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "reward_amount",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 334,
                              "name": "ElementaryTypeName",
                              "src": "4977:4:0"
                            }
                          ],
                          "id": 335,
                          "name": "VariableDeclaration",
                          "src": "4977:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "epochCount",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 336,
                              "name": "ElementaryTypeName",
                              "src": "4997:4:0"
                            }
                          ],
                          "id": 337,
                          "name": "VariableDeclaration",
                          "src": "4997:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "newChallengeNumber",
                            "scope": 341,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 338,
                              "name": "ElementaryTypeName",
                              "src": "5014:7:0"
                            }
                          ],
                          "id": 339,
                          "name": "VariableDeclaration",
                          "src": "5014:26:0"
                        }
                      ],
                      "id": 340,
                      "name": "ParameterList",
                      "src": "4954:87:0"
                    }
                  ],
                  "id": 341,
                  "name": "EventDefinition",
                  "src": "4944:98:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": true,
                    "name": "_0xBitcoinToken",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 342,
                      "name": "ParameterList",
                      "src": "5254:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 345,
                      "name": "ParameterList",
                      "src": "5273:0:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 224,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 343,
                          "name": "Identifier",
                          "src": "5264:9:0"
                        }
                      ],
                      "id": 344,
                      "name": "ModifierInvocation",
                      "src": "5264:9:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "string storage ref"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 275,
                                    "type": "string storage ref",
                                    "value": "symbol"
                                  },
                                  "id": 346,
                                  "name": "Identifier",
                                  "src": "5286:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3078425443",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "string",
                                    "type": "literal_string \"0xBTC\"",
                                    "value": "0xBTC"
                                  },
                                  "id": 347,
                                  "name": "Literal",
                                  "src": "5295:7:0"
                                }
                              ],
                              "id": 348,
                              "name": "Assignment",
                              "src": "5286:16:0"
                            }
                          ],
                          "id": 349,
                          "name": "ExpressionStatement",
                          "src": "5286:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "string storage ref"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 277,
                                    "type": "string storage ref",
                                    "value": "name"
                                  },
                                  "id": 350,
                                  "name": "Identifier",
                                  "src": "5313:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3078426974636f696e20546f6b656e",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "string",
                                    "type": "literal_string \"0xBitcoin Token\"",
                                    "value": "0xBitcoin Token"
                                  },
                                  "id": 351,
                                  "name": "Literal",
                                  "src": "5320:17:0"
                                }
                              ],
                              "id": 352,
                              "name": "Assignment",
                              "src": "5313:24:0"
                            }
                          ],
                          "id": 353,
                          "name": "ExpressionStatement",
                          "src": "5313:24:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint8"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 279,
                                    "type": "uint8",
                                    "value": "decimals"
                                  },
                                  "id": 354,
                                  "name": "Identifier",
                                  "src": "5348:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "38",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 8",
                                    "value": "8"
                                  },
                                  "id": 355,
                                  "name": "Literal",
                                  "src": "5359:1:0"
                                }
                              ],
                              "id": 356,
                              "name": "Assignment",
                              "src": "5348:12:0"
                            }
                          ],
                          "id": 357,
                          "name": "ExpressionStatement",
                          "src": "5348:12:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 281,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 358,
                                  "name": "Identifier",
                                  "src": "5371:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "*",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "3231303030303030",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 21000000",
                                        "value": "21000000"
                                      },
                                      "id": 359,
                                      "name": "Literal",
                                      "src": "5386:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "**",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "3130",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 10",
                                            "value": "10"
                                          },
                                          "id": 360,
                                          "name": "Literal",
                                          "src": "5397:2:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": true
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "type": "type(uint256)",
                                                "value": "uint"
                                              },
                                              "id": 361,
                                              "name": "ElementaryTypeNameExpression",
                                              "src": "5401:4:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 279,
                                                "type": "uint8",
                                                "value": "decimals"
                                              },
                                              "id": 362,
                                              "name": "Identifier",
                                              "src": "5406:8:0"
                                            }
                                          ],
                                          "id": 363,
                                          "name": "FunctionCall",
                                          "src": "5401:14:0"
                                        }
                                      ],
                                      "id": 364,
                                      "name": "BinaryOperation",
                                      "src": "5397:18:0"
                                    }
                                  ],
                                  "id": 365,
                                  "name": "BinaryOperation",
                                  "src": "5386:29:0"
                                }
                              ],
                              "id": 366,
                              "name": "Assignment",
                              "src": "5371:44:0"
                            }
                          ],
                          "id": 367,
                          "name": "ExpressionStatement",
                          "src": "5371:44:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 315,
                                "type": "bool",
                                "value": "locked"
                              },
                              "id": 368,
                              "name": "Identifier",
                              "src": "5429:6:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1373,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 369,
                                      "name": "Identifier",
                                      "src": "5437:6:0"
                                    }
                                  ],
                                  "id": 370,
                                  "name": "FunctionCall",
                                  "src": "5437:8:0"
                                }
                              ],
                              "id": 371,
                              "name": "ExpressionStatement",
                              "src": "5437:8:0"
                            }
                          ],
                          "id": 372,
                          "name": "IfStatement",
                          "src": "5426:19:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 315,
                                    "type": "bool",
                                    "value": "locked"
                                  },
                                  "id": 373,
                                  "name": "Identifier",
                                  "src": "5455:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "74727565",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "bool",
                                    "type": "bool",
                                    "value": "true"
                                  },
                                  "id": 374,
                                  "name": "Literal",
                                  "src": "5464:4:0"
                                }
                              ],
                              "id": 375,
                              "name": "Assignment",
                              "src": "5455:13:0"
                            }
                          ],
                          "id": 376,
                          "name": "ExpressionStatement",
                          "src": "5455:13:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 377,
                                  "name": "Identifier",
                                  "src": "5479:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 378,
                                  "name": "Literal",
                                  "src": "5494:1:0"
                                }
                              ],
                              "id": 379,
                              "name": "Assignment",
                              "src": "5479:16:0"
                            }
                          ],
                          "id": 380,
                          "name": "ExpressionStatement",
                          "src": "5479:16:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 304,
                                    "type": "uint256",
                                    "value": "rewardEra"
                                  },
                                  "id": 381,
                                  "name": "Identifier",
                                  "src": "5506:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 382,
                                  "name": "Literal",
                                  "src": "5518:1:0"
                                }
                              ],
                              "id": 383,
                              "name": "Assignment",
                              "src": "5506:13:0"
                            }
                          ],
                          "id": 384,
                          "name": "ExpressionStatement",
                          "src": "5506:13:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 306,
                                    "type": "uint256",
                                    "value": "maxSupplyForEra"
                                  },
                                  "id": 385,
                                  "name": "Identifier",
                                  "src": "5529:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "div",
                                        "referencedDeclaration": 95,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 281,
                                            "type": "uint256",
                                            "value": "_totalSupply"
                                          },
                                          "id": 386,
                                          "name": "Identifier",
                                          "src": "5547:12:0"
                                        }
                                      ],
                                      "id": 387,
                                      "name": "MemberAccess",
                                      "src": "5547:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "32",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 2",
                                        "value": "2"
                                      },
                                      "id": 388,
                                      "name": "Literal",
                                      "src": "5564:1:0"
                                    }
                                  ],
                                  "id": 389,
                                  "name": "FunctionCall",
                                  "src": "5547:19:0"
                                }
                              ],
                              "id": 390,
                              "name": "Assignment",
                              "src": "5529:37:0"
                            }
                          ],
                          "id": 391,
                          "name": "ExpressionStatement",
                          "src": "5529:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 392,
                                  "name": "Identifier",
                                  "src": "5577:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 298,
                                    "type": "uint256",
                                    "value": "_MAXIMUM_TARGET"
                                  },
                                  "id": 393,
                                  "name": "Identifier",
                                  "src": "5592:15:0"
                                }
                              ],
                              "id": 394,
                              "name": "Assignment",
                              "src": "5577:30:0"
                            }
                          ],
                          "id": 395,
                          "name": "ExpressionStatement",
                          "src": "5577:30:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 283,
                                    "type": "uint256",
                                    "value": "latestDifficultyPeriodStarted"
                                  },
                                  "id": 396,
                                  "name": "Identifier",
                                  "src": "5618:29:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1361,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 397,
                                      "name": "Identifier",
                                      "src": "5650:5:0"
                                    }
                                  ],
                                  "id": 398,
                                  "name": "MemberAccess",
                                  "src": "5650:12:0"
                                }
                              ],
                              "id": 399,
                              "name": "Assignment",
                              "src": "5618:44:0"
                            }
                          ],
                          "id": 400,
                          "name": "ExpressionStatement",
                          "src": "5618:44:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 581,
                                    "type": "function ()",
                                    "value": "_startNewMiningEpoch"
                                  },
                                  "id": 401,
                                  "name": "Identifier",
                                  "src": "5673:20:0"
                                }
                              ],
                              "id": 402,
                              "name": "FunctionCall",
                              "src": "5673:22:0"
                            }
                          ],
                          "id": 403,
                          "name": "ExpressionStatement",
                          "src": "5673:22:0"
                        }
                      ],
                      "id": 404,
                      "name": "Block",
                      "src": "5273:592:0"
                    }
                  ],
                  "id": 405,
                  "name": "FunctionDefinition",
                  "src": "5230:635:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mint",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "nonce",
                            "scope": 517,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 406,
                              "name": "ElementaryTypeName",
                              "src": "5892:7:0"
                            }
                          ],
                          "id": 407,
                          "name": "VariableDeclaration",
                          "src": "5892:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_digest",
                            "scope": 517,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 408,
                              "name": "ElementaryTypeName",
                              "src": "5907:7:0"
                            }
                          ],
                          "id": 409,
                          "name": "VariableDeclaration",
                          "src": "5907:24:0"
                        }
                      ],
                      "id": 410,
                      "name": "ParameterList",
                      "src": "5891:41:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 517,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 411,
                              "name": "ElementaryTypeName",
                              "src": "5949:4:0"
                            }
                          ],
                          "id": 412,
                          "name": "VariableDeclaration",
                          "src": "5949:12:0"
                        }
                      ],
                      "id": 413,
                      "name": "ParameterList",
                      "src": "5948:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              415
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "digest",
                                "scope": 517,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 414,
                                  "name": "ElementaryTypeName",
                                  "src": "6134:7:0"
                                }
                              ],
                              "id": 415,
                              "name": "VariableDeclaration",
                              "src": "6134:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bytes32",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1363,
                                    "type": "function () pure returns (bytes32)",
                                    "value": "keccak256"
                                  },
                                  "id": 416,
                                  "name": "Identifier",
                                  "src": "6152:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 417,
                                  "name": "Identifier",
                                  "src": "6162:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 418,
                                      "name": "Identifier",
                                      "src": "6179:3:0"
                                    }
                                  ],
                                  "id": 419,
                                  "name": "MemberAccess",
                                  "src": "6179:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 407,
                                    "type": "uint256",
                                    "value": "nonce"
                                  },
                                  "id": 420,
                                  "name": "Identifier",
                                  "src": "6191:5:0"
                                }
                              ],
                              "id": 421,
                              "name": "FunctionCall",
                              "src": "6152:46:0"
                            }
                          ],
                          "id": 422,
                          "name": "VariableDeclarationStatement",
                          "src": "6134:64:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "!=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 415,
                                    "type": "bytes32",
                                    "value": "digest"
                                  },
                                  "id": 423,
                                  "name": "Identifier",
                                  "src": "6276:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 409,
                                    "type": "bytes32",
                                    "value": "challenge_digest"
                                  },
                                  "id": 424,
                                  "name": "Identifier",
                                  "src": "6286:16:0"
                                }
                              ],
                              "id": 425,
                              "name": "BinaryOperation",
                              "src": "6276:26:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1373,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 426,
                                      "name": "Identifier",
                                      "src": "6304:6:0"
                                    }
                                  ],
                                  "id": 427,
                                  "name": "FunctionCall",
                                  "src": "6304:8:0"
                                }
                              ],
                              "id": 428,
                              "name": "ExpressionStatement",
                              "src": "6304:8:0"
                            }
                          ],
                          "id": 429,
                          "name": "IfStatement",
                          "src": "6272:40:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(uint256)",
                                        "value": "uint256"
                                      },
                                      "id": 430,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "6387:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 415,
                                        "type": "bytes32",
                                        "value": "digest"
                                      },
                                      "id": 431,
                                      "name": "Identifier",
                                      "src": "6395:6:0"
                                    }
                                  ],
                                  "id": 432,
                                  "name": "FunctionCall",
                                  "src": "6387:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 433,
                                  "name": "Identifier",
                                  "src": "6405:12:0"
                                }
                              ],
                              "id": 434,
                              "name": "BinaryOperation",
                              "src": "6387:30:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1373,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 435,
                                      "name": "Identifier",
                                      "src": "6419:6:0"
                                    }
                                  ],
                                  "id": 436,
                                  "name": "FunctionCall",
                                  "src": "6419:8:0"
                                }
                              ],
                              "id": 437,
                              "name": "ExpressionStatement",
                              "src": "6419:8:0"
                            }
                          ],
                          "id": 438,
                          "name": "IfStatement",
                          "src": "6384:43:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              440
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "solution",
                                "scope": 517,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 439,
                                  "name": "ElementaryTypeName",
                                  "src": "6499:7:0"
                                }
                              ],
                              "id": 440,
                              "name": "VariableDeclaration",
                              "src": "6499:16:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "bytes32"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 319,
                                    "type": "mapping(bytes32 => bytes32)",
                                    "value": "solutionForChallenge"
                                  },
                                  "id": 441,
                                  "name": "Identifier",
                                  "src": "6518:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 442,
                                  "name": "Identifier",
                                  "src": "6539:15:0"
                                }
                              ],
                              "id": 443,
                              "name": "IndexAccess",
                              "src": "6518:37:0"
                            }
                          ],
                          "id": 444,
                          "name": "VariableDeclarationStatement",
                          "src": "6499:56:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bytes32"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "bytes32"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 319,
                                        "type": "mapping(bytes32 => bytes32)",
                                        "value": "solutionForChallenge"
                                      },
                                      "id": 445,
                                      "name": "Identifier",
                                      "src": "6570:20:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 302,
                                        "type": "bytes32",
                                        "value": "challengeNumber"
                                      },
                                      "id": 446,
                                      "name": "Identifier",
                                      "src": "6591:15:0"
                                    }
                                  ],
                                  "id": 447,
                                  "name": "IndexAccess",
                                  "src": "6570:37:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 415,
                                    "type": "bytes32",
                                    "value": "digest"
                                  },
                                  "id": 448,
                                  "name": "Identifier",
                                  "src": "6610:6:0"
                                }
                              ],
                              "id": 449,
                              "name": "Assignment",
                              "src": "6570:46:0"
                            }
                          ],
                          "id": 450,
                          "name": "ExpressionStatement",
                          "src": "6570:46:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "!=",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 440,
                                    "type": "bytes32",
                                    "value": "solution"
                                  },
                                  "id": 451,
                                  "name": "Identifier",
                                  "src": "6634:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "307830",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0x0"
                                  },
                                  "id": 452,
                                  "name": "Literal",
                                  "src": "6646:3:0"
                                }
                              ],
                              "id": 453,
                              "name": "BinaryOperation",
                              "src": "6634:15:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1373,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 454,
                                      "name": "Identifier",
                                      "src": "6651:6:0"
                                    }
                                  ],
                                  "id": 455,
                                  "name": "FunctionCall",
                                  "src": "6651:8:0"
                                }
                              ],
                              "id": 456,
                              "name": "ExpressionStatement",
                              "src": "6651:8:0"
                            }
                          ],
                          "id": 457,
                          "name": "IfStatement",
                          "src": "6631:28:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              459
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "reward_amount",
                                "scope": 517,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 458,
                                  "name": "ElementaryTypeName",
                                  "src": "6722:4:0"
                                }
                              ],
                              "id": 459,
                              "name": "VariableDeclaration",
                              "src": "6722:18:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 746,
                                    "type": "function () view returns (uint256)",
                                    "value": "getMiningReward"
                                  },
                                  "id": 460,
                                  "name": "Identifier",
                                  "src": "6743:15:0"
                                }
                              ],
                              "id": 461,
                              "name": "FunctionCall",
                              "src": "6743:17:0"
                            }
                          ],
                          "id": 462,
                          "name": "VariableDeclarationStatement",
                          "src": "6722:38:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 463,
                                      "name": "Identifier",
                                      "src": "6775:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 464,
                                          "name": "Identifier",
                                          "src": "6784:3:0"
                                        }
                                      ],
                                      "id": 465,
                                      "name": "MemberAccess",
                                      "src": "6784:10:0"
                                    }
                                  ],
                                  "id": 466,
                                  "name": "IndexAccess",
                                  "src": "6775:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 467,
                                              "name": "Identifier",
                                              "src": "6798:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1369,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 468,
                                                  "name": "Identifier",
                                                  "src": "6807:3:0"
                                                }
                                              ],
                                              "id": 469,
                                              "name": "MemberAccess",
                                              "src": "6807:10:0"
                                            }
                                          ],
                                          "id": 470,
                                          "name": "IndexAccess",
                                          "src": "6798:20:0"
                                        }
                                      ],
                                      "id": 471,
                                      "name": "MemberAccess",
                                      "src": "6798:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 459,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 472,
                                      "name": "Identifier",
                                      "src": "6823:13:0"
                                    }
                                  ],
                                  "id": 473,
                                  "name": "FunctionCall",
                                  "src": "6798:39:0"
                                }
                              ],
                              "id": 474,
                              "name": "Assignment",
                              "src": "6775:62:0"
                            }
                          ],
                          "id": 475,
                          "name": "ExpressionStatement",
                          "src": "6775:62:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 476,
                                  "name": "Identifier",
                                  "src": "6852:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 321,
                                            "type": "uint256",
                                            "value": "tokensMinted"
                                          },
                                          "id": 477,
                                          "name": "Identifier",
                                          "src": "6867:12:0"
                                        }
                                      ],
                                      "id": 478,
                                      "name": "MemberAccess",
                                      "src": "6867:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 459,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 479,
                                      "name": "Identifier",
                                      "src": "6884:13:0"
                                    }
                                  ],
                                  "id": 480,
                                  "name": "FunctionCall",
                                  "src": "6867:31:0"
                                }
                              ],
                              "id": 481,
                              "name": "Assignment",
                              "src": "6852:46:0"
                            }
                          ],
                          "id": 482,
                          "name": "ExpressionStatement",
                          "src": "6852:46:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1360,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 483,
                                  "name": "Identifier",
                                  "src": "6967:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 321,
                                        "type": "uint256",
                                        "value": "tokensMinted"
                                      },
                                      "id": 484,
                                      "name": "Identifier",
                                      "src": "6974:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 306,
                                        "type": "uint256",
                                        "value": "maxSupplyForEra"
                                      },
                                      "id": 485,
                                      "name": "Identifier",
                                      "src": "6990:15:0"
                                    }
                                  ],
                                  "id": 486,
                                  "name": "BinaryOperation",
                                  "src": "6974:31:0"
                                }
                              ],
                              "id": 487,
                              "name": "FunctionCall",
                              "src": "6967:39:0"
                            }
                          ],
                          "id": 488,
                          "name": "ExpressionStatement",
                          "src": "6967:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 308,
                                    "type": "address",
                                    "value": "lastRewardTo"
                                  },
                                  "id": 489,
                                  "name": "Identifier",
                                  "src": "7065:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 490,
                                      "name": "Identifier",
                                      "src": "7080:3:0"
                                    }
                                  ],
                                  "id": 491,
                                  "name": "MemberAccess",
                                  "src": "7080:10:0"
                                }
                              ],
                              "id": 492,
                              "name": "Assignment",
                              "src": "7065:25:0"
                            }
                          ],
                          "id": 493,
                          "name": "ExpressionStatement",
                          "src": "7065:25:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 310,
                                    "type": "uint256",
                                    "value": "lastRewardAmount"
                                  },
                                  "id": 494,
                                  "name": "Identifier",
                                  "src": "7104:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 459,
                                    "type": "uint256",
                                    "value": "reward_amount"
                                  },
                                  "id": 495,
                                  "name": "Identifier",
                                  "src": "7123:13:0"
                                }
                              ],
                              "id": 496,
                              "name": "Assignment",
                              "src": "7104:32:0"
                            }
                          ],
                          "id": 497,
                          "name": "ExpressionStatement",
                          "src": "7104:32:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 312,
                                    "type": "uint256",
                                    "value": "lastRewardEthBlockNumber"
                                  },
                                  "id": 498,
                                  "name": "Identifier",
                                  "src": "7150:24:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1361,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 499,
                                      "name": "Identifier",
                                      "src": "7177:5:0"
                                    }
                                  ],
                                  "id": 500,
                                  "name": "MemberAccess",
                                  "src": "7177:12:0"
                                }
                              ],
                              "id": 501,
                              "name": "Assignment",
                              "src": "7150:39:0"
                            }
                          ],
                          "id": 502,
                          "name": "ExpressionStatement",
                          "src": "7150:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 581,
                                    "type": "function ()",
                                    "value": "_startNewMiningEpoch"
                                  },
                                  "id": 503,
                                  "name": "Identifier",
                                  "src": "7206:20:0"
                                }
                              ],
                              "id": 504,
                              "name": "FunctionCall",
                              "src": "7206:22:0"
                            }
                          ],
                          "id": 505,
                          "name": "ExpressionStatement",
                          "src": "7206:22:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 341,
                                    "type": "function (address,uint256,uint256,bytes32)",
                                    "value": "Mint"
                                  },
                                  "id": 506,
                                  "name": "Identifier",
                                  "src": "7245:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 507,
                                      "name": "Identifier",
                                      "src": "7250:3:0"
                                    }
                                  ],
                                  "id": 508,
                                  "name": "MemberAccess",
                                  "src": "7250:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 459,
                                    "type": "uint256",
                                    "value": "reward_amount"
                                  },
                                  "id": 509,
                                  "name": "Identifier",
                                  "src": "7262:13:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 285,
                                    "type": "uint256",
                                    "value": "epochCount"
                                  },
                                  "id": 510,
                                  "name": "Identifier",
                                  "src": "7277:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 511,
                                  "name": "Identifier",
                                  "src": "7289:15:0"
                                }
                              ],
                              "id": 512,
                              "name": "FunctionCall",
                              "src": "7245:61:0"
                            }
                          ],
                          "id": 513,
                          "name": "ExpressionStatement",
                          "src": "7245:61:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 413
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 514,
                              "name": "Literal",
                              "src": "7327:4:0"
                            }
                          ],
                          "id": 515,
                          "name": "Return",
                          "src": "7320:11:0"
                        }
                      ],
                      "id": 516,
                      "name": "Block",
                      "src": "5963:1380:0"
                    }
                  ],
                  "id": 517,
                  "name": "FunctionDefinition",
                  "src": "5878:1465:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "_startNewMiningEpoch",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 518,
                      "name": "ParameterList",
                      "src": "7411:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 519,
                      "name": "ParameterList",
                      "src": "7423:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "&&",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "add",
                                            "referencedDeclaration": 23,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 321,
                                                "type": "uint256",
                                                "value": "tokensMinted"
                                              },
                                              "id": 520,
                                              "name": "Identifier",
                                              "src": "7711:12:0"
                                            }
                                          ],
                                          "id": 521,
                                          "name": "MemberAccess",
                                          "src": "7711:16:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              null
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  null
                                                ],
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 746,
                                                "type": "function () view returns (uint256)",
                                                "value": "getMiningReward"
                                              },
                                              "id": 522,
                                              "name": "Identifier",
                                              "src": "7728:15:0"
                                            }
                                          ],
                                          "id": 523,
                                          "name": "FunctionCall",
                                          "src": "7728:17:0"
                                        }
                                      ],
                                      "id": 524,
                                      "name": "FunctionCall",
                                      "src": "7711:35:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 306,
                                        "type": "uint256",
                                        "value": "maxSupplyForEra"
                                      },
                                      "id": 525,
                                      "name": "Identifier",
                                      "src": "7749:15:0"
                                    }
                                  ],
                                  "id": 526,
                                  "name": "BinaryOperation",
                                  "src": "7711:53:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 304,
                                        "type": "uint256",
                                        "value": "rewardEra"
                                      },
                                      "id": 527,
                                      "name": "Identifier",
                                      "src": "7768:9:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "3339",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 39",
                                        "value": "39"
                                      },
                                      "id": 528,
                                      "name": "Literal",
                                      "src": "7780:2:0"
                                    }
                                  ],
                                  "id": 529,
                                  "name": "BinaryOperation",
                                  "src": "7768:14:0"
                                }
                              ],
                              "id": 530,
                              "name": "BinaryOperation",
                              "src": "7711:71:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 304,
                                            "type": "uint256",
                                            "value": "rewardEra"
                                          },
                                          "id": 531,
                                          "name": "Identifier",
                                          "src": "7800:9:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "+",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 304,
                                                "type": "uint256",
                                                "value": "rewardEra"
                                              },
                                              "id": 532,
                                              "name": "Identifier",
                                              "src": "7812:9:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "31",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 1",
                                                "value": "1"
                                              },
                                              "id": 533,
                                              "name": "Literal",
                                              "src": "7824:1:0"
                                            }
                                          ],
                                          "id": 534,
                                          "name": "BinaryOperation",
                                          "src": "7812:13:0"
                                        }
                                      ],
                                      "id": 535,
                                      "name": "Assignment",
                                      "src": "7800:25:0"
                                    }
                                  ],
                                  "id": 536,
                                  "name": "ExpressionStatement",
                                  "src": "7800:25:0"
                                }
                              ],
                              "id": 537,
                              "name": "Block",
                              "src": "7790:44:0"
                            }
                          ],
                          "id": 538,
                          "name": "IfStatement",
                          "src": "7707:127:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 306,
                                    "type": "uint256",
                                    "value": "maxSupplyForEra"
                                  },
                                  "id": 539,
                                  "name": "Identifier",
                                  "src": "7977:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "-",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 281,
                                        "type": "uint256",
                                        "value": "_totalSupply"
                                      },
                                      "id": 540,
                                      "name": "Identifier",
                                      "src": "7995:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "div",
                                            "referencedDeclaration": 95,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 281,
                                                "type": "uint256",
                                                "value": "_totalSupply"
                                              },
                                              "id": 541,
                                              "name": "Identifier",
                                              "src": "8010:12:0"
                                            }
                                          ],
                                          "id": 542,
                                          "name": "MemberAccess",
                                          "src": "8010:16:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "**",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "32",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 2",
                                                "value": "2"
                                              },
                                              "id": 543,
                                              "name": "Literal",
                                              "src": "8028:1:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "operator": "+",
                                                    "type": "uint256"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 304,
                                                        "type": "uint256",
                                                        "value": "rewardEra"
                                                      },
                                                      "id": 544,
                                                      "name": "Identifier",
                                                      "src": "8032:9:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "31",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 1",
                                                        "value": "1"
                                                      },
                                                      "id": 545,
                                                      "name": "Literal",
                                                      "src": "8044:1:0"
                                                    }
                                                  ],
                                                  "id": 546,
                                                  "name": "BinaryOperation",
                                                  "src": "8032:13:0"
                                                }
                                              ],
                                              "id": 547,
                                              "name": "TupleExpression",
                                              "src": "8031:15:0"
                                            }
                                          ],
                                          "id": 548,
                                          "name": "BinaryOperation",
                                          "src": "8028:18:0"
                                        }
                                      ],
                                      "id": 549,
                                      "name": "FunctionCall",
                                      "src": "8010:37:0"
                                    }
                                  ],
                                  "id": 550,
                                  "name": "BinaryOperation",
                                  "src": "7995:52:0"
                                }
                              ],
                              "id": 551,
                              "name": "Assignment",
                              "src": "7977:70:0"
                            }
                          ],
                          "id": 552,
                          "name": "ExpressionStatement",
                          "src": "7977:70:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 285,
                                    "type": "uint256",
                                    "value": "epochCount"
                                  },
                                  "id": 553,
                                  "name": "Identifier",
                                  "src": "8056:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 285,
                                            "type": "uint256",
                                            "value": "epochCount"
                                          },
                                          "id": 554,
                                          "name": "Identifier",
                                          "src": "8069:10:0"
                                        }
                                      ],
                                      "id": 555,
                                      "name": "MemberAccess",
                                      "src": "8069:14:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "31",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 1",
                                        "value": "1"
                                      },
                                      "id": 556,
                                      "name": "Literal",
                                      "src": "8084:1:0"
                                    }
                                  ],
                                  "id": 557,
                                  "name": "FunctionCall",
                                  "src": "8069:17:0"
                                }
                              ],
                              "id": 558,
                              "name": "Assignment",
                              "src": "8056:30:0"
                            }
                          ],
                          "id": 559,
                          "name": "ExpressionStatement",
                          "src": "8056:30:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "==",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "%",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 285,
                                        "type": "uint256",
                                        "value": "epochCount"
                                      },
                                      "id": 560,
                                      "name": "Identifier",
                                      "src": "8172:10:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 288,
                                        "type": "uint256",
                                        "value": "_BLOCKS_PER_READJUSTMENT"
                                      },
                                      "id": 561,
                                      "name": "Identifier",
                                      "src": "8185:24:0"
                                    }
                                  ],
                                  "id": 562,
                                  "name": "BinaryOperation",
                                  "src": "8172:37:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "30",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 0",
                                    "value": "0"
                                  },
                                  "id": 563,
                                  "name": "Literal",
                                  "src": "8213:1:0"
                                }
                              ],
                              "id": 564,
                              "name": "BinaryOperation",
                              "src": "8172:42:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          null
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              null
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 699,
                                            "type": "function ()",
                                            "value": "_reAdjustDifficulty"
                                          },
                                          "id": 565,
                                          "name": "Identifier",
                                          "src": "8232:19:0"
                                        }
                                      ],
                                      "id": 566,
                                      "name": "FunctionCall",
                                      "src": "8232:21:0"
                                    }
                                  ],
                                  "id": 567,
                                  "name": "ExpressionStatement",
                                  "src": "8232:21:0"
                                }
                              ],
                              "id": 568,
                              "name": "Block",
                              "src": "8222:40:0"
                            }
                          ],
                          "id": 569,
                          "name": "IfStatement",
                          "src": "8169:93:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "bytes32"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 302,
                                    "type": "bytes32",
                                    "value": "challengeNumber"
                                  },
                                  "id": 570,
                                  "name": "Identifier",
                                  "src": "8469:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "bytes32",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "blockhash",
                                        "referencedDeclaration": null,
                                        "type": "function (uint256) view returns (bytes32)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1361,
                                            "type": "block",
                                            "value": "block"
                                          },
                                          "id": 571,
                                          "name": "Identifier",
                                          "src": "8487:5:0"
                                        }
                                      ],
                                      "id": 572,
                                      "name": "MemberAccess",
                                      "src": "8487:15:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "-",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "number",
                                            "referencedDeclaration": null,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1361,
                                                "type": "block",
                                                "value": "block"
                                              },
                                              "id": 573,
                                              "name": "Identifier",
                                              "src": "8503:5:0"
                                            }
                                          ],
                                          "id": 574,
                                          "name": "MemberAccess",
                                          "src": "8503:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "31",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 1",
                                            "value": "1"
                                          },
                                          "id": 575,
                                          "name": "Literal",
                                          "src": "8518:1:0"
                                        }
                                      ],
                                      "id": 576,
                                      "name": "BinaryOperation",
                                      "src": "8503:16:0"
                                    }
                                  ],
                                  "id": 577,
                                  "name": "FunctionCall",
                                  "src": "8487:33:0"
                                }
                              ],
                              "id": 578,
                              "name": "Assignment",
                              "src": "8469:51:0"
                            }
                          ],
                          "id": 579,
                          "name": "ExpressionStatement",
                          "src": "8469:51:0"
                        }
                      ],
                      "id": 580,
                      "name": "Block",
                      "src": "7423:1110:0"
                    }
                  ],
                  "id": 581,
                  "name": "FunctionDefinition",
                  "src": "7382:1151:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "_reAdjustDifficulty",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "internal"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 582,
                      "name": "ParameterList",
                      "src": "8785:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 583,
                      "name": "ParameterList",
                      "src": "8797:0:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              585
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "ethBlocksSinceLastDifficultyPeriod",
                                "scope": 699,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 584,
                                  "name": "ElementaryTypeName",
                                  "src": "8809:4:0"
                                }
                              ],
                              "id": 585,
                              "name": "VariableDeclaration",
                              "src": "8809:39:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1361,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 586,
                                      "name": "Identifier",
                                      "src": "8851:5:0"
                                    }
                                  ],
                                  "id": 587,
                                  "name": "MemberAccess",
                                  "src": "8851:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 283,
                                    "type": "uint256",
                                    "value": "latestDifficultyPeriodStarted"
                                  },
                                  "id": 588,
                                  "name": "Identifier",
                                  "src": "8866:29:0"
                                }
                              ],
                              "id": 589,
                              "name": "BinaryOperation",
                              "src": "8851:44:0"
                            }
                          ],
                          "id": 590,
                          "name": "VariableDeclarationStatement",
                          "src": "8809:86:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              592
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "epochsMined",
                                "scope": 699,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 591,
                                  "name": "ElementaryTypeName",
                                  "src": "9066:4:0"
                                }
                              ],
                              "id": 592,
                              "name": "VariableDeclaration",
                              "src": "9066:16:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 288,
                                "type": "uint256",
                                "value": "_BLOCKS_PER_READJUSTMENT"
                              },
                              "id": 593,
                              "name": "Identifier",
                              "src": "9085:24:0"
                            }
                          ],
                          "id": 594,
                          "name": "VariableDeclarationStatement",
                          "src": "9066:43:0"
                        },
                        {
                          "attributes": {
                            "assignments": [
                              596
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "targetEthBlocksPerDiffPeriod",
                                "scope": 699,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 595,
                                  "name": "ElementaryTypeName",
                                  "src": "9126:4:0"
                                }
                              ],
                              "id": 596,
                              "name": "VariableDeclaration",
                              "src": "9126:33:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "*",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 592,
                                    "type": "uint256",
                                    "value": "epochsMined"
                                  },
                                  "id": 597,
                                  "name": "Identifier",
                                  "src": "9162:11:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "hexvalue": "3630",
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "subdenomination": null,
                                    "token": "number",
                                    "type": "int_const 60",
                                    "value": "60"
                                  },
                                  "id": 598,
                                  "name": "Literal",
                                  "src": "9176:2:0"
                                }
                              ],
                              "id": 599,
                              "name": "BinaryOperation",
                              "src": "9162:16:0"
                            }
                          ],
                          "id": 600,
                          "name": "VariableDeclarationStatement",
                          "src": "9126:52:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "<",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 585,
                                    "type": "uint256",
                                    "value": "ethBlocksSinceLastDifficultyPeriod"
                                  },
                                  "id": 601,
                                  "name": "Identifier",
                                  "src": "9304:34:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 596,
                                    "type": "uint256",
                                    "value": "targetEthBlocksPerDiffPeriod"
                                  },
                                  "id": 602,
                                  "name": "Identifier",
                                  "src": "9341:28:0"
                                }
                              ],
                              "id": 603,
                              "name": "BinaryOperation",
                              "src": "9304:65:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "assignments": [
                                      605
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "excess_block_pct",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 604,
                                          "name": "ElementaryTypeName",
                                          "src": "9392:4:0"
                                        }
                                      ],
                                      "id": 605,
                                      "name": "VariableDeclaration",
                                      "src": "9392:21:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "div",
                                            "referencedDeclaration": 95,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "isStructConstructorCall": false,
                                                    "lValueRequested": false,
                                                    "names": [
                                                      null
                                                    ],
                                                    "type": "uint256",
                                                    "type_conversion": false
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          }
                                                        ],
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "member_name": "mul",
                                                        "referencedDeclaration": 73,
                                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "overloadedDeclarations": [
                                                              null
                                                            ],
                                                            "referencedDeclaration": 596,
                                                            "type": "uint256",
                                                            "value": "targetEthBlocksPerDiffPeriod"
                                                          },
                                                          "id": 606,
                                                          "name": "Identifier",
                                                          "src": "9417:28:0"
                                                        }
                                                      ],
                                                      "id": 607,
                                                      "name": "MemberAccess",
                                                      "src": "9417:32:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "313030",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 100",
                                                        "value": "100"
                                                      },
                                                      "id": 608,
                                                      "name": "Literal",
                                                      "src": "9450:3:0"
                                                    }
                                                  ],
                                                  "id": 609,
                                                  "name": "FunctionCall",
                                                  "src": "9417:37:0"
                                                }
                                              ],
                                              "id": 610,
                                              "name": "TupleExpression",
                                              "src": "9416:39:0"
                                            }
                                          ],
                                          "id": 611,
                                          "name": "MemberAccess",
                                          "src": "9416:43:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 585,
                                            "type": "uint256",
                                            "value": "ethBlocksSinceLastDifficultyPeriod"
                                          },
                                          "id": 612,
                                          "name": "Identifier",
                                          "src": "9461:34:0"
                                        }
                                      ],
                                      "id": 613,
                                      "name": "FunctionCall",
                                      "src": "9416:81:0"
                                    }
                                  ],
                                  "id": 614,
                                  "name": "VariableDeclarationStatement",
                                  "src": "9392:105:0"
                                },
                                {
                                  "attributes": {
                                    "assignments": [
                                      616
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "excess_block_pct_extra",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 615,
                                          "name": "ElementaryTypeName",
                                          "src": "9510:4:0"
                                        }
                                      ],
                                      "id": 616,
                                      "name": "VariableDeclaration",
                                      "src": "9510:27:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1000_by_1",
                                                "typeString": "int_const 1000"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "limitLessThan",
                                            "referencedDeclaration": 114,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "sub",
                                                    "referencedDeclaration": 45,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 605,
                                                        "type": "uint256",
                                                        "value": "excess_block_pct"
                                                      },
                                                      "id": 617,
                                                      "name": "Identifier",
                                                      "src": "9540:16:0"
                                                    }
                                                  ],
                                                  "id": 618,
                                                  "name": "MemberAccess",
                                                  "src": "9540:20:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "313030",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 100",
                                                    "value": "100"
                                                  },
                                                  "id": 619,
                                                  "name": "Literal",
                                                  "src": "9561:3:0"
                                                }
                                              ],
                                              "id": 620,
                                              "name": "FunctionCall",
                                              "src": "9540:25:0"
                                            }
                                          ],
                                          "id": 621,
                                          "name": "MemberAccess",
                                          "src": "9540:39:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "31303030",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 1000",
                                            "value": "1000"
                                          },
                                          "id": 622,
                                          "name": "Literal",
                                          "src": "9580:4:0"
                                        }
                                      ],
                                      "id": 623,
                                      "name": "FunctionCall",
                                      "src": "9540:45:0"
                                    }
                                  ],
                                  "id": 624,
                                  "name": "VariableDeclarationStatement",
                                  "src": "9510:75:0"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 625,
                                          "name": "Identifier",
                                          "src": "9773:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sub",
                                                "referencedDeclaration": 45,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 300,
                                                    "type": "uint256",
                                                    "value": "miningTarget"
                                                  },
                                                  "id": 626,
                                                  "name": "Identifier",
                                                  "src": "9788:12:0"
                                                }
                                              ],
                                              "id": 627,
                                              "name": "MemberAccess",
                                              "src": "9788:16:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "mul",
                                                    "referencedDeclaration": 73,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "isStructConstructorCall": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                          null
                                                        ],
                                                        "type": "uint256",
                                                        "type_conversion": false
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_2000_by_1",
                                                                "typeString": "int_const 2000"
                                                              }
                                                            ],
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "member_name": "div",
                                                            "referencedDeclaration": 95,
                                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                                          },
                                                          "children": [
                                                            {
                                                              "attributes": {
                                                                "argumentTypes": null,
                                                                "overloadedDeclarations": [
                                                                  null
                                                                ],
                                                                "referencedDeclaration": 300,
                                                                "type": "uint256",
                                                                "value": "miningTarget"
                                                              },
                                                              "id": 628,
                                                              "name": "Identifier",
                                                              "src": "9805:12:0"
                                                            }
                                                          ],
                                                          "id": 629,
                                                          "name": "MemberAccess",
                                                          "src": "9805:16:0"
                                                        },
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "hexvalue": "32303030",
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "subdenomination": null,
                                                            "token": "number",
                                                            "type": "int_const 2000",
                                                            "value": "2000"
                                                          },
                                                          "id": 630,
                                                          "name": "Literal",
                                                          "src": "9822:4:0"
                                                        }
                                                      ],
                                                      "id": 631,
                                                      "name": "FunctionCall",
                                                      "src": "9805:22:0"
                                                    }
                                                  ],
                                                  "id": 632,
                                                  "name": "MemberAccess",
                                                  "src": "9805:26:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 616,
                                                    "type": "uint256",
                                                    "value": "excess_block_pct_extra"
                                                  },
                                                  "id": 633,
                                                  "name": "Identifier",
                                                  "src": "9832:22:0"
                                                }
                                              ],
                                              "id": 634,
                                              "name": "FunctionCall",
                                              "src": "9805:50:0"
                                            }
                                          ],
                                          "id": 635,
                                          "name": "FunctionCall",
                                          "src": "9788:68:0"
                                        }
                                      ],
                                      "id": 636,
                                      "name": "Assignment",
                                      "src": "9773:83:0"
                                    }
                                  ],
                                  "id": 637,
                                  "name": "ExpressionStatement",
                                  "src": "9773:83:0"
                                }
                              ],
                              "id": 638,
                              "name": "Block",
                              "src": "9380:505:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "assignments": [
                                      640
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "shortage_block_pct",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 639,
                                          "name": "ElementaryTypeName",
                                          "src": "9901:4:0"
                                        }
                                      ],
                                      "id": 640,
                                      "name": "VariableDeclaration",
                                      "src": "9901:23:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "div",
                                            "referencedDeclaration": 95,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "isStructConstructorCall": false,
                                                    "lValueRequested": false,
                                                    "names": [
                                                      null
                                                    ],
                                                    "type": "uint256",
                                                    "type_conversion": false
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          }
                                                        ],
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "member_name": "mul",
                                                        "referencedDeclaration": 73,
                                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "overloadedDeclarations": [
                                                              null
                                                            ],
                                                            "referencedDeclaration": 585,
                                                            "type": "uint256",
                                                            "value": "ethBlocksSinceLastDifficultyPeriod"
                                                          },
                                                          "id": 641,
                                                          "name": "Identifier",
                                                          "src": "9928:34:0"
                                                        }
                                                      ],
                                                      "id": 642,
                                                      "name": "MemberAccess",
                                                      "src": "9928:38:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "hexvalue": "313030",
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "subdenomination": null,
                                                        "token": "number",
                                                        "type": "int_const 100",
                                                        "value": "100"
                                                      },
                                                      "id": 643,
                                                      "name": "Literal",
                                                      "src": "9967:3:0"
                                                    }
                                                  ],
                                                  "id": 644,
                                                  "name": "FunctionCall",
                                                  "src": "9928:43:0"
                                                }
                                              ],
                                              "id": 645,
                                              "name": "TupleExpression",
                                              "src": "9927:45:0"
                                            }
                                          ],
                                          "id": 646,
                                          "name": "MemberAccess",
                                          "src": "9927:49:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 596,
                                            "type": "uint256",
                                            "value": "targetEthBlocksPerDiffPeriod"
                                          },
                                          "id": 647,
                                          "name": "Identifier",
                                          "src": "9978:28:0"
                                        }
                                      ],
                                      "id": 648,
                                      "name": "FunctionCall",
                                      "src": "9927:81:0"
                                    }
                                  ],
                                  "id": 649,
                                  "name": "VariableDeclarationStatement",
                                  "src": "9901:107:0"
                                },
                                {
                                  "attributes": {
                                    "assignments": [
                                      651
                                    ]
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "constant": false,
                                        "name": "shortage_block_pct_extra",
                                        "scope": 699,
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "type": "uint256",
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "name": "uint",
                                            "type": "uint256"
                                          },
                                          "id": 650,
                                          "name": "ElementaryTypeName",
                                          "src": "10021:4:0"
                                        }
                                      ],
                                      "id": 651,
                                      "name": "VariableDeclaration",
                                      "src": "10021:29:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1000_by_1",
                                                "typeString": "int_const 1000"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "limitLessThan",
                                            "referencedDeclaration": 114,
                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "sub",
                                                    "referencedDeclaration": 45,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 640,
                                                        "type": "uint256",
                                                        "value": "shortage_block_pct"
                                                      },
                                                      "id": 652,
                                                      "name": "Identifier",
                                                      "src": "10053:18:0"
                                                    }
                                                  ],
                                                  "id": 653,
                                                  "name": "MemberAccess",
                                                  "src": "10053:22:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "313030",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 100",
                                                    "value": "100"
                                                  },
                                                  "id": 654,
                                                  "name": "Literal",
                                                  "src": "10076:3:0"
                                                }
                                              ],
                                              "id": 655,
                                              "name": "FunctionCall",
                                              "src": "10053:27:0"
                                            }
                                          ],
                                          "id": 656,
                                          "name": "MemberAccess",
                                          "src": "10053:41:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "31303030",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 1000",
                                            "value": "1000"
                                          },
                                          "id": 657,
                                          "name": "Literal",
                                          "src": "10095:4:0"
                                        }
                                      ],
                                      "id": 658,
                                      "name": "FunctionCall",
                                      "src": "10053:47:0"
                                    }
                                  ],
                                  "id": 659,
                                  "name": "VariableDeclarationStatement",
                                  "src": "10021:79:0"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 660,
                                          "name": "Identifier",
                                          "src": "10168:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "isStructConstructorCall": false,
                                            "lValueRequested": false,
                                            "names": [
                                              null
                                            ],
                                            "type": "uint256",
                                            "type_conversion": false
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "add",
                                                "referencedDeclaration": 23,
                                                "type": "function (uint256,uint256) pure returns (uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 300,
                                                    "type": "uint256",
                                                    "value": "miningTarget"
                                                  },
                                                  "id": 661,
                                                  "name": "Identifier",
                                                  "src": "10183:12:0"
                                                }
                                              ],
                                              "id": 662,
                                              "name": "MemberAccess",
                                              "src": "10183:16:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "isStructConstructorCall": false,
                                                "lValueRequested": false,
                                                "names": [
                                                  null
                                                ],
                                                "type": "uint256",
                                                "type_conversion": false
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "mul",
                                                    "referencedDeclaration": 73,
                                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "isStructConstructorCall": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                          null
                                                        ],
                                                        "type": "uint256",
                                                        "type_conversion": false
                                                      },
                                                      "children": [
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_2000_by_1",
                                                                "typeString": "int_const 2000"
                                                              }
                                                            ],
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "member_name": "div",
                                                            "referencedDeclaration": 95,
                                                            "type": "function (uint256,uint256) pure returns (uint256)"
                                                          },
                                                          "children": [
                                                            {
                                                              "attributes": {
                                                                "argumentTypes": null,
                                                                "overloadedDeclarations": [
                                                                  null
                                                                ],
                                                                "referencedDeclaration": 300,
                                                                "type": "uint256",
                                                                "value": "miningTarget"
                                                              },
                                                              "id": 663,
                                                              "name": "Identifier",
                                                              "src": "10200:12:0"
                                                            }
                                                          ],
                                                          "id": 664,
                                                          "name": "MemberAccess",
                                                          "src": "10200:16:0"
                                                        },
                                                        {
                                                          "attributes": {
                                                            "argumentTypes": null,
                                                            "hexvalue": "32303030",
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "subdenomination": null,
                                                            "token": "number",
                                                            "type": "int_const 2000",
                                                            "value": "2000"
                                                          },
                                                          "id": 665,
                                                          "name": "Literal",
                                                          "src": "10217:4:0"
                                                        }
                                                      ],
                                                      "id": 666,
                                                      "name": "FunctionCall",
                                                      "src": "10200:22:0"
                                                    }
                                                  ],
                                                  "id": 667,
                                                  "name": "MemberAccess",
                                                  "src": "10200:26:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 651,
                                                    "type": "uint256",
                                                    "value": "shortage_block_pct_extra"
                                                  },
                                                  "id": 668,
                                                  "name": "Identifier",
                                                  "src": "10227:24:0"
                                                }
                                              ],
                                              "id": 669,
                                              "name": "FunctionCall",
                                              "src": "10200:52:0"
                                            }
                                          ],
                                          "id": 670,
                                          "name": "FunctionCall",
                                          "src": "10183:70:0"
                                        }
                                      ],
                                      "id": 671,
                                      "name": "Assignment",
                                      "src": "10168:85:0"
                                    }
                                  ],
                                  "id": 672,
                                  "name": "ExpressionStatement",
                                  "src": "10168:85:0"
                                }
                              ],
                              "id": 673,
                              "name": "Block",
                              "src": "9889:393:0"
                            }
                          ],
                          "id": 674,
                          "name": "IfStatement",
                          "src": "9300:982:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 283,
                                    "type": "uint256",
                                    "value": "latestDifficultyPeriodStarted"
                                  },
                                  "id": 675,
                                  "name": "Identifier",
                                  "src": "10294:29:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1361,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 676,
                                      "name": "Identifier",
                                      "src": "10326:5:0"
                                    }
                                  ],
                                  "id": 677,
                                  "name": "MemberAccess",
                                  "src": "10326:12:0"
                                }
                              ],
                              "id": 678,
                              "name": "Assignment",
                              "src": "10294:44:0"
                            }
                          ],
                          "id": 679,
                          "name": "ExpressionStatement",
                          "src": "10294:44:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "<",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 680,
                                  "name": "Identifier",
                                  "src": "10352:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 293,
                                    "type": "uint256",
                                    "value": "_MINIMUM_TARGET"
                                  },
                                  "id": 681,
                                  "name": "Identifier",
                                  "src": "10367:15:0"
                                }
                              ],
                              "id": 682,
                              "name": "BinaryOperation",
                              "src": "10352:30:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 683,
                                          "name": "Identifier",
                                          "src": "10421:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 293,
                                            "type": "uint256",
                                            "value": "_MINIMUM_TARGET"
                                          },
                                          "id": 684,
                                          "name": "Identifier",
                                          "src": "10436:15:0"
                                        }
                                      ],
                                      "id": 685,
                                      "name": "Assignment",
                                      "src": "10421:30:0"
                                    }
                                  ],
                                  "id": 686,
                                  "name": "ExpressionStatement",
                                  "src": "10421:30:0"
                                }
                              ],
                              "id": 687,
                              "name": "Block",
                              "src": "10409:53:0"
                            }
                          ],
                          "id": 688,
                          "name": "IfStatement",
                          "src": "10349:113:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 689,
                                  "name": "Identifier",
                                  "src": "10475:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 298,
                                    "type": "uint256",
                                    "value": "_MAXIMUM_TARGET"
                                  },
                                  "id": 690,
                                  "name": "Identifier",
                                  "src": "10490:15:0"
                                }
                              ],
                              "id": 691,
                              "name": "BinaryOperation",
                              "src": "10475:30:0"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 300,
                                            "type": "uint256",
                                            "value": "miningTarget"
                                          },
                                          "id": 692,
                                          "name": "Identifier",
                                          "src": "10539:12:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 298,
                                            "type": "uint256",
                                            "value": "_MAXIMUM_TARGET"
                                          },
                                          "id": 693,
                                          "name": "Identifier",
                                          "src": "10554:15:0"
                                        }
                                      ],
                                      "id": 694,
                                      "name": "Assignment",
                                      "src": "10539:30:0"
                                    }
                                  ],
                                  "id": 695,
                                  "name": "ExpressionStatement",
                                  "src": "10539:30:0"
                                }
                              ],
                              "id": 696,
                              "name": "Block",
                              "src": "10527:53:0"
                            }
                          ],
                          "id": 697,
                          "name": "IfStatement",
                          "src": "10472:108:0"
                        }
                      ],
                      "id": 698,
                      "name": "Block",
                      "src": "8797:1789:0"
                    }
                  ],
                  "id": 699,
                  "name": "FunctionDefinition",
                  "src": "8757:1829:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getChallengeNumber",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 700,
                      "name": "ParameterList",
                      "src": "10705:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 707,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 701,
                              "name": "ElementaryTypeName",
                              "src": "10733:7:0"
                            }
                          ],
                          "id": 702,
                          "name": "VariableDeclaration",
                          "src": "10733:7:0"
                        }
                      ],
                      "id": 703,
                      "name": "ParameterList",
                      "src": "10732:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 703
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 302,
                                "type": "bytes32",
                                "value": "challengeNumber"
                              },
                              "id": 704,
                              "name": "Identifier",
                              "src": "10759:15:0"
                            }
                          ],
                          "id": 705,
                          "name": "Return",
                          "src": "10752:22:0"
                        }
                      ],
                      "id": 706,
                      "name": "Block",
                      "src": "10742:39:0"
                    }
                  ],
                  "id": 707,
                  "name": "FunctionDefinition",
                  "src": "10678:103:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMiningDifficulty",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 708,
                      "name": "ParameterList",
                      "src": "10898:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 718,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 709,
                              "name": "ElementaryTypeName",
                              "src": "10926:4:0"
                            }
                          ],
                          "id": 710,
                          "name": "VariableDeclaration",
                          "src": "10926:4:0"
                        }
                      ],
                      "id": 711,
                      "name": "ParameterList",
                      "src": "10925:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 711
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "div",
                                    "referencedDeclaration": 95,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 298,
                                        "type": "uint256",
                                        "value": "_MAXIMUM_TARGET"
                                      },
                                      "id": 712,
                                      "name": "Identifier",
                                      "src": "10949:15:0"
                                    }
                                  ],
                                  "id": 713,
                                  "name": "MemberAccess",
                                  "src": "10949:19:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 300,
                                    "type": "uint256",
                                    "value": "miningTarget"
                                  },
                                  "id": 714,
                                  "name": "Identifier",
                                  "src": "10969:12:0"
                                }
                              ],
                              "id": 715,
                              "name": "FunctionCall",
                              "src": "10949:33:0"
                            }
                          ],
                          "id": 716,
                          "name": "Return",
                          "src": "10942:40:0"
                        }
                      ],
                      "id": 717,
                      "name": "Block",
                      "src": "10932:57:0"
                    }
                  ],
                  "id": 718,
                  "name": "FunctionDefinition",
                  "src": "10870:119:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMiningTarget",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 719,
                      "name": "ParameterList",
                      "src": "11019:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 726,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 720,
                              "name": "ElementaryTypeName",
                              "src": "11047:4:0"
                            }
                          ],
                          "id": 721,
                          "name": "VariableDeclaration",
                          "src": "11047:4:0"
                        }
                      ],
                      "id": 722,
                      "name": "ParameterList",
                      "src": "11046:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 722
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 300,
                                "type": "uint256",
                                "value": "miningTarget"
                              },
                              "id": 723,
                              "name": "Identifier",
                              "src": "11069:12:0"
                            }
                          ],
                          "id": 724,
                          "name": "Return",
                          "src": "11062:19:0"
                        }
                      ],
                      "id": 725,
                      "name": "Block",
                      "src": "11053:34:0"
                    }
                  ],
                  "id": 726,
                  "name": "FunctionDefinition",
                  "src": "10995:92:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMiningReward",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 727,
                      "name": "ParameterList",
                      "src": "11225:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 746,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 728,
                              "name": "ElementaryTypeName",
                              "src": "11253:4:0"
                            }
                          ],
                          "id": 729,
                          "name": "VariableDeclaration",
                          "src": "11253:4:0"
                        }
                      ],
                      "id": 730,
                      "name": "ParameterList",
                      "src": "11252:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 730
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "div",
                                    "referencedDeclaration": 95,
                                    "type": "function (uint256,uint256) pure returns (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": "*",
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "3530",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 50",
                                                "value": "50"
                                              },
                                              "id": 731,
                                              "name": "Literal",
                                              "src": "11404:2:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "operator": "**",
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "hexvalue": "3130",
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "subdenomination": null,
                                                    "token": "number",
                                                    "type": "int_const 10",
                                                    "value": "10"
                                                  },
                                                  "id": 732,
                                                  "name": "Literal",
                                                  "src": "11409:2:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "isStructConstructorCall": false,
                                                    "lValueRequested": false,
                                                    "names": [
                                                      null
                                                    ],
                                                    "type": "uint256",
                                                    "type_conversion": true
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                          }
                                                        ],
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "type": "type(uint256)",
                                                        "value": "uint"
                                                      },
                                                      "id": 733,
                                                      "name": "ElementaryTypeNameExpression",
                                                      "src": "11413:4:0"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 279,
                                                        "type": "uint8",
                                                        "value": "decimals"
                                                      },
                                                      "id": 734,
                                                      "name": "Identifier",
                                                      "src": "11418:8:0"
                                                    }
                                                  ],
                                                  "id": 735,
                                                  "name": "FunctionCall",
                                                  "src": "11413:14:0"
                                                }
                                              ],
                                              "id": 736,
                                              "name": "BinaryOperation",
                                              "src": "11409:18:0"
                                            }
                                          ],
                                          "id": 737,
                                          "name": "BinaryOperation",
                                          "src": "11404:23:0"
                                        }
                                      ],
                                      "id": 738,
                                      "name": "TupleExpression",
                                      "src": "11403:26:0"
                                    }
                                  ],
                                  "id": 739,
                                  "name": "MemberAccess",
                                  "src": "11403:30:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "**",
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "hexvalue": "32",
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "subdenomination": null,
                                        "token": "number",
                                        "type": "int_const 2",
                                        "value": "2"
                                      },
                                      "id": 740,
                                      "name": "Literal",
                                      "src": "11435:1:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 304,
                                        "type": "uint256",
                                        "value": "rewardEra"
                                      },
                                      "id": 741,
                                      "name": "Identifier",
                                      "src": "11438:9:0"
                                    }
                                  ],
                                  "id": 742,
                                  "name": "BinaryOperation",
                                  "src": "11435:12:0"
                                }
                              ],
                              "id": 743,
                              "name": "FunctionCall",
                              "src": "11403:46:0"
                            }
                          ],
                          "id": 744,
                          "name": "Return",
                          "src": "11396:53:0"
                        }
                      ],
                      "id": 745,
                      "name": "Block",
                      "src": "11259:199:0"
                    }
                  ],
                  "id": 746,
                  "name": "FunctionDefinition",
                  "src": "11201:257:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "getMintDigest",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "nonce",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 747,
                              "name": "ElementaryTypeName",
                              "src": "11520:7:0"
                            }
                          ],
                          "id": 748,
                          "name": "VariableDeclaration",
                          "src": "11520:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_digest",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 749,
                              "name": "ElementaryTypeName",
                              "src": "11535:7:0"
                            }
                          ],
                          "id": 750,
                          "name": "VariableDeclaration",
                          "src": "11535:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_number",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 751,
                              "name": "ElementaryTypeName",
                              "src": "11561:7:0"
                            }
                          ],
                          "id": 752,
                          "name": "VariableDeclaration",
                          "src": "11561:24:0"
                        }
                      ],
                      "id": 753,
                      "name": "ParameterList",
                      "src": "11519:67:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "digesttest",
                            "scope": 769,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 754,
                              "name": "ElementaryTypeName",
                              "src": "11608:7:0"
                            }
                          ],
                          "id": 755,
                          "name": "VariableDeclaration",
                          "src": "11608:18:0"
                        }
                      ],
                      "id": 756,
                      "name": "ParameterList",
                      "src": "11607:20:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              758
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "digest",
                                "scope": 769,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 757,
                                  "name": "ElementaryTypeName",
                                  "src": "11639:7:0"
                                }
                              ],
                              "id": 758,
                              "name": "VariableDeclaration",
                              "src": "11639:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bytes32",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1363,
                                    "type": "function () pure returns (bytes32)",
                                    "value": "keccak256"
                                  },
                                  "id": 759,
                                  "name": "Identifier",
                                  "src": "11656:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 752,
                                    "type": "bytes32",
                                    "value": "challenge_number"
                                  },
                                  "id": 760,
                                  "name": "Identifier",
                                  "src": "11666:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 761,
                                      "name": "Identifier",
                                      "src": "11683:3:0"
                                    }
                                  ],
                                  "id": 762,
                                  "name": "MemberAccess",
                                  "src": "11683:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 748,
                                    "type": "uint256",
                                    "value": "nonce"
                                  },
                                  "id": 763,
                                  "name": "Identifier",
                                  "src": "11694:5:0"
                                }
                              ],
                              "id": 764,
                              "name": "FunctionCall",
                              "src": "11656:44:0"
                            }
                          ],
                          "id": 765,
                          "name": "VariableDeclarationStatement",
                          "src": "11639:61:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 756
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "overloadedDeclarations": [
                                  null
                                ],
                                "referencedDeclaration": 758,
                                "type": "bytes32",
                                "value": "digest"
                              },
                              "id": 766,
                              "name": "Identifier",
                              "src": "11718:6:0"
                            }
                          ],
                          "id": 767,
                          "name": "Return",
                          "src": "11711:13:0"
                        }
                      ],
                      "id": 768,
                      "name": "Block",
                      "src": "11628:106:0"
                    }
                  ],
                  "id": 769,
                  "name": "FunctionDefinition",
                  "src": "11497:237:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "checkMintSolution",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "nonce",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint256",
                                "type": "uint256"
                              },
                              "id": 770,
                              "name": "ElementaryTypeName",
                              "src": "11806:7:0"
                            }
                          ],
                          "id": 771,
                          "name": "VariableDeclaration",
                          "src": "11806:13:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_digest",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 772,
                              "name": "ElementaryTypeName",
                              "src": "11821:7:0"
                            }
                          ],
                          "id": 773,
                          "name": "VariableDeclaration",
                          "src": "11821:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "challenge_number",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes32",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes32",
                                "type": "bytes32"
                              },
                              "id": 774,
                              "name": "ElementaryTypeName",
                              "src": "11847:7:0"
                            }
                          ],
                          "id": 775,
                          "name": "VariableDeclaration",
                          "src": "11847:24:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "testTarget",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 776,
                              "name": "ElementaryTypeName",
                              "src": "11873:4:0"
                            }
                          ],
                          "id": 777,
                          "name": "VariableDeclaration",
                          "src": "11873:15:0"
                        }
                      ],
                      "id": 778,
                      "name": "ParameterList",
                      "src": "11805:84:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 806,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 779,
                              "name": "ElementaryTypeName",
                              "src": "11911:4:0"
                            }
                          ],
                          "id": 780,
                          "name": "VariableDeclaration",
                          "src": "11911:12:0"
                        }
                      ],
                      "id": 781,
                      "name": "ParameterList",
                      "src": "11910:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              783
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "digest",
                                "scope": 806,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "bytes32",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "bytes32",
                                    "type": "bytes32"
                                  },
                                  "id": 782,
                                  "name": "ElementaryTypeName",
                                  "src": "11938:7:0"
                                }
                              ],
                              "id": 783,
                              "name": "VariableDeclaration",
                              "src": "11938:14:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bytes32",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1363,
                                    "type": "function () pure returns (bytes32)",
                                    "value": "keccak256"
                                  },
                                  "id": 784,
                                  "name": "Identifier",
                                  "src": "11955:9:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 775,
                                    "type": "bytes32",
                                    "value": "challenge_number"
                                  },
                                  "id": 785,
                                  "name": "Identifier",
                                  "src": "11965:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 786,
                                      "name": "Identifier",
                                      "src": "11982:3:0"
                                    }
                                  ],
                                  "id": 787,
                                  "name": "MemberAccess",
                                  "src": "11982:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 771,
                                    "type": "uint256",
                                    "value": "nonce"
                                  },
                                  "id": 788,
                                  "name": "Identifier",
                                  "src": "11993:5:0"
                                }
                              ],
                              "id": 789,
                              "name": "FunctionCall",
                              "src": "11955:44:0"
                            }
                          ],
                          "id": 790,
                          "name": "VariableDeclarationStatement",
                          "src": "11938:61:0"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": ">",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": true
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "type": "type(uint256)",
                                        "value": "uint256"
                                      },
                                      "id": 791,
                                      "name": "ElementaryTypeNameExpression",
                                      "src": "12015:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 783,
                                        "type": "bytes32",
                                        "value": "digest"
                                      },
                                      "id": 792,
                                      "name": "Identifier",
                                      "src": "12023:6:0"
                                    }
                                  ],
                                  "id": 793,
                                  "name": "FunctionCall",
                                  "src": "12015:15:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 777,
                                    "type": "uint256",
                                    "value": "testTarget"
                                  },
                                  "id": 794,
                                  "name": "Identifier",
                                  "src": "12033:10:0"
                                }
                              ],
                              "id": 795,
                              "name": "BinaryOperation",
                              "src": "12015:28:0"
                            },
                            {
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      null
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "tuple()",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          null
                                        ],
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1373,
                                        "type": "function () pure",
                                        "value": "revert"
                                      },
                                      "id": 796,
                                      "name": "Identifier",
                                      "src": "12045:6:0"
                                    }
                                  ],
                                  "id": 797,
                                  "name": "FunctionCall",
                                  "src": "12045:8:0"
                                }
                              ],
                              "id": 798,
                              "name": "ExpressionStatement",
                              "src": "12045:8:0"
                            }
                          ],
                          "id": 799,
                          "name": "IfStatement",
                          "src": "12012:41:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 781
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "==",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 783,
                                        "type": "bytes32",
                                        "value": "digest"
                                      },
                                      "id": 800,
                                      "name": "Identifier",
                                      "src": "12074:6:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 773,
                                        "type": "bytes32",
                                        "value": "challenge_digest"
                                      },
                                      "id": 801,
                                      "name": "Identifier",
                                      "src": "12084:16:0"
                                    }
                                  ],
                                  "id": 802,
                                  "name": "BinaryOperation",
                                  "src": "12074:26:0"
                                }
                              ],
                              "id": 803,
                              "name": "TupleExpression",
                              "src": "12073:28:0"
                            }
                          ],
                          "id": 804,
                          "name": "Return",
                          "src": "12066:35:0"
                        }
                      ],
                      "id": 805,
                      "name": "Block",
                      "src": "11925:188:0"
                    }
                  ],
                  "id": 806,
                  "name": "FunctionDefinition",
                  "src": "11779:334:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": 120,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 807,
                      "name": "ParameterList",
                      "src": "12324:2:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 820,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 808,
                              "name": "ElementaryTypeName",
                              "src": "12352:4:0"
                            }
                          ],
                          "id": 809,
                          "name": "VariableDeclaration",
                          "src": "12352:4:0"
                        }
                      ],
                      "id": 810,
                      "name": "ParameterList",
                      "src": "12351:6:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 810
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 281,
                                    "type": "uint256",
                                    "value": "_totalSupply"
                                  },
                                  "id": 811,
                                  "name": "Identifier",
                                  "src": "12376:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 812,
                                      "name": "Identifier",
                                      "src": "12392:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "address",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "type": "type(address)",
                                            "value": "address"
                                          },
                                          "id": 813,
                                          "name": "ElementaryTypeNameExpression",
                                          "src": "12401:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "hexvalue": "30",
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "subdenomination": null,
                                            "token": "number",
                                            "type": "int_const 0",
                                            "value": "0"
                                          },
                                          "id": 814,
                                          "name": "Literal",
                                          "src": "12409:1:0"
                                        }
                                      ],
                                      "id": 815,
                                      "name": "FunctionCall",
                                      "src": "12401:10:0"
                                    }
                                  ],
                                  "id": 816,
                                  "name": "IndexAccess",
                                  "src": "12392:20:0"
                                }
                              ],
                              "id": 817,
                              "name": "BinaryOperation",
                              "src": "12376:36:0"
                            }
                          ],
                          "id": 818,
                          "name": "Return",
                          "src": "12369:43:0"
                        }
                      ],
                      "id": 819,
                      "name": "Block",
                      "src": "12358:62:0"
                    }
                  ],
                  "id": 820,
                  "name": "FunctionDefinition",
                  "src": "12304:116:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "balanceOf",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": 127,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 832,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 821,
                              "name": "ElementaryTypeName",
                              "src": "12664:7:0"
                            }
                          ],
                          "id": 822,
                          "name": "VariableDeclaration",
                          "src": "12664:18:0"
                        }
                      ],
                      "id": 823,
                      "name": "ParameterList",
                      "src": "12663:20:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "balance",
                            "scope": 832,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 824,
                              "name": "ElementaryTypeName",
                              "src": "12709:4:0"
                            }
                          ],
                          "id": 825,
                          "name": "VariableDeclaration",
                          "src": "12709:12:0"
                        }
                      ],
                      "id": 826,
                      "name": "ParameterList",
                      "src": "12708:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 826
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 325,
                                    "type": "mapping(address => uint256)",
                                    "value": "balances"
                                  },
                                  "id": 827,
                                  "name": "Identifier",
                                  "src": "12741:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 822,
                                    "type": "address",
                                    "value": "tokenOwner"
                                  },
                                  "id": 828,
                                  "name": "Identifier",
                                  "src": "12750:10:0"
                                }
                              ],
                              "id": 829,
                              "name": "IndexAccess",
                              "src": "12741:20:0"
                            }
                          ],
                          "id": 830,
                          "name": "Return",
                          "src": "12734:27:0"
                        }
                      ],
                      "id": 831,
                      "name": "Block",
                      "src": "12723:46:0"
                    }
                  ],
                  "id": 832,
                  "name": "FunctionDefinition",
                  "src": "12645:124:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transfer",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": 145,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 875,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 833,
                              "name": "ElementaryTypeName",
                              "src": "13136:7:0"
                            }
                          ],
                          "id": 834,
                          "name": "VariableDeclaration",
                          "src": "13136:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 875,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 835,
                              "name": "ElementaryTypeName",
                              "src": "13148:4:0"
                            }
                          ],
                          "id": 836,
                          "name": "VariableDeclaration",
                          "src": "13148:11:0"
                        }
                      ],
                      "id": 837,
                      "name": "ParameterList",
                      "src": "13135:25:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 875,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 838,
                              "name": "ElementaryTypeName",
                              "src": "13177:4:0"
                            }
                          ],
                          "id": 839,
                          "name": "VariableDeclaration",
                          "src": "13177:12:0"
                        }
                      ],
                      "id": 840,
                      "name": "ParameterList",
                      "src": "13176:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 841,
                                      "name": "Identifier",
                                      "src": "13202:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 842,
                                          "name": "Identifier",
                                          "src": "13211:3:0"
                                        }
                                      ],
                                      "id": 843,
                                      "name": "MemberAccess",
                                      "src": "13211:10:0"
                                    }
                                  ],
                                  "id": 844,
                                  "name": "IndexAccess",
                                  "src": "13202:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 45,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 845,
                                              "name": "Identifier",
                                              "src": "13225:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1369,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 846,
                                                  "name": "Identifier",
                                                  "src": "13234:3:0"
                                                }
                                              ],
                                              "id": 847,
                                              "name": "MemberAccess",
                                              "src": "13234:10:0"
                                            }
                                          ],
                                          "id": 848,
                                          "name": "IndexAccess",
                                          "src": "13225:20:0"
                                        }
                                      ],
                                      "id": 849,
                                      "name": "MemberAccess",
                                      "src": "13225:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 836,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 850,
                                      "name": "Identifier",
                                      "src": "13250:6:0"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "FunctionCall",
                                  "src": "13225:32:0"
                                }
                              ],
                              "id": 852,
                              "name": "Assignment",
                              "src": "13202:55:0"
                            }
                          ],
                          "id": 853,
                          "name": "ExpressionStatement",
                          "src": "13202:55:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 854,
                                      "name": "Identifier",
                                      "src": "13268:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 834,
                                        "type": "address",
                                        "value": "to"
                                      },
                                      "id": 855,
                                      "name": "Identifier",
                                      "src": "13277:2:0"
                                    }
                                  ],
                                  "id": 856,
                                  "name": "IndexAccess",
                                  "src": "13268:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 857,
                                              "name": "Identifier",
                                              "src": "13283:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 834,
                                                "type": "address",
                                                "value": "to"
                                              },
                                              "id": 858,
                                              "name": "Identifier",
                                              "src": "13292:2:0"
                                            }
                                          ],
                                          "id": 859,
                                          "name": "IndexAccess",
                                          "src": "13283:12:0"
                                        }
                                      ],
                                      "id": 860,
                                      "name": "MemberAccess",
                                      "src": "13283:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 836,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 861,
                                      "name": "Identifier",
                                      "src": "13300:6:0"
                                    }
                                  ],
                                  "id": 862,
                                  "name": "FunctionCall",
                                  "src": "13283:24:0"
                                }
                              ],
                              "id": 863,
                              "name": "Assignment",
                              "src": "13268:39:0"
                            }
                          ],
                          "id": 864,
                          "name": "ExpressionStatement",
                          "src": "13268:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 173,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 865,
                                  "name": "Identifier",
                                  "src": "13318:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 866,
                                      "name": "Identifier",
                                      "src": "13327:3:0"
                                    }
                                  ],
                                  "id": 867,
                                  "name": "MemberAccess",
                                  "src": "13327:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 834,
                                    "type": "address",
                                    "value": "to"
                                  },
                                  "id": 868,
                                  "name": "Identifier",
                                  "src": "13339:2:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 836,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 869,
                                  "name": "Identifier",
                                  "src": "13343:6:0"
                                }
                              ],
                              "id": 870,
                              "name": "FunctionCall",
                              "src": "13318:32:0"
                            }
                          ],
                          "id": 871,
                          "name": "ExpressionStatement",
                          "src": "13318:32:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 840
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 872,
                              "name": "Literal",
                              "src": "13368:4:0"
                            }
                          ],
                          "id": 873,
                          "name": "Return",
                          "src": "13361:11:0"
                        }
                      ],
                      "id": 874,
                      "name": "Block",
                      "src": "13191:189:0"
                    }
                  ],
                  "id": 875,
                  "name": "FunctionDefinition",
                  "src": "13118:262:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approve",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": 154,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 903,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 876,
                              "name": "ElementaryTypeName",
                              "src": "13911:7:0"
                            }
                          ],
                          "id": 877,
                          "name": "VariableDeclaration",
                          "src": "13911:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 903,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 878,
                              "name": "ElementaryTypeName",
                              "src": "13928:4:0"
                            }
                          ],
                          "id": 879,
                          "name": "VariableDeclaration",
                          "src": "13928:11:0"
                        }
                      ],
                      "id": 880,
                      "name": "ParameterList",
                      "src": "13910:30:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 903,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 881,
                              "name": "ElementaryTypeName",
                              "src": "13957:4:0"
                            }
                          ],
                          "id": 882,
                          "name": "VariableDeclaration",
                          "src": "13957:12:0"
                        }
                      ],
                      "id": 883,
                      "name": "ParameterList",
                      "src": "13956:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 331,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 884,
                                          "name": "Identifier",
                                          "src": "13982:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1369,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 885,
                                              "name": "Identifier",
                                              "src": "13990:3:0"
                                            }
                                          ],
                                          "id": 886,
                                          "name": "MemberAccess",
                                          "src": "13990:10:0"
                                        }
                                      ],
                                      "id": 888,
                                      "name": "IndexAccess",
                                      "src": "13982:19:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 877,
                                        "type": "address",
                                        "value": "spender"
                                      },
                                      "id": 887,
                                      "name": "Identifier",
                                      "src": "14002:7:0"
                                    }
                                  ],
                                  "id": 889,
                                  "name": "IndexAccess",
                                  "src": "13982:28:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 879,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 890,
                                  "name": "Identifier",
                                  "src": "14013:6:0"
                                }
                              ],
                              "id": 891,
                              "name": "Assignment",
                              "src": "13982:37:0"
                            }
                          ],
                          "id": 892,
                          "name": "ExpressionStatement",
                          "src": "13982:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 181,
                                    "type": "function (address,address,uint256)",
                                    "value": "Approval"
                                  },
                                  "id": 893,
                                  "name": "Identifier",
                                  "src": "14030:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 894,
                                      "name": "Identifier",
                                      "src": "14039:3:0"
                                    }
                                  ],
                                  "id": 895,
                                  "name": "MemberAccess",
                                  "src": "14039:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 877,
                                    "type": "address",
                                    "value": "spender"
                                  },
                                  "id": 896,
                                  "name": "Identifier",
                                  "src": "14051:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 879,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 897,
                                  "name": "Identifier",
                                  "src": "14060:6:0"
                                }
                              ],
                              "id": 898,
                              "name": "FunctionCall",
                              "src": "14030:37:0"
                            }
                          ],
                          "id": 899,
                          "name": "ExpressionStatement",
                          "src": "14030:37:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 883
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 900,
                              "name": "Literal",
                              "src": "14085:4:0"
                            }
                          ],
                          "id": 901,
                          "name": "Return",
                          "src": "14078:11:0"
                        }
                      ],
                      "id": 902,
                      "name": "Block",
                      "src": "13971:126:0"
                    }
                  ],
                  "id": 903,
                  "name": "FunctionDefinition",
                  "src": "13894:203:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": 165,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "from",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 904,
                              "name": "ElementaryTypeName",
                              "src": "14660:7:0"
                            }
                          ],
                          "id": 905,
                          "name": "VariableDeclaration",
                          "src": "14660:12:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "to",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 906,
                              "name": "ElementaryTypeName",
                              "src": "14674:7:0"
                            }
                          ],
                          "id": 907,
                          "name": "VariableDeclaration",
                          "src": "14674:10:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 908,
                              "name": "ElementaryTypeName",
                              "src": "14686:4:0"
                            }
                          ],
                          "id": 909,
                          "name": "VariableDeclaration",
                          "src": "14686:11:0"
                        }
                      ],
                      "id": 910,
                      "name": "ParameterList",
                      "src": "14659:39:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 962,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 911,
                              "name": "ElementaryTypeName",
                              "src": "14715:4:0"
                            }
                          ],
                          "id": 912,
                          "name": "VariableDeclaration",
                          "src": "14715:12:0"
                        }
                      ],
                      "id": 913,
                      "name": "ParameterList",
                      "src": "14714:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 914,
                                      "name": "Identifier",
                                      "src": "14740:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 905,
                                        "type": "address",
                                        "value": "from"
                                      },
                                      "id": 915,
                                      "name": "Identifier",
                                      "src": "14749:4:0"
                                    }
                                  ],
                                  "id": 916,
                                  "name": "IndexAccess",
                                  "src": "14740:14:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 45,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 917,
                                              "name": "Identifier",
                                              "src": "14757:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 905,
                                                "type": "address",
                                                "value": "from"
                                              },
                                              "id": 918,
                                              "name": "Identifier",
                                              "src": "14766:4:0"
                                            }
                                          ],
                                          "id": 919,
                                          "name": "IndexAccess",
                                          "src": "14757:14:0"
                                        }
                                      ],
                                      "id": 920,
                                      "name": "MemberAccess",
                                      "src": "14757:18:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 909,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 921,
                                      "name": "Identifier",
                                      "src": "14776:6:0"
                                    }
                                  ],
                                  "id": 922,
                                  "name": "FunctionCall",
                                  "src": "14757:26:0"
                                }
                              ],
                              "id": 923,
                              "name": "Assignment",
                              "src": "14740:43:0"
                            }
                          ],
                          "id": 924,
                          "name": "ExpressionStatement",
                          "src": "14740:43:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 331,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 925,
                                          "name": "Identifier",
                                          "src": "14794:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 905,
                                            "type": "address",
                                            "value": "from"
                                          },
                                          "id": 926,
                                          "name": "Identifier",
                                          "src": "14802:4:0"
                                        }
                                      ],
                                      "id": 929,
                                      "name": "IndexAccess",
                                      "src": "14794:13:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 927,
                                          "name": "Identifier",
                                          "src": "14808:3:0"
                                        }
                                      ],
                                      "id": 928,
                                      "name": "MemberAccess",
                                      "src": "14808:10:0"
                                    }
                                  ],
                                  "id": 930,
                                  "name": "IndexAccess",
                                  "src": "14794:25:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sub",
                                        "referencedDeclaration": 45,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "mapping(address => uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 331,
                                                    "type": "mapping(address => mapping(address => uint256))",
                                                    "value": "allowed"
                                                  },
                                                  "id": 931,
                                                  "name": "Identifier",
                                                  "src": "14822:7:0"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 905,
                                                    "type": "address",
                                                    "value": "from"
                                                  },
                                                  "id": 932,
                                                  "name": "Identifier",
                                                  "src": "14830:4:0"
                                                }
                                              ],
                                              "id": 933,
                                              "name": "IndexAccess",
                                              "src": "14822:13:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1369,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 934,
                                                  "name": "Identifier",
                                                  "src": "14836:3:0"
                                                }
                                              ],
                                              "id": 935,
                                              "name": "MemberAccess",
                                              "src": "14836:10:0"
                                            }
                                          ],
                                          "id": 936,
                                          "name": "IndexAccess",
                                          "src": "14822:25:0"
                                        }
                                      ],
                                      "id": 937,
                                      "name": "MemberAccess",
                                      "src": "14822:29:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 909,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 938,
                                      "name": "Identifier",
                                      "src": "14852:6:0"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "FunctionCall",
                                  "src": "14822:37:0"
                                }
                              ],
                              "id": 940,
                              "name": "Assignment",
                              "src": "14794:65:0"
                            }
                          ],
                          "id": 941,
                          "name": "ExpressionStatement",
                          "src": "14794:65:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 942,
                                      "name": "Identifier",
                                      "src": "14870:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 907,
                                        "type": "address",
                                        "value": "to"
                                      },
                                      "id": 943,
                                      "name": "Identifier",
                                      "src": "14879:2:0"
                                    }
                                  ],
                                  "id": 944,
                                  "name": "IndexAccess",
                                  "src": "14870:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 945,
                                              "name": "Identifier",
                                              "src": "14885:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 907,
                                                "type": "address",
                                                "value": "to"
                                              },
                                              "id": 946,
                                              "name": "Identifier",
                                              "src": "14894:2:0"
                                            }
                                          ],
                                          "id": 947,
                                          "name": "IndexAccess",
                                          "src": "14885:12:0"
                                        }
                                      ],
                                      "id": 948,
                                      "name": "MemberAccess",
                                      "src": "14885:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 909,
                                        "type": "uint256",
                                        "value": "tokens"
                                      },
                                      "id": 949,
                                      "name": "Identifier",
                                      "src": "14902:6:0"
                                    }
                                  ],
                                  "id": 950,
                                  "name": "FunctionCall",
                                  "src": "14885:24:0"
                                }
                              ],
                              "id": 951,
                              "name": "Assignment",
                              "src": "14870:39:0"
                            }
                          ],
                          "id": 952,
                          "name": "ExpressionStatement",
                          "src": "14870:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 173,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 953,
                                  "name": "Identifier",
                                  "src": "14920:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 905,
                                    "type": "address",
                                    "value": "from"
                                  },
                                  "id": 954,
                                  "name": "Identifier",
                                  "src": "14929:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 907,
                                    "type": "address",
                                    "value": "to"
                                  },
                                  "id": 955,
                                  "name": "Identifier",
                                  "src": "14935:2:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 909,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 956,
                                  "name": "Identifier",
                                  "src": "14939:6:0"
                                }
                              ],
                              "id": 957,
                              "name": "FunctionCall",
                              "src": "14920:26:0"
                            }
                          ],
                          "id": 958,
                          "name": "ExpressionStatement",
                          "src": "14920:26:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 913
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 959,
                              "name": "Literal",
                              "src": "14964:4:0"
                            }
                          ],
                          "id": 960,
                          "name": "Return",
                          "src": "14957:11:0"
                        }
                      ],
                      "id": 961,
                      "name": "Block",
                      "src": "14729:247:0"
                    }
                  ],
                  "id": 962,
                  "name": "FunctionDefinition",
                  "src": "14638:338:0"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "allowance",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "view",
                    "superFunction": 136,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenOwner",
                            "scope": 978,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 963,
                              "name": "ElementaryTypeName",
                              "src": "15281:7:0"
                            }
                          ],
                          "id": 964,
                          "name": "VariableDeclaration",
                          "src": "15281:18:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 978,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 965,
                              "name": "ElementaryTypeName",
                              "src": "15301:7:0"
                            }
                          ],
                          "id": 966,
                          "name": "VariableDeclaration",
                          "src": "15301:15:0"
                        }
                      ],
                      "id": 967,
                      "name": "ParameterList",
                      "src": "15280:37:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "remaining",
                            "scope": 978,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 968,
                              "name": "ElementaryTypeName",
                              "src": "15343:4:0"
                            }
                          ],
                          "id": 969,
                          "name": "VariableDeclaration",
                          "src": "15343:14:0"
                        }
                      ],
                      "id": 970,
                      "name": "ParameterList",
                      "src": "15342:16:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 970
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "type": "mapping(address => uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 331,
                                        "type": "mapping(address => mapping(address => uint256))",
                                        "value": "allowed"
                                      },
                                      "id": 971,
                                      "name": "Identifier",
                                      "src": "15377:7:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 964,
                                        "type": "address",
                                        "value": "tokenOwner"
                                      },
                                      "id": 972,
                                      "name": "Identifier",
                                      "src": "15385:10:0"
                                    }
                                  ],
                                  "id": 973,
                                  "name": "IndexAccess",
                                  "src": "15377:19:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 966,
                                    "type": "address",
                                    "value": "spender"
                                  },
                                  "id": 974,
                                  "name": "Identifier",
                                  "src": "15397:7:0"
                                }
                              ],
                              "id": 975,
                              "name": "IndexAccess",
                              "src": "15377:28:0"
                            }
                          ],
                          "id": 976,
                          "name": "Return",
                          "src": "15370:35:0"
                        }
                      ],
                      "id": 977,
                      "name": "Block",
                      "src": "15359:54:0"
                    }
                  ],
                  "id": 978,
                  "name": "FunctionDefinition",
                  "src": "15262:151:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approveAndCall",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "spender",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 979,
                              "name": "ElementaryTypeName",
                              "src": "15803:7:0"
                            }
                          ],
                          "id": 980,
                          "name": "VariableDeclaration",
                          "src": "15803:15:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 981,
                              "name": "ElementaryTypeName",
                              "src": "15820:4:0"
                            }
                          ],
                          "id": 982,
                          "name": "VariableDeclaration",
                          "src": "15820:11:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "data",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bytes memory",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bytes",
                                "type": "bytes storage pointer"
                              },
                              "id": 983,
                              "name": "ElementaryTypeName",
                              "src": "15833:5:0"
                            }
                          ],
                          "id": 984,
                          "name": "VariableDeclaration",
                          "src": "15833:10:0"
                        }
                      ],
                      "id": 985,
                      "name": "ParameterList",
                      "src": "15802:42:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 1019,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 986,
                              "name": "ElementaryTypeName",
                              "src": "15861:4:0"
                            }
                          ],
                          "id": 987,
                          "name": "VariableDeclaration",
                          "src": "15861:12:0"
                        }
                      ],
                      "id": 988,
                      "name": "ParameterList",
                      "src": "15860:14:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 331,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowed"
                                          },
                                          "id": 989,
                                          "name": "Identifier",
                                          "src": "15886:7:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1369,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 990,
                                              "name": "Identifier",
                                              "src": "15894:3:0"
                                            }
                                          ],
                                          "id": 991,
                                          "name": "MemberAccess",
                                          "src": "15894:10:0"
                                        }
                                      ],
                                      "id": 993,
                                      "name": "IndexAccess",
                                      "src": "15886:19:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 980,
                                        "type": "address",
                                        "value": "spender"
                                      },
                                      "id": 992,
                                      "name": "Identifier",
                                      "src": "15906:7:0"
                                    }
                                  ],
                                  "id": 994,
                                  "name": "IndexAccess",
                                  "src": "15886:28:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 982,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 995,
                                  "name": "Identifier",
                                  "src": "15917:6:0"
                                }
                              ],
                              "id": 996,
                              "name": "Assignment",
                              "src": "15886:37:0"
                            }
                          ],
                          "id": 997,
                          "name": "ExpressionStatement",
                          "src": "15886:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 181,
                                    "type": "function (address,address,uint256)",
                                    "value": "Approval"
                                  },
                                  "id": 998,
                                  "name": "Identifier",
                                  "src": "15934:8:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 999,
                                      "name": "Identifier",
                                      "src": "15943:3:0"
                                    }
                                  ],
                                  "id": 1000,
                                  "name": "MemberAccess",
                                  "src": "15943:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 980,
                                    "type": "address",
                                    "value": "spender"
                                  },
                                  "id": 1001,
                                  "name": "Identifier",
                                  "src": "15955:7:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 982,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 1002,
                                  "name": "Identifier",
                                  "src": "15964:6:0"
                                }
                              ],
                              "id": 1003,
                              "name": "FunctionCall",
                              "src": "15934:37:0"
                            }
                          ],
                          "id": 1004,
                          "name": "ExpressionStatement",
                          "src": "15934:37:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_contract$__0xBitcoinToken_$1113",
                                        "typeString": "contract _0xBitcoinToken"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "receiveApproval",
                                    "referencedDeclaration": 193,
                                    "type": "function (address,uint256,address,bytes memory) external"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "contract ApproveAndCallFallBack",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 194,
                                            "type": "type(contract ApproveAndCallFallBack)",
                                            "value": "ApproveAndCallFallBack"
                                          },
                                          "id": 1005,
                                          "name": "Identifier",
                                          "src": "15982:22:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 980,
                                            "type": "address",
                                            "value": "spender"
                                          },
                                          "id": 1006,
                                          "name": "Identifier",
                                          "src": "16005:7:0"
                                        }
                                      ],
                                      "id": 1007,
                                      "name": "FunctionCall",
                                      "src": "15982:31:0"
                                    }
                                  ],
                                  "id": 1008,
                                  "name": "MemberAccess",
                                  "src": "15982:47:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1009,
                                      "name": "Identifier",
                                      "src": "16030:3:0"
                                    }
                                  ],
                                  "id": 1010,
                                  "name": "MemberAccess",
                                  "src": "16030:10:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 982,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 1011,
                                  "name": "Identifier",
                                  "src": "16042:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1390,
                                    "type": "contract _0xBitcoinToken",
                                    "value": "this"
                                  },
                                  "id": 1012,
                                  "name": "Identifier",
                                  "src": "16050:4:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 984,
                                    "type": "bytes memory",
                                    "value": "data"
                                  },
                                  "id": 1013,
                                  "name": "Identifier",
                                  "src": "16056:4:0"
                                }
                              ],
                              "id": 1014,
                              "name": "FunctionCall",
                              "src": "15982:79:0"
                            }
                          ],
                          "id": 1015,
                          "name": "ExpressionStatement",
                          "src": "15982:79:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 988
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 1016,
                              "name": "Literal",
                              "src": "16079:4:0"
                            }
                          ],
                          "id": 1017,
                          "name": "Return",
                          "src": "16072:11:0"
                        }
                      ],
                      "id": 1018,
                      "name": "Block",
                      "src": "15875:216:0"
                    }
                  ],
                  "id": 1019,
                  "name": "FunctionDefinition",
                  "src": "15779:312:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "",
                    "payable": true,
                    "scope": 1113,
                    "stateMutability": "payable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1020,
                      "name": "ParameterList",
                      "src": "16295:2:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1021,
                      "name": "ParameterList",
                      "src": "16313:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1373,
                                    "type": "function () pure",
                                    "value": "revert"
                                  },
                                  "id": 1022,
                                  "name": "Identifier",
                                  "src": "16324:6:0"
                                }
                              ],
                              "id": 1023,
                              "name": "FunctionCall",
                              "src": "16324:8:0"
                            }
                          ],
                          "id": 1024,
                          "name": "ExpressionStatement",
                          "src": "16324:8:0"
                        }
                      ],
                      "id": 1025,
                      "name": "Block",
                      "src": "16313:27:0"
                    }
                  ],
                  "id": 1026,
                  "name": "FunctionDefinition",
                  "src": "16286:54:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "name": "transferAnyERC20Token",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokenAddress",
                            "scope": 1046,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1027,
                              "name": "ElementaryTypeName",
                              "src": "16607:7:0"
                            }
                          ],
                          "id": 1028,
                          "name": "VariableDeclaration",
                          "src": "16607:20:0"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "tokens",
                            "scope": 1046,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1029,
                              "name": "ElementaryTypeName",
                              "src": "16629:4:0"
                            }
                          ],
                          "id": 1030,
                          "name": "VariableDeclaration",
                          "src": "16629:11:0"
                        }
                      ],
                      "id": 1031,
                      "name": "ParameterList",
                      "src": "16606:35:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 1046,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1034,
                              "name": "ElementaryTypeName",
                              "src": "16668:4:0"
                            }
                          ],
                          "id": 1035,
                          "name": "VariableDeclaration",
                          "src": "16668:12:0"
                        }
                      ],
                      "id": 1036,
                      "name": "ParameterList",
                      "src": "16667:14:0"
                    },
                    {
                      "attributes": {
                        "arguments": [
                          null
                        ]
                      },
                      "children": [
                        {
                          "attributes": {
                            "argumentTypes": null,
                            "overloadedDeclarations": [
                              null
                            ],
                            "referencedDeclaration": 224,
                            "type": "modifier ()",
                            "value": "onlyOwner"
                          },
                          "id": 1032,
                          "name": "Identifier",
                          "src": "16649:9:0"
                        }
                      ],
                      "id": 1033,
                      "name": "ModifierInvocation",
                      "src": "16649:9:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 1036
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bool",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "transfer",
                                    "referencedDeclaration": 145,
                                    "type": "function (address,uint256) external returns (bool)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "contract ERC20Interface",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 182,
                                            "type": "type(contract ERC20Interface)",
                                            "value": "ERC20Interface"
                                          },
                                          "id": 1037,
                                          "name": "Identifier",
                                          "src": "16700:14:0"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1028,
                                            "type": "address",
                                            "value": "tokenAddress"
                                          },
                                          "id": 1038,
                                          "name": "Identifier",
                                          "src": "16715:12:0"
                                        }
                                      ],
                                      "id": 1039,
                                      "name": "FunctionCall",
                                      "src": "16700:28:0"
                                    }
                                  ],
                                  "id": 1040,
                                  "name": "MemberAccess",
                                  "src": "16700:37:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 196,
                                    "type": "address",
                                    "value": "owner"
                                  },
                                  "id": 1041,
                                  "name": "Identifier",
                                  "src": "16738:5:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1030,
                                    "type": "uint256",
                                    "value": "tokens"
                                  },
                                  "id": 1042,
                                  "name": "Identifier",
                                  "src": "16745:6:0"
                                }
                              ],
                              "id": 1043,
                              "name": "FunctionCall",
                              "src": "16700:52:0"
                            }
                          ],
                          "id": 1044,
                          "name": "Return",
                          "src": "16693:59:0"
                        }
                      ],
                      "id": 1045,
                      "name": "Block",
                      "src": "16682:78:0"
                    }
                  ],
                  "id": 1046,
                  "name": "FunctionDefinition",
                  "src": "16576:184:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "setTokensMinted",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "amt",
                            "scope": 1056,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1047,
                              "name": "ElementaryTypeName",
                              "src": "17013:4:0"
                            }
                          ],
                          "id": 1048,
                          "name": "VariableDeclaration",
                          "src": "17013:8:0"
                        }
                      ],
                      "id": 1049,
                      "name": "ParameterList",
                      "src": "17012:10:0"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1050,
                      "name": "ParameterList",
                      "src": "17032:0:0"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 1051,
                                  "name": "Identifier",
                                  "src": "17042:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1048,
                                    "type": "uint256",
                                    "value": "amt"
                                  },
                                  "id": 1052,
                                  "name": "Identifier",
                                  "src": "17057:3:0"
                                }
                              ],
                              "id": 1053,
                              "name": "Assignment",
                              "src": "17042:18:0"
                            }
                          ],
                          "id": 1054,
                          "name": "ExpressionStatement",
                          "src": "17042:18:0"
                        }
                      ],
                      "id": 1055,
                      "name": "Block",
                      "src": "17032:35:0"
                    }
                  ],
                  "id": 1056,
                  "name": "FunctionDefinition",
                  "src": "16988:79:0"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "mintWithoutPoW",
                    "payable": false,
                    "scope": 1113,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1057,
                      "name": "ParameterList",
                      "src": "17097:3:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "success",
                            "scope": 1112,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1058,
                              "name": "ElementaryTypeName",
                              "src": "17117:4:0"
                            }
                          ],
                          "id": 1059,
                          "name": "VariableDeclaration",
                          "src": "17117:12:0"
                        }
                      ],
                      "id": 1060,
                      "name": "ParameterList",
                      "src": "17116:14:0"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "assignments": [
                              1062
                            ]
                          },
                          "children": [
                            {
                              "attributes": {
                                "constant": false,
                                "name": "reward_amount",
                                "scope": 1112,
                                "stateVariable": false,
                                "storageLocation": "default",
                                "type": "uint256",
                                "value": null,
                                "visibility": "internal"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "name": "uint",
                                    "type": "uint256"
                                  },
                                  "id": 1061,
                                  "name": "ElementaryTypeName",
                                  "src": "17867:4:0"
                                }
                              ],
                              "id": 1062,
                              "name": "VariableDeclaration",
                              "src": "17867:18:0"
                            },
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "uint256",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 746,
                                    "type": "function () view returns (uint256)",
                                    "value": "getMiningReward"
                                  },
                                  "id": 1063,
                                  "name": "Identifier",
                                  "src": "17888:15:0"
                                }
                              ],
                              "id": 1064,
                              "name": "FunctionCall",
                              "src": "17888:17:0"
                            }
                          ],
                          "id": 1065,
                          "name": "VariableDeclarationStatement",
                          "src": "17867:38:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 325,
                                        "type": "mapping(address => uint256)",
                                        "value": "balances"
                                      },
                                      "id": 1066,
                                      "name": "Identifier",
                                      "src": "17916:8:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 1067,
                                          "name": "Identifier",
                                          "src": "17925:3:0"
                                        }
                                      ],
                                      "id": 1068,
                                      "name": "MemberAccess",
                                      "src": "17925:10:0"
                                    }
                                  ],
                                  "id": 1069,
                                  "name": "IndexAccess",
                                  "src": "17916:20:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 325,
                                                "type": "mapping(address => uint256)",
                                                "value": "balances"
                                              },
                                              "id": 1070,
                                              "name": "Identifier",
                                              "src": "17939:8:0"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1369,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 1071,
                                                  "name": "Identifier",
                                                  "src": "17948:3:0"
                                                }
                                              ],
                                              "id": 1072,
                                              "name": "MemberAccess",
                                              "src": "17948:10:0"
                                            }
                                          ],
                                          "id": 1073,
                                          "name": "IndexAccess",
                                          "src": "17939:20:0"
                                        }
                                      ],
                                      "id": 1074,
                                      "name": "MemberAccess",
                                      "src": "17939:24:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1062,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 1075,
                                      "name": "Identifier",
                                      "src": "17964:13:0"
                                    }
                                  ],
                                  "id": 1076,
                                  "name": "FunctionCall",
                                  "src": "17939:39:0"
                                }
                              ],
                              "id": 1077,
                              "name": "Assignment",
                              "src": "17916:62:0"
                            }
                          ],
                          "id": 1078,
                          "name": "ExpressionStatement",
                          "src": "17916:62:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 321,
                                    "type": "uint256",
                                    "value": "tokensMinted"
                                  },
                                  "id": 1079,
                                  "name": "Identifier",
                                  "src": "17989:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "isStructConstructorCall": false,
                                    "lValueRequested": false,
                                    "names": [
                                      null
                                    ],
                                    "type": "uint256",
                                    "type_conversion": false
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "add",
                                        "referencedDeclaration": 23,
                                        "type": "function (uint256,uint256) pure returns (uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 321,
                                            "type": "uint256",
                                            "value": "tokensMinted"
                                          },
                                          "id": 1080,
                                          "name": "Identifier",
                                          "src": "18004:12:0"
                                        }
                                      ],
                                      "id": 1081,
                                      "name": "MemberAccess",
                                      "src": "18004:16:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1062,
                                        "type": "uint256",
                                        "value": "reward_amount"
                                      },
                                      "id": 1082,
                                      "name": "Identifier",
                                      "src": "18021:13:0"
                                    }
                                  ],
                                  "id": 1083,
                                  "name": "FunctionCall",
                                  "src": "18004:31:0"
                                }
                              ],
                              "id": 1084,
                              "name": "Assignment",
                              "src": "17989:46:0"
                            }
                          ],
                          "id": 1085,
                          "name": "ExpressionStatement",
                          "src": "17989:46:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1360,
                                    "type": "function (bool) pure",
                                    "value": "assert"
                                  },
                                  "id": 1086,
                                  "name": "Identifier",
                                  "src": "18096:6:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "<=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 321,
                                        "type": "uint256",
                                        "value": "tokensMinted"
                                      },
                                      "id": 1087,
                                      "name": "Identifier",
                                      "src": "18103:12:0"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 306,
                                        "type": "uint256",
                                        "value": "maxSupplyForEra"
                                      },
                                      "id": 1088,
                                      "name": "Identifier",
                                      "src": "18119:15:0"
                                    }
                                  ],
                                  "id": 1089,
                                  "name": "BinaryOperation",
                                  "src": "18103:31:0"
                                }
                              ],
                              "id": 1090,
                              "name": "FunctionCall",
                              "src": "18096:39:0"
                            }
                          ],
                          "id": 1091,
                          "name": "ExpressionStatement",
                          "src": "18096:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "address"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 308,
                                    "type": "address",
                                    "value": "lastRewardTo"
                                  },
                                  "id": 1092,
                                  "name": "Identifier",
                                  "src": "18186:12:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1093,
                                      "name": "Identifier",
                                      "src": "18201:3:0"
                                    }
                                  ],
                                  "id": 1094,
                                  "name": "MemberAccess",
                                  "src": "18201:10:0"
                                }
                              ],
                              "id": 1095,
                              "name": "Assignment",
                              "src": "18186:25:0"
                            }
                          ],
                          "id": 1096,
                          "name": "ExpressionStatement",
                          "src": "18186:25:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 310,
                                    "type": "uint256",
                                    "value": "lastRewardAmount"
                                  },
                                  "id": 1097,
                                  "name": "Identifier",
                                  "src": "18221:16:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1062,
                                    "type": "uint256",
                                    "value": "reward_amount"
                                  },
                                  "id": 1098,
                                  "name": "Identifier",
                                  "src": "18240:13:0"
                                }
                              ],
                              "id": 1099,
                              "name": "Assignment",
                              "src": "18221:32:0"
                            }
                          ],
                          "id": 1100,
                          "name": "ExpressionStatement",
                          "src": "18221:32:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 312,
                                    "type": "uint256",
                                    "value": "lastRewardEthBlockNumber"
                                  },
                                  "id": 1101,
                                  "name": "Identifier",
                                  "src": "18263:24:0"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "number",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1361,
                                        "type": "block",
                                        "value": "block"
                                      },
                                      "id": 1102,
                                      "name": "Identifier",
                                      "src": "18290:5:0"
                                    }
                                  ],
                                  "id": 1103,
                                  "name": "MemberAccess",
                                  "src": "18290:12:0"
                                }
                              ],
                              "id": 1104,
                              "name": "Assignment",
                              "src": "18263:39:0"
                            }
                          ],
                          "id": 1105,
                          "name": "ExpressionStatement",
                          "src": "18263:39:0"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 581,
                                    "type": "function ()",
                                    "value": "_startNewMiningEpoch"
                                  },
                                  "id": 1106,
                                  "name": "Identifier",
                                  "src": "18318:20:0"
                                }
                              ],
                              "id": 1107,
                              "name": "FunctionCall",
                              "src": "18318:22:0"
                            }
                          ],
                          "id": 1108,
                          "name": "ExpressionStatement",
                          "src": "18318:22:0"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 1060
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 1109,
                              "name": "Literal",
                              "src": "18437:4:0"
                            }
                          ],
                          "id": 1110,
                          "name": "Return",
                          "src": "18430:11:0"
                        }
                      ],
                      "id": 1111,
                      "name": "Block",
                      "src": "17131:1318:0"
                    }
                  ],
                  "id": 1112,
                  "name": "FunctionDefinition",
                  "src": "17074:1375:0"
                }
              ],
              "id": 1113,
              "name": "ContractDefinition",
              "src": "3801:14652:0"
            }
          ],
          "id": 1114,
          "name": "SourceUnit",
          "src": "67:18386:0"
        }
      },
      "contracts/WETH.sol": {
        "ast": {
          "absolutePath": "contracts/WETH.sol",
          "exportedSymbols": {
            "WETH9": [
              1357
            ]
          },
          "id": 1358,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1115,
              "literals": [
                "solidity",
                "^",
                "0.4",
                ".18"
              ],
              "nodeType": "PragmaDirective",
              "src": "753:24:1"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1357,
              "linearizedBaseContracts": [
                1357
              ],
              "name": "WETH9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1118,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "800:40:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "57726170706564204574686572",
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "825:15:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
                      "typeString": "literal_string \"Wrapped Ether\""
                    },
                    "value": "Wrapped Ether"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "846:31:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string storage ref"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "871:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "883:27:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "908:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1132,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1126,
                        "indexed": true,
                        "name": "src",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "933:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "indexed": true,
                        "name": "guy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "954:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1130,
                        "indexed": false,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "975:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "975:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "932:52:1"
                  },
                  "src": "917:68:1"
                },
                {
                  "anonymous": false,
                  "id": 1140,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1134,
                        "indexed": true,
                        "name": "src",
                        "nodeType": "VariableDeclaration",
                        "scope": 1140,
                        "src": "1006:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1006:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1136,
                        "indexed": true,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 1140,
                        "src": "1027:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1138,
                        "indexed": false,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1140,
                        "src": "1048:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1048:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1005:52:1"
                  },
                  "src": "990:68:1"
                },
                {
                  "anonymous": false,
                  "id": 1146,
                  "name": "Deposit",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "indexed": true,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 1146,
                        "src": "1078:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "indexed": false,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1146,
                        "src": "1099:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1099:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1077:31:1"
                  },
                  "src": "1063:46:1"
                },
                {
                  "anonymous": false,
                  "id": 1152,
                  "name": "Withdrawal",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1148,
                        "indexed": true,
                        "name": "src",
                        "nodeType": "VariableDeclaration",
                        "scope": 1152,
                        "src": "1132:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1132:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1150,
                        "indexed": false,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1152,
                        "src": "1153:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1153:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1131:31:1"
                  },
                  "src": "1114:49:1"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "name": "balanceOf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1169:65:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1155,
                    "keyType": {
                      "id": 1153,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1178:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1169:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1154,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1189:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "allowance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1240:65:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1161,
                    "keyType": {
                      "id": 1157,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1249:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1240:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 1160,
                      "keyType": {
                        "id": 1158,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1269:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1260:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 1159,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1168,
                    "nodeType": "Block",
                    "src": "1338:26:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1165,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1188,
                            "src": "1348:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1348:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1167,
                        "nodeType": "ExpressionStatement",
                        "src": "1348:9:1"
                      }
                    ]
                  },
                  "id": 1169,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1320:2:1"
                  },
                  "payable": true,
                  "returnParameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1338:0:1"
                  },
                  "scope": 1357,
                  "src": "1312:52:1",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1187,
                    "nodeType": "Block",
                    "src": "1403:91:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1172,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "1413:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1175,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1173,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1423:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1423:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1413:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1176,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "1438:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1438:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1413:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1179,
                        "nodeType": "ExpressionStatement",
                        "src": "1413:34:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1181,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1465:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1465:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1183,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1477:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1477:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1180,
                            "name": "Deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "1457:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1457:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "1457:30:1"
                      }
                    ]
                  },
                  "id": 1188,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "deposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1385:2:1"
                  },
                  "payable": true,
                  "returnParameters": {
                    "id": 1171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1403:0:1"
                  },
                  "scope": 1357,
                  "src": "1369:125:1",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1223,
                    "nodeType": "Block",
                    "src": "1534:163:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1194,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1156,
                                  "src": "1552:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1197,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1195,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1369,
                                    "src": "1562:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1562:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1552:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1198,
                                "name": "wad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1190,
                                "src": "1577:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1552:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1193,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "1544:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1201,
                        "nodeType": "ExpressionStatement",
                        "src": "1544:37:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1202,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "1591:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1205,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1601:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1601:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1591:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1206,
                            "name": "wad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "1616:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1591:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1208,
                        "nodeType": "ExpressionStatement",
                        "src": "1591:28:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1214,
                              "name": "wad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "1649:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1209,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1629:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1629:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1629:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1629:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ExpressionStatement",
                        "src": "1629:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1218,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1674:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1674:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1220,
                              "name": "wad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "1686:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1217,
                            "name": "Withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1152,
                            "src": "1663:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1663:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1222,
                        "nodeType": "ExpressionStatement",
                        "src": "1663:27:1"
                      }
                    ]
                  },
                  "id": 1224,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1190,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1224,
                        "src": "1517:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1189,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1517:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1516:10:1"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1534:0:1"
                  },
                  "scope": 1357,
                  "src": "1499:198:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1232,
                    "nodeType": "Block",
                    "src": "1753:36:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1229,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1392,
                            "src": "1770:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH9_$1357",
                              "typeString": "contract WETH9"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1770:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1228,
                        "id": 1231,
                        "nodeType": "Return",
                        "src": "1763:19:1"
                      }
                    ]
                  },
                  "id": 1233,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1723:2:1"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1747:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1746:6:1"
                  },
                  "scope": 1357,
                  "src": "1703:86:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "1857:110:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1242,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1162,
                                "src": "1867:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1246,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1243,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "1877:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1877:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1867:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1247,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1245,
                              "name": "guy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "1889:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1867:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1248,
                            "name": "wad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "1896:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1867:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1250,
                        "nodeType": "ExpressionStatement",
                        "src": "1867:32:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1252,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "1918:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1918:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1254,
                              "name": "guy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "1930:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1255,
                              "name": "wad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1237,
                              "src": "1935:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1251,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "1909:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1909:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1257,
                        "nodeType": "ExpressionStatement",
                        "src": "1909:30:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1956:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1241,
                        "id": 1259,
                        "nodeType": "Return",
                        "src": "1949:11:1"
                      }
                    ]
                  },
                  "id": 1261,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1235,
                        "name": "guy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1812:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1825:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1825:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1811:23:1"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1240,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1851:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1850:6:1"
                  },
                  "scope": 1357,
                  "src": "1795:172:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1277,
                    "nodeType": "Block",
                    "src": "2036:58:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "2066:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2066:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1273,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "2078:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1274,
                              "name": "wad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "2083:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1270,
                            "name": "transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "2053:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2053:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1269,
                        "id": 1276,
                        "nodeType": "Return",
                        "src": "2046:41:1"
                      }
                    ]
                  },
                  "id": 1278,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1263,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "1991:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1991:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1265,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "2004:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1264,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2004:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1990:23:1"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1268,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "2030:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1267,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2030:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2029:6:1"
                  },
                  "scope": 1357,
                  "src": "1973:121:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1355,
                    "nodeType": "Block",
                    "src": "2200:355:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1290,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1156,
                                  "src": "2218:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1292,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1291,
                                  "name": "src",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "2228:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2218:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1293,
                                "name": "wad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1284,
                                "src": "2236:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2218:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1289,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "2210:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2210:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1296,
                        "nodeType": "ExpressionStatement",
                        "src": "2210:30:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1297,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "2255:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1298,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "2262:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2262:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2255:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1301,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1162,
                                  "src": "2276:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 1303,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1302,
                                  "name": "src",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "2286:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2276:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1306,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1304,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "2291:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2291:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2276:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "2311:2:1",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2312:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_-1_by_1",
                                    "typeString": "int_const -1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_-1_by_1",
                                    "typeString": "int_const -1"
                                  }
                                ],
                                "id": 1307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2306:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2306:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2276:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2255:59:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1334,
                        "nodeType": "IfStatement",
                        "src": "2251:179:1",
                        "trueBody": {
                          "id": 1333,
                          "nodeType": "Block",
                          "src": "2316:114:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1314,
                                          "name": "allowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1162,
                                          "src": "2338:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 1316,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1315,
                                          "name": "src",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1280,
                                          "src": "2348:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2338:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1319,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1317,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1369,
                                          "src": "2353:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1318,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "2353:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2338:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 1320,
                                      "name": "wad",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1284,
                                      "src": "2368:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2338:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1313,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1372,
                                  "src": "2330:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2330:42:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1323,
                              "nodeType": "ExpressionStatement",
                              "src": "2330:42:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1324,
                                      "name": "allowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1162,
                                      "src": "2386:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1328,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1325,
                                      "name": "src",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1280,
                                      "src": "2396:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2386:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1329,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1326,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1369,
                                      "src": "2401:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2401:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2386:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1330,
                                  "name": "wad",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1284,
                                  "src": "2416:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2386:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1332,
                              "nodeType": "ExpressionStatement",
                              "src": "2386:33:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1335,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "2440:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1337,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1336,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "2450:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2440:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1338,
                            "name": "wad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "2458:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2440:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1340,
                        "nodeType": "ExpressionStatement",
                        "src": "2440:21:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1341,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "2471:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1343,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1342,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2481:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2471:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "wad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "2489:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2471:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1346,
                        "nodeType": "ExpressionStatement",
                        "src": "2471:21:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1348,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "2512:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1349,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2517:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1350,
                              "name": "wad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1284,
                              "src": "2522:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1347,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "2503:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2503:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1352,
                        "nodeType": "ExpressionStatement",
                        "src": "2503:23:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2544:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1288,
                        "id": 1354,
                        "nodeType": "Return",
                        "src": "2537:11:1"
                      }
                    ]
                  },
                  "id": 1356,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1280,
                        "name": "src",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "2122:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2122:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1282,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "2135:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2135:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1284,
                        "name": "wad",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "2148:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2148:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2121:36:1"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 1288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1287,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "2190:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1286,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2190:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2189:6:1"
                  },
                  "scope": 1357,
                  "src": "2100:455:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1358,
              "src": "779:1778:1"
            }
          ],
          "src": "753:36960:1"
        },
        "id": 1,
        "legacyAST": {
          "attributes": {
            "absolutePath": "contracts/WETH.sol",
            "exportedSymbols": {
              "WETH9": [
                1357
              ]
            }
          },
          "children": [
            {
              "attributes": {
                "literals": [
                  "solidity",
                  "^",
                  "0.4",
                  ".18"
                ]
              },
              "id": 1115,
              "name": "PragmaDirective",
              "src": "753:24:1"
            },
            {
              "attributes": {
                "baseContracts": [
                  null
                ],
                "contractDependencies": [
                  null
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                  1357
                ],
                "name": "WETH9",
                "scope": 1358
              },
              "children": [
                {
                  "attributes": {
                    "constant": false,
                    "name": "name",
                    "scope": 1357,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 1116,
                      "name": "ElementaryTypeName",
                      "src": "800:6:1"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "57726170706564204574686572",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "string",
                        "type": "literal_string \"Wrapped Ether\"",
                        "value": "Wrapped Ether"
                      },
                      "id": 1117,
                      "name": "Literal",
                      "src": "825:15:1"
                    }
                  ],
                  "id": 1118,
                  "name": "VariableDeclaration",
                  "src": "800:40:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "symbol",
                    "scope": 1357,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "string storage ref",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "string",
                        "type": "string storage pointer"
                      },
                      "id": 1119,
                      "name": "ElementaryTypeName",
                      "src": "846:6:1"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "57455448",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "string",
                        "type": "literal_string \"WETH\"",
                        "value": "WETH"
                      },
                      "id": 1120,
                      "name": "Literal",
                      "src": "871:6:1"
                    }
                  ],
                  "id": 1121,
                  "name": "VariableDeclaration",
                  "src": "846:31:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "decimals",
                    "scope": 1357,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "uint8",
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "name": "uint8",
                        "type": "uint8"
                      },
                      "id": 1122,
                      "name": "ElementaryTypeName",
                      "src": "883:5:1"
                    },
                    {
                      "attributes": {
                        "argumentTypes": null,
                        "hexvalue": "3138",
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "subdenomination": null,
                        "token": "number",
                        "type": "int_const 18",
                        "value": "18"
                      },
                      "id": 1123,
                      "name": "Literal",
                      "src": "908:2:1"
                    }
                  ],
                  "id": 1124,
                  "name": "VariableDeclaration",
                  "src": "883:27:1"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Approval"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "src",
                            "scope": 1132,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1125,
                              "name": "ElementaryTypeName",
                              "src": "933:7:1"
                            }
                          ],
                          "id": 1126,
                          "name": "VariableDeclaration",
                          "src": "933:19:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "guy",
                            "scope": 1132,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1127,
                              "name": "ElementaryTypeName",
                              "src": "954:7:1"
                            }
                          ],
                          "id": 1128,
                          "name": "VariableDeclaration",
                          "src": "954:19:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "wad",
                            "scope": 1132,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1129,
                              "name": "ElementaryTypeName",
                              "src": "975:4:1"
                            }
                          ],
                          "id": 1130,
                          "name": "VariableDeclaration",
                          "src": "975:8:1"
                        }
                      ],
                      "id": 1131,
                      "name": "ParameterList",
                      "src": "932:52:1"
                    }
                  ],
                  "id": 1132,
                  "name": "EventDefinition",
                  "src": "917:68:1"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Transfer"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "src",
                            "scope": 1140,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1133,
                              "name": "ElementaryTypeName",
                              "src": "1006:7:1"
                            }
                          ],
                          "id": 1134,
                          "name": "VariableDeclaration",
                          "src": "1006:19:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "dst",
                            "scope": 1140,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1135,
                              "name": "ElementaryTypeName",
                              "src": "1027:7:1"
                            }
                          ],
                          "id": 1136,
                          "name": "VariableDeclaration",
                          "src": "1027:19:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "wad",
                            "scope": 1140,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1137,
                              "name": "ElementaryTypeName",
                              "src": "1048:4:1"
                            }
                          ],
                          "id": 1138,
                          "name": "VariableDeclaration",
                          "src": "1048:8:1"
                        }
                      ],
                      "id": 1139,
                      "name": "ParameterList",
                      "src": "1005:52:1"
                    }
                  ],
                  "id": 1140,
                  "name": "EventDefinition",
                  "src": "990:68:1"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Deposit"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "dst",
                            "scope": 1146,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1141,
                              "name": "ElementaryTypeName",
                              "src": "1078:7:1"
                            }
                          ],
                          "id": 1142,
                          "name": "VariableDeclaration",
                          "src": "1078:19:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "wad",
                            "scope": 1146,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1143,
                              "name": "ElementaryTypeName",
                              "src": "1099:4:1"
                            }
                          ],
                          "id": 1144,
                          "name": "VariableDeclaration",
                          "src": "1099:8:1"
                        }
                      ],
                      "id": 1145,
                      "name": "ParameterList",
                      "src": "1077:31:1"
                    }
                  ],
                  "id": 1146,
                  "name": "EventDefinition",
                  "src": "1063:46:1"
                },
                {
                  "attributes": {
                    "anonymous": false,
                    "name": "Withdrawal"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": true,
                            "name": "src",
                            "scope": 1152,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1147,
                              "name": "ElementaryTypeName",
                              "src": "1132:7:1"
                            }
                          ],
                          "id": 1148,
                          "name": "VariableDeclaration",
                          "src": "1132:19:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "indexed": false,
                            "name": "wad",
                            "scope": 1152,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1149,
                              "name": "ElementaryTypeName",
                              "src": "1153:4:1"
                            }
                          ],
                          "id": 1150,
                          "name": "VariableDeclaration",
                          "src": "1153:8:1"
                        }
                      ],
                      "id": 1151,
                      "name": "ParameterList",
                      "src": "1131:31:1"
                    }
                  ],
                  "id": 1152,
                  "name": "EventDefinition",
                  "src": "1114:49:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "balanceOf",
                    "scope": 1357,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => uint256)",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => uint256)"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 1153,
                          "name": "ElementaryTypeName",
                          "src": "1178:7:1"
                        },
                        {
                          "attributes": {
                            "name": "uint",
                            "type": "uint256"
                          },
                          "id": 1154,
                          "name": "ElementaryTypeName",
                          "src": "1189:4:1"
                        }
                      ],
                      "id": 1155,
                      "name": "Mapping",
                      "src": "1169:25:1"
                    }
                  ],
                  "id": 1156,
                  "name": "VariableDeclaration",
                  "src": "1169:65:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "name": "allowance",
                    "scope": 1357,
                    "stateVariable": true,
                    "storageLocation": "default",
                    "type": "mapping(address => mapping(address => uint256))",
                    "value": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "type": "mapping(address => mapping(address => uint256))"
                      },
                      "children": [
                        {
                          "attributes": {
                            "name": "address",
                            "type": "address"
                          },
                          "id": 1157,
                          "name": "ElementaryTypeName",
                          "src": "1249:7:1"
                        },
                        {
                          "attributes": {
                            "type": "mapping(address => uint256)"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1158,
                              "name": "ElementaryTypeName",
                              "src": "1269:7:1"
                            },
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1159,
                              "name": "ElementaryTypeName",
                              "src": "1280:4:1"
                            }
                          ],
                          "id": 1160,
                          "name": "Mapping",
                          "src": "1260:25:1"
                        }
                      ],
                      "id": 1161,
                      "name": "Mapping",
                      "src": "1240:46:1"
                    }
                  ],
                  "id": 1162,
                  "name": "VariableDeclaration",
                  "src": "1240:65:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "",
                    "payable": true,
                    "scope": 1357,
                    "stateMutability": "payable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1163,
                      "name": "ParameterList",
                      "src": "1320:2:1"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1164,
                      "name": "ParameterList",
                      "src": "1338:0:1"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "arguments": [
                                  null
                                ],
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      null
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1188,
                                    "type": "function ()",
                                    "value": "deposit"
                                  },
                                  "id": 1165,
                                  "name": "Identifier",
                                  "src": "1348:7:1"
                                }
                              ],
                              "id": 1166,
                              "name": "FunctionCall",
                              "src": "1348:9:1"
                            }
                          ],
                          "id": 1167,
                          "name": "ExpressionStatement",
                          "src": "1348:9:1"
                        }
                      ],
                      "id": 1168,
                      "name": "Block",
                      "src": "1338:26:1"
                    }
                  ],
                  "id": 1169,
                  "name": "FunctionDefinition",
                  "src": "1312:52:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "deposit",
                    "payable": true,
                    "scope": 1357,
                    "stateMutability": "payable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1170,
                      "name": "ParameterList",
                      "src": "1385:2:1"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1171,
                      "name": "ParameterList",
                      "src": "1403:0:1"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "+=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1156,
                                        "type": "mapping(address => uint256)",
                                        "value": "balanceOf"
                                      },
                                      "id": 1172,
                                      "name": "Identifier",
                                      "src": "1413:9:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 1173,
                                          "name": "Identifier",
                                          "src": "1423:3:1"
                                        }
                                      ],
                                      "id": 1174,
                                      "name": "MemberAccess",
                                      "src": "1423:10:1"
                                    }
                                  ],
                                  "id": 1175,
                                  "name": "IndexAccess",
                                  "src": "1413:21:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "value",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1176,
                                      "name": "Identifier",
                                      "src": "1438:3:1"
                                    }
                                  ],
                                  "id": 1177,
                                  "name": "MemberAccess",
                                  "src": "1438:9:1"
                                }
                              ],
                              "id": 1178,
                              "name": "Assignment",
                              "src": "1413:34:1"
                            }
                          ],
                          "id": 1179,
                          "name": "ExpressionStatement",
                          "src": "1413:34:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1146,
                                    "type": "function (address,uint256)",
                                    "value": "Deposit"
                                  },
                                  "id": 1180,
                                  "name": "Identifier",
                                  "src": "1457:7:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1181,
                                      "name": "Identifier",
                                      "src": "1465:3:1"
                                    }
                                  ],
                                  "id": 1182,
                                  "name": "MemberAccess",
                                  "src": "1465:10:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "value",
                                    "referencedDeclaration": null,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1183,
                                      "name": "Identifier",
                                      "src": "1477:3:1"
                                    }
                                  ],
                                  "id": 1184,
                                  "name": "MemberAccess",
                                  "src": "1477:9:1"
                                }
                              ],
                              "id": 1185,
                              "name": "FunctionCall",
                              "src": "1457:30:1"
                            }
                          ],
                          "id": 1186,
                          "name": "ExpressionStatement",
                          "src": "1457:30:1"
                        }
                      ],
                      "id": 1187,
                      "name": "Block",
                      "src": "1403:91:1"
                    }
                  ],
                  "id": 1188,
                  "name": "FunctionDefinition",
                  "src": "1369:125:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "withdraw",
                    "payable": false,
                    "scope": 1357,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "wad",
                            "scope": 1224,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1189,
                              "name": "ElementaryTypeName",
                              "src": "1517:4:1"
                            }
                          ],
                          "id": 1190,
                          "name": "VariableDeclaration",
                          "src": "1517:8:1"
                        }
                      ],
                      "id": 1191,
                      "name": "ParameterList",
                      "src": "1516:10:1"
                    },
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1192,
                      "name": "ParameterList",
                      "src": "1534:0:1"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1193,
                                  "name": "Identifier",
                                  "src": "1544:7:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1156,
                                            "type": "mapping(address => uint256)",
                                            "value": "balanceOf"
                                          },
                                          "id": 1194,
                                          "name": "Identifier",
                                          "src": "1552:9:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1369,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 1195,
                                              "name": "Identifier",
                                              "src": "1562:3:1"
                                            }
                                          ],
                                          "id": 1196,
                                          "name": "MemberAccess",
                                          "src": "1562:10:1"
                                        }
                                      ],
                                      "id": 1197,
                                      "name": "IndexAccess",
                                      "src": "1552:21:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1190,
                                        "type": "uint256",
                                        "value": "wad"
                                      },
                                      "id": 1198,
                                      "name": "Identifier",
                                      "src": "1577:3:1"
                                    }
                                  ],
                                  "id": 1199,
                                  "name": "BinaryOperation",
                                  "src": "1552:28:1"
                                }
                              ],
                              "id": 1200,
                              "name": "FunctionCall",
                              "src": "1544:37:1"
                            }
                          ],
                          "id": 1201,
                          "name": "ExpressionStatement",
                          "src": "1544:37:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1156,
                                        "type": "mapping(address => uint256)",
                                        "value": "balanceOf"
                                      },
                                      "id": 1202,
                                      "name": "Identifier",
                                      "src": "1591:9:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 1203,
                                          "name": "Identifier",
                                          "src": "1601:3:1"
                                        }
                                      ],
                                      "id": 1204,
                                      "name": "MemberAccess",
                                      "src": "1601:10:1"
                                    }
                                  ],
                                  "id": 1205,
                                  "name": "IndexAccess",
                                  "src": "1591:21:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1190,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1206,
                                  "name": "Identifier",
                                  "src": "1616:3:1"
                                }
                              ],
                              "id": 1207,
                              "name": "Assignment",
                              "src": "1591:28:1"
                            }
                          ],
                          "id": 1208,
                          "name": "ExpressionStatement",
                          "src": "1591:28:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "transfer",
                                    "referencedDeclaration": null,
                                    "type": "function (uint256)"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 1209,
                                          "name": "Identifier",
                                          "src": "1629:3:1"
                                        }
                                      ],
                                      "id": 1212,
                                      "name": "MemberAccess",
                                      "src": "1629:10:1"
                                    }
                                  ],
                                  "id": 1213,
                                  "name": "MemberAccess",
                                  "src": "1629:19:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1190,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1214,
                                  "name": "Identifier",
                                  "src": "1649:3:1"
                                }
                              ],
                              "id": 1215,
                              "name": "FunctionCall",
                              "src": "1629:24:1"
                            }
                          ],
                          "id": 1216,
                          "name": "ExpressionStatement",
                          "src": "1629:24:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1152,
                                    "type": "function (address,uint256)",
                                    "value": "Withdrawal"
                                  },
                                  "id": 1217,
                                  "name": "Identifier",
                                  "src": "1663:10:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1218,
                                      "name": "Identifier",
                                      "src": "1674:3:1"
                                    }
                                  ],
                                  "id": 1219,
                                  "name": "MemberAccess",
                                  "src": "1674:10:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1190,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1220,
                                  "name": "Identifier",
                                  "src": "1686:3:1"
                                }
                              ],
                              "id": 1221,
                              "name": "FunctionCall",
                              "src": "1663:27:1"
                            }
                          ],
                          "id": 1222,
                          "name": "ExpressionStatement",
                          "src": "1663:27:1"
                        }
                      ],
                      "id": 1223,
                      "name": "Block",
                      "src": "1534:163:1"
                    }
                  ],
                  "id": 1224,
                  "name": "FunctionDefinition",
                  "src": "1499:198:1"
                },
                {
                  "attributes": {
                    "constant": true,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "totalSupply",
                    "payable": false,
                    "scope": 1357,
                    "stateMutability": "view",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "attributes": {
                        "parameters": [
                          null
                        ]
                      },
                      "children": [],
                      "id": 1225,
                      "name": "ParameterList",
                      "src": "1723:2:1"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 1233,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1226,
                              "name": "ElementaryTypeName",
                              "src": "1747:4:1"
                            }
                          ],
                          "id": 1227,
                          "name": "VariableDeclaration",
                          "src": "1747:4:1"
                        }
                      ],
                      "id": 1228,
                      "name": "ParameterList",
                      "src": "1746:6:1"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 1228
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "member_name": "balance",
                                "referencedDeclaration": null,
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1392,
                                    "type": "contract WETH9",
                                    "value": "this"
                                  },
                                  "id": 1229,
                                  "name": "Identifier",
                                  "src": "1770:4:1"
                                }
                              ],
                              "id": 1230,
                              "name": "MemberAccess",
                              "src": "1770:12:1"
                            }
                          ],
                          "id": 1231,
                          "name": "Return",
                          "src": "1763:19:1"
                        }
                      ],
                      "id": 1232,
                      "name": "Block",
                      "src": "1753:36:1"
                    }
                  ],
                  "id": 1233,
                  "name": "FunctionDefinition",
                  "src": "1703:86:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "approve",
                    "payable": false,
                    "scope": 1357,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "guy",
                            "scope": 1261,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1234,
                              "name": "ElementaryTypeName",
                              "src": "1812:7:1"
                            }
                          ],
                          "id": 1235,
                          "name": "VariableDeclaration",
                          "src": "1812:11:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "wad",
                            "scope": 1261,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1236,
                              "name": "ElementaryTypeName",
                              "src": "1825:4:1"
                            }
                          ],
                          "id": 1237,
                          "name": "VariableDeclaration",
                          "src": "1825:8:1"
                        }
                      ],
                      "id": 1238,
                      "name": "ParameterList",
                      "src": "1811:23:1"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 1261,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1239,
                              "name": "ElementaryTypeName",
                              "src": "1851:4:1"
                            }
                          ],
                          "id": 1240,
                          "name": "VariableDeclaration",
                          "src": "1851:4:1"
                        }
                      ],
                      "id": 1241,
                      "name": "ParameterList",
                      "src": "1850:6:1"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "mapping(address => uint256)"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1162,
                                            "type": "mapping(address => mapping(address => uint256))",
                                            "value": "allowance"
                                          },
                                          "id": 1242,
                                          "name": "Identifier",
                                          "src": "1867:9:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1369,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 1243,
                                              "name": "Identifier",
                                              "src": "1877:3:1"
                                            }
                                          ],
                                          "id": 1244,
                                          "name": "MemberAccess",
                                          "src": "1877:10:1"
                                        }
                                      ],
                                      "id": 1246,
                                      "name": "IndexAccess",
                                      "src": "1867:21:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1235,
                                        "type": "address",
                                        "value": "guy"
                                      },
                                      "id": 1245,
                                      "name": "Identifier",
                                      "src": "1889:3:1"
                                    }
                                  ],
                                  "id": 1247,
                                  "name": "IndexAccess",
                                  "src": "1867:26:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1237,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1248,
                                  "name": "Identifier",
                                  "src": "1896:3:1"
                                }
                              ],
                              "id": 1249,
                              "name": "Assignment",
                              "src": "1867:32:1"
                            }
                          ],
                          "id": 1250,
                          "name": "ExpressionStatement",
                          "src": "1867:32:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1132,
                                    "type": "function (address,address,uint256)",
                                    "value": "Approval"
                                  },
                                  "id": 1251,
                                  "name": "Identifier",
                                  "src": "1909:8:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1252,
                                      "name": "Identifier",
                                      "src": "1918:3:1"
                                    }
                                  ],
                                  "id": 1253,
                                  "name": "MemberAccess",
                                  "src": "1918:10:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1235,
                                    "type": "address",
                                    "value": "guy"
                                  },
                                  "id": 1254,
                                  "name": "Identifier",
                                  "src": "1930:3:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1237,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1255,
                                  "name": "Identifier",
                                  "src": "1935:3:1"
                                }
                              ],
                              "id": 1256,
                              "name": "FunctionCall",
                              "src": "1909:30:1"
                            }
                          ],
                          "id": 1257,
                          "name": "ExpressionStatement",
                          "src": "1909:30:1"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 1241
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 1258,
                              "name": "Literal",
                              "src": "1956:4:1"
                            }
                          ],
                          "id": 1259,
                          "name": "Return",
                          "src": "1949:11:1"
                        }
                      ],
                      "id": 1260,
                      "name": "Block",
                      "src": "1857:110:1"
                    }
                  ],
                  "id": 1261,
                  "name": "FunctionDefinition",
                  "src": "1795:172:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transfer",
                    "payable": false,
                    "scope": 1357,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "dst",
                            "scope": 1278,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1262,
                              "name": "ElementaryTypeName",
                              "src": "1991:7:1"
                            }
                          ],
                          "id": 1263,
                          "name": "VariableDeclaration",
                          "src": "1991:11:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "wad",
                            "scope": 1278,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1264,
                              "name": "ElementaryTypeName",
                              "src": "2004:4:1"
                            }
                          ],
                          "id": 1265,
                          "name": "VariableDeclaration",
                          "src": "2004:8:1"
                        }
                      ],
                      "id": 1266,
                      "name": "ParameterList",
                      "src": "1990:23:1"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 1278,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1267,
                              "name": "ElementaryTypeName",
                              "src": "2030:4:1"
                            }
                          ],
                          "id": 1268,
                          "name": "VariableDeclaration",
                          "src": "2030:4:1"
                        }
                      ],
                      "id": 1269,
                      "name": "ParameterList",
                      "src": "2029:6:1"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "functionReturnParameters": 1269
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "bool",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1356,
                                    "type": "function (address,address,uint256) returns (bool)",
                                    "value": "transferFrom"
                                  },
                                  "id": 1270,
                                  "name": "Identifier",
                                  "src": "2053:12:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "member_name": "sender",
                                    "referencedDeclaration": null,
                                    "type": "address"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1369,
                                        "type": "msg",
                                        "value": "msg"
                                      },
                                      "id": 1271,
                                      "name": "Identifier",
                                      "src": "2066:3:1"
                                    }
                                  ],
                                  "id": 1272,
                                  "name": "MemberAccess",
                                  "src": "2066:10:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1263,
                                    "type": "address",
                                    "value": "dst"
                                  },
                                  "id": 1273,
                                  "name": "Identifier",
                                  "src": "2078:3:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1265,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1274,
                                  "name": "Identifier",
                                  "src": "2083:3:1"
                                }
                              ],
                              "id": 1275,
                              "name": "FunctionCall",
                              "src": "2053:34:1"
                            }
                          ],
                          "id": 1276,
                          "name": "Return",
                          "src": "2046:41:1"
                        }
                      ],
                      "id": 1277,
                      "name": "Block",
                      "src": "2036:58:1"
                    }
                  ],
                  "id": 1278,
                  "name": "FunctionDefinition",
                  "src": "1973:121:1"
                },
                {
                  "attributes": {
                    "constant": false,
                    "implemented": true,
                    "isConstructor": false,
                    "modifiers": [
                      null
                    ],
                    "name": "transferFrom",
                    "payable": false,
                    "scope": 1357,
                    "stateMutability": "nonpayable",
                    "superFunction": null,
                    "visibility": "public"
                  },
                  "children": [
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "src",
                            "scope": 1356,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1279,
                              "name": "ElementaryTypeName",
                              "src": "2122:7:1"
                            }
                          ],
                          "id": 1280,
                          "name": "VariableDeclaration",
                          "src": "2122:11:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "dst",
                            "scope": 1356,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "address",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "address",
                                "type": "address"
                              },
                              "id": 1281,
                              "name": "ElementaryTypeName",
                              "src": "2135:7:1"
                            }
                          ],
                          "id": 1282,
                          "name": "VariableDeclaration",
                          "src": "2135:11:1"
                        },
                        {
                          "attributes": {
                            "constant": false,
                            "name": "wad",
                            "scope": 1356,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "uint256",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "uint",
                                "type": "uint256"
                              },
                              "id": 1283,
                              "name": "ElementaryTypeName",
                              "src": "2148:4:1"
                            }
                          ],
                          "id": 1284,
                          "name": "VariableDeclaration",
                          "src": "2148:8:1"
                        }
                      ],
                      "id": 1285,
                      "name": "ParameterList",
                      "src": "2121:36:1"
                    },
                    {
                      "children": [
                        {
                          "attributes": {
                            "constant": false,
                            "name": "",
                            "scope": 1356,
                            "stateVariable": false,
                            "storageLocation": "default",
                            "type": "bool",
                            "value": null,
                            "visibility": "internal"
                          },
                          "children": [
                            {
                              "attributes": {
                                "name": "bool",
                                "type": "bool"
                              },
                              "id": 1286,
                              "name": "ElementaryTypeName",
                              "src": "2190:4:1"
                            }
                          ],
                          "id": 1287,
                          "name": "VariableDeclaration",
                          "src": "2190:4:1"
                        }
                      ],
                      "id": 1288,
                      "name": "ParameterList",
                      "src": "2189:6:1"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1372,
                                    "type": "function (bool) pure",
                                    "value": "require"
                                  },
                                  "id": 1289,
                                  "name": "Identifier",
                                  "src": "2210:7:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": ">=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1156,
                                            "type": "mapping(address => uint256)",
                                            "value": "balanceOf"
                                          },
                                          "id": 1290,
                                          "name": "Identifier",
                                          "src": "2218:9:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1280,
                                            "type": "address",
                                            "value": "src"
                                          },
                                          "id": 1291,
                                          "name": "Identifier",
                                          "src": "2228:3:1"
                                        }
                                      ],
                                      "id": 1292,
                                      "name": "IndexAccess",
                                      "src": "2218:14:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1284,
                                        "type": "uint256",
                                        "value": "wad"
                                      },
                                      "id": 1293,
                                      "name": "Identifier",
                                      "src": "2236:3:1"
                                    }
                                  ],
                                  "id": 1294,
                                  "name": "BinaryOperation",
                                  "src": "2218:21:1"
                                }
                              ],
                              "id": 1295,
                              "name": "FunctionCall",
                              "src": "2210:30:1"
                            }
                          ],
                          "id": 1296,
                          "name": "ExpressionStatement",
                          "src": "2210:30:1"
                        },
                        {
                          "attributes": {
                            "falseBody": null
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "&&",
                                "type": "bool"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1280,
                                        "type": "address",
                                        "value": "src"
                                      },
                                      "id": 1297,
                                      "name": "Identifier",
                                      "src": "2255:3:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "member_name": "sender",
                                        "referencedDeclaration": null,
                                        "type": "address"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1369,
                                            "type": "msg",
                                            "value": "msg"
                                          },
                                          "id": 1298,
                                          "name": "Identifier",
                                          "src": "2262:3:1"
                                        }
                                      ],
                                      "id": 1299,
                                      "name": "MemberAccess",
                                      "src": "2262:10:1"
                                    }
                                  ],
                                  "id": 1300,
                                  "name": "BinaryOperation",
                                  "src": "2255:17:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "operator": "!=",
                                    "type": "bool"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "type": "mapping(address => uint256)"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1162,
                                                "type": "mapping(address => mapping(address => uint256))",
                                                "value": "allowance"
                                              },
                                              "id": 1301,
                                              "name": "Identifier",
                                              "src": "2276:9:1"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1280,
                                                "type": "address",
                                                "value": "src"
                                              },
                                              "id": 1302,
                                              "name": "Identifier",
                                              "src": "2286:3:1"
                                            }
                                          ],
                                          "id": 1303,
                                          "name": "IndexAccess",
                                          "src": "2276:14:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "member_name": "sender",
                                            "referencedDeclaration": null,
                                            "type": "address"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1369,
                                                "type": "msg",
                                                "value": "msg"
                                              },
                                              "id": 1304,
                                              "name": "Identifier",
                                              "src": "2291:3:1"
                                            }
                                          ],
                                          "id": 1305,
                                          "name": "MemberAccess",
                                          "src": "2291:10:1"
                                        }
                                      ],
                                      "id": 1306,
                                      "name": "IndexAccess",
                                      "src": "2276:26:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "uint256",
                                        "type_conversion": true
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_-1_by_1",
                                                "typeString": "int_const -1"
                                              }
                                            ],
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "type": "type(uint256)",
                                            "value": "uint"
                                          },
                                          "id": 1307,
                                          "name": "ElementaryTypeNameExpression",
                                          "src": "2306:4:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "operator": "-",
                                            "prefix": true,
                                            "type": "int_const -1"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "hexvalue": "31",
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "subdenomination": null,
                                                "token": "number",
                                                "type": "int_const 1",
                                                "value": "1"
                                              },
                                              "id": 1308,
                                              "name": "Literal",
                                              "src": "2312:1:1"
                                            }
                                          ],
                                          "id": 1309,
                                          "name": "UnaryOperation",
                                          "src": "2311:2:1"
                                        }
                                      ],
                                      "id": 1310,
                                      "name": "FunctionCall",
                                      "src": "2306:8:1"
                                    }
                                  ],
                                  "id": 1311,
                                  "name": "BinaryOperation",
                                  "src": "2276:38:1"
                                }
                              ],
                              "id": 1312,
                              "name": "BinaryOperation",
                              "src": "2255:59:1"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "isStructConstructorCall": false,
                                        "lValueRequested": false,
                                        "names": [
                                          null
                                        ],
                                        "type": "tuple()",
                                        "type_conversion": false
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            ],
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1372,
                                            "type": "function (bool) pure",
                                            "value": "require"
                                          },
                                          "id": 1313,
                                          "name": "Identifier",
                                          "src": "2330:7:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "operator": ">=",
                                            "type": "bool"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "uint256"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "type": "mapping(address => uint256)"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 1162,
                                                        "type": "mapping(address => mapping(address => uint256))",
                                                        "value": "allowance"
                                                      },
                                                      "id": 1314,
                                                      "name": "Identifier",
                                                      "src": "2338:9:1"
                                                    },
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 1280,
                                                        "type": "address",
                                                        "value": "src"
                                                      },
                                                      "id": 1315,
                                                      "name": "Identifier",
                                                      "src": "2348:3:1"
                                                    }
                                                  ],
                                                  "id": 1316,
                                                  "name": "IndexAccess",
                                                  "src": "2338:14:1"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "member_name": "sender",
                                                    "referencedDeclaration": null,
                                                    "type": "address"
                                                  },
                                                  "children": [
                                                    {
                                                      "attributes": {
                                                        "argumentTypes": null,
                                                        "overloadedDeclarations": [
                                                          null
                                                        ],
                                                        "referencedDeclaration": 1369,
                                                        "type": "msg",
                                                        "value": "msg"
                                                      },
                                                      "id": 1317,
                                                      "name": "Identifier",
                                                      "src": "2353:3:1"
                                                    }
                                                  ],
                                                  "id": 1318,
                                                  "name": "MemberAccess",
                                                  "src": "2353:10:1"
                                                }
                                              ],
                                              "id": 1319,
                                              "name": "IndexAccess",
                                              "src": "2338:26:1"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "overloadedDeclarations": [
                                                  null
                                                ],
                                                "referencedDeclaration": 1284,
                                                "type": "uint256",
                                                "value": "wad"
                                              },
                                              "id": 1320,
                                              "name": "Identifier",
                                              "src": "2368:3:1"
                                            }
                                          ],
                                          "id": 1321,
                                          "name": "BinaryOperation",
                                          "src": "2338:33:1"
                                        }
                                      ],
                                      "id": 1322,
                                      "name": "FunctionCall",
                                      "src": "2330:42:1"
                                    }
                                  ],
                                  "id": 1323,
                                  "name": "ExpressionStatement",
                                  "src": "2330:42:1"
                                },
                                {
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "operator": "-=",
                                        "type": "uint256"
                                      },
                                      "children": [
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "type": "uint256"
                                          },
                                          "children": [
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "type": "mapping(address => uint256)"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1162,
                                                    "type": "mapping(address => mapping(address => uint256))",
                                                    "value": "allowance"
                                                  },
                                                  "id": 1324,
                                                  "name": "Identifier",
                                                  "src": "2386:9:1"
                                                },
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1280,
                                                    "type": "address",
                                                    "value": "src"
                                                  },
                                                  "id": 1325,
                                                  "name": "Identifier",
                                                  "src": "2396:3:1"
                                                }
                                              ],
                                              "id": 1328,
                                              "name": "IndexAccess",
                                              "src": "2386:14:1"
                                            },
                                            {
                                              "attributes": {
                                                "argumentTypes": null,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "member_name": "sender",
                                                "referencedDeclaration": null,
                                                "type": "address"
                                              },
                                              "children": [
                                                {
                                                  "attributes": {
                                                    "argumentTypes": null,
                                                    "overloadedDeclarations": [
                                                      null
                                                    ],
                                                    "referencedDeclaration": 1369,
                                                    "type": "msg",
                                                    "value": "msg"
                                                  },
                                                  "id": 1326,
                                                  "name": "Identifier",
                                                  "src": "2401:3:1"
                                                }
                                              ],
                                              "id": 1327,
                                              "name": "MemberAccess",
                                              "src": "2401:10:1"
                                            }
                                          ],
                                          "id": 1329,
                                          "name": "IndexAccess",
                                          "src": "2386:26:1"
                                        },
                                        {
                                          "attributes": {
                                            "argumentTypes": null,
                                            "overloadedDeclarations": [
                                              null
                                            ],
                                            "referencedDeclaration": 1284,
                                            "type": "uint256",
                                            "value": "wad"
                                          },
                                          "id": 1330,
                                          "name": "Identifier",
                                          "src": "2416:3:1"
                                        }
                                      ],
                                      "id": 1331,
                                      "name": "Assignment",
                                      "src": "2386:33:1"
                                    }
                                  ],
                                  "id": 1332,
                                  "name": "ExpressionStatement",
                                  "src": "2386:33:1"
                                }
                              ],
                              "id": 1333,
                              "name": "Block",
                              "src": "2316:114:1"
                            }
                          ],
                          "id": 1334,
                          "name": "IfStatement",
                          "src": "2251:179:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "-=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1156,
                                        "type": "mapping(address => uint256)",
                                        "value": "balanceOf"
                                      },
                                      "id": 1335,
                                      "name": "Identifier",
                                      "src": "2440:9:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1280,
                                        "type": "address",
                                        "value": "src"
                                      },
                                      "id": 1336,
                                      "name": "Identifier",
                                      "src": "2450:3:1"
                                    }
                                  ],
                                  "id": 1337,
                                  "name": "IndexAccess",
                                  "src": "2440:14:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1284,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1338,
                                  "name": "Identifier",
                                  "src": "2458:3:1"
                                }
                              ],
                              "id": 1339,
                              "name": "Assignment",
                              "src": "2440:21:1"
                            }
                          ],
                          "id": 1340,
                          "name": "ExpressionStatement",
                          "src": "2440:21:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "operator": "+=",
                                "type": "uint256"
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "type": "uint256"
                                  },
                                  "children": [
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1156,
                                        "type": "mapping(address => uint256)",
                                        "value": "balanceOf"
                                      },
                                      "id": 1341,
                                      "name": "Identifier",
                                      "src": "2471:9:1"
                                    },
                                    {
                                      "attributes": {
                                        "argumentTypes": null,
                                        "overloadedDeclarations": [
                                          null
                                        ],
                                        "referencedDeclaration": 1282,
                                        "type": "address",
                                        "value": "dst"
                                      },
                                      "id": 1342,
                                      "name": "Identifier",
                                      "src": "2481:3:1"
                                    }
                                  ],
                                  "id": 1343,
                                  "name": "IndexAccess",
                                  "src": "2471:14:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1284,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1344,
                                  "name": "Identifier",
                                  "src": "2489:3:1"
                                }
                              ],
                              "id": 1345,
                              "name": "Assignment",
                              "src": "2471:21:1"
                            }
                          ],
                          "id": 1346,
                          "name": "ExpressionStatement",
                          "src": "2471:21:1"
                        },
                        {
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "isStructConstructorCall": false,
                                "lValueRequested": false,
                                "names": [
                                  null
                                ],
                                "type": "tuple()",
                                "type_conversion": false
                              },
                              "children": [
                                {
                                  "attributes": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1140,
                                    "type": "function (address,address,uint256)",
                                    "value": "Transfer"
                                  },
                                  "id": 1347,
                                  "name": "Identifier",
                                  "src": "2503:8:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1280,
                                    "type": "address",
                                    "value": "src"
                                  },
                                  "id": 1348,
                                  "name": "Identifier",
                                  "src": "2512:3:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1282,
                                    "type": "address",
                                    "value": "dst"
                                  },
                                  "id": 1349,
                                  "name": "Identifier",
                                  "src": "2517:3:1"
                                },
                                {
                                  "attributes": {
                                    "argumentTypes": null,
                                    "overloadedDeclarations": [
                                      null
                                    ],
                                    "referencedDeclaration": 1284,
                                    "type": "uint256",
                                    "value": "wad"
                                  },
                                  "id": 1350,
                                  "name": "Identifier",
                                  "src": "2522:3:1"
                                }
                              ],
                              "id": 1351,
                              "name": "FunctionCall",
                              "src": "2503:23:1"
                            }
                          ],
                          "id": 1352,
                          "name": "ExpressionStatement",
                          "src": "2503:23:1"
                        },
                        {
                          "attributes": {
                            "functionReturnParameters": 1288
                          },
                          "children": [
                            {
                              "attributes": {
                                "argumentTypes": null,
                                "hexvalue": "74727565",
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "subdenomination": null,
                                "token": "bool",
                                "type": "bool",
                                "value": "true"
                              },
                              "id": 1353,
                              "name": "Literal",
                              "src": "2544:4:1"
                            }
                          ],
                          "id": 1354,
                          "name": "Return",
                          "src": "2537:11:1"
                        }
                      ],
                      "id": 1355,
                      "name": "Block",
                      "src": "2200:355:1"
                    }
                  ],
                  "id": 1356,
                  "name": "FunctionDefinition",
                  "src": "2100:455:1"
                }
              ],
              "id": 1357,
              "name": "ContractDefinition",
              "src": "779:1778:1"
            }
          ],
          "id": 1358,
          "name": "SourceUnit",
          "src": "753:36960:1"
        }
      }
    }
  }
}
